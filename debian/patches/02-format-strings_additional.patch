diff -urpN -urN ori/ia64.c new/ia64.c
--- ori/ia64.c	2013-06-17 12:18:36.000000000 -0600
+++ new/ia64.c	2013-07-16 13:25:01.111146414 -0600
@@ -1504,7 +1504,7 @@ ia64_dis_filter(ulong vaddr, char *inbuf
 					output_radix));
 				if (IS_MODULE_VADDR(value) &&
 				    !strstr(buf2, "+"))
-					sprintf(p2, buf1);
+					sprintf(p2, "%s", buf1);
 			} 
 		} else {
 			p1 = &argv[argc-1][3];
@@ -1515,7 +1515,7 @@ ia64_dis_filter(ulong vaddr, char *inbuf
 					output_radix));
 				if (IS_MODULE_VADDR(value) &&
 				    !strstr(buf2, "+"))
-					sprintf(p2, buf1);
+					sprintf(p2, "%s", buf1);
 			}
 		}
 	}
diff -urpN -urN ori/ppc.c new/ppc.c
--- ori/ppc.c	2013-06-17 12:18:36.000000000 -0600
+++ new/ppc.c	2013-07-16 13:25:19.582988944 -0600
@@ -1748,7 +1748,7 @@ ppc_dis_filter(ulong vaddr, char *inbuf,
 		sprintf(buf1, "0x%lx <%s>\n", value,	
 			value_to_symstr(value, buf2, output_radix));
 
-		sprintf(p1, buf1);
+		sprintf(p1, "%s", buf1);
 	}
 
 	console("    %s", inbuf);
diff -urpN -urN ori/ppc64.c new/ppc64.c
--- ori/ppc64.c	2013-06-17 12:18:36.000000000 -0600
+++ new/ppc64.c	2013-07-16 13:25:19.582988944 -0600
@@ -2387,7 +2387,7 @@ ppc64_dis_filter(ulong vaddr, char *inbu
 		sprintf(buf1, "0x%lx <%s>\n", value,	
 			value_to_symstr(value, buf2, output_radix));
 
-		sprintf(p1, buf1);
+		sprintf(p1, "%s", buf1);
 	}
 
 	console("    %s", inbuf);
diff -urpN -urN ori/s390.c new/s390.c
--- ori/s390.c	2013-06-17 12:18:36.000000000 -0600
+++ new/s390.c	2013-07-16 13:25:05.919105424 -0600
@@ -1012,7 +1012,7 @@ s390_dis_filter(ulong vaddr, char *inbuf
 		sprintf(buf1, "0x%lx <%s>\n", value,
 			value_to_symstr(value, buf2, output_radix));
 
-		sprintf(p1, buf1);
+		sprintf(p1, "%s", buf1);
 	}
 
 	console("    %s", inbuf);
diff -urpN -urN ori/s390x.c new/s390x.c
--- ori/s390x.c	2013-06-17 12:18:36.000000000 -0600
+++ new/s390x.c	2013-07-16 13:25:09.127078080 -0600
@@ -1466,7 +1466,7 @@ s390x_dis_filter(ulong vaddr, char *inbu
 		sprintf(buf1, "0x%lx <%s>\n", value,
 			value_to_symstr(value, buf2, output_radix));
 
-		sprintf(p1, buf1);
+		sprintf(p1, "%s", buf1);
 	}
 
 	console("    %s", inbuf);
