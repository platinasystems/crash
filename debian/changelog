crash (7.1.5-1~bpo8+1) jessie-backports; urgency=medium

  * New upstream 7.1.5

  * Fix for the handling of Xen DomU ELF dumpfiles to prevent the
    pre-gathering of p2m frames during session initialization, which is
    unnecessary since ELF files contain the mapping information in their
    ".xen_p2m" section.  Without the patch, it is possible that the crash
    session may be unnecessarily aborted if the p2m frame-gathering fails, for
    example, if the CR3 value in the header is invalid.

  * Fix for the translation of X86_64 virtual addresses in the vsyscall region
    between 0xffffffffff600000 and 0xffffffffffe00000.  Without the patch, the
    reading of addresses in that region returns invalid data; in addition, the
    "vtop" command for an address in that region shows an invalid physical
    address under the "PHYSICAL" column.

  * Make the "zero excluded" mode default behavior when analyzing SADUMP
    dumpfiles because some Fujitsu troubleshooting software assumes the
    behavior.  Also, fix the "set -v" option to show the "zero_excluded"
    internal variable as "on" if it has been set when analyzing SADUMP
    dumpfiles.

  * Fix for the "bt" command to properly pull the stack and frame pointer
    registers from the NT_PRSTATUS notes of 32-bit tasks running in user-mode
    on ARM64.  Without the patch, the "bt" command utilizes ptregs->sp and
    ptregs->regs[29] for 32-bit tasks instead of the architecturally-mapped
    ptregs->regs[13] and ptregs->regs[11], which yields unpredictable/invalid
    results, and possibly a segmentation violation.

  * Fix for the "ps -t" option in 3.17 and later kernels that contain commit
    ccbf62d8a284cf181ac28c8e8407dd077d90dd4b, which changed the
    task_struct.start_time member from a struct timespec to a u64.  Without
    the patch, the "RUN TIME" value is nonsensical.

  * Fix for the changes made to the kernel module structure introduced by this
    kernel commit for Linux 4.5 and later kernels:

      commit 7523e4dc5057e157212b4741abd6256e03404cf1
      module: use a structure to encapsulate layout.

    Without the patch, the crash session fails during initialization with the
    error message: "crash: invalid structure member offset: module_core_size".

  * The crash utility has not supported Xen dom0 and domU dumpfiles since this
    Linux 3.19 commit:

      commit 054954eb051f35e74b75a566a96fe756015352c8 xen: switch to linear
      virtual mapped sparse p2m list

    This patch resurrects support for dom0 dumpfiles only.  Without the patch,
    the crash session fails during session initialization with the message
    "crash: cannot resolve p2m_top".

  * Fix for the replacements made to the kernel's cpu_possible_mask,
    cpu_online_mask, cpu_present_mask and cpu_active_mask symbols in this
    kernel commit for Linux 4.5 and later kernels:

      commit 5aec01b834fd6f8ca49d1aeede665b950d0c148e kernel/cpu.c: eliminate
      cpu_*_mask

    Without the patch, behavior is architecture-specific, dependent upon
    whether the cpu mask values are used to calculate the number of cpus.  For
    example, ARM64 crash sessions fail during session initialization with the
    error message "crash: zero-size memory allocation! (called from
    <address>)", whereas X86_64 sessions come up normally, but invalid cpu
    mask values of zero are stored internally.

  * Fixes for "[-Werror=misleading-indentation]" compiler warnings that are
    generated by the following files, when building X86_64 in a Fedora Rawhide
    environment with gcc-6.0.0:

      gdb-7.6/bfd/coff-i386.c gdb-7.6/bfd/coff-x86_64.c kernel.c x86_64.c
      lkcd_common.c

    Without the patch, the warnings in the bfd library files are treated as
    errors, and abort the build.  The three instances in the top-level crash
    source code directory are non-fatal.  There are several other gdb-specific
    instances that are non-fatal and are not addressed.

  * Fix for a "[-Werror=shift-negative-value]" compiler warning that is
    generated by "gdb-7.6/opcodes/arm-dis.c" when building crash with "make
    target=ARM64" on an x86_64 host with gcc-6.0.0.  Without the patch, the
    warning is treated as an error and the build is aborted.

  * Fix for a series of "[-Werror=shift-negative-value]" compiler warnings
    that are generated by "gdb-7.6/bfd/elf64-ppc.c" and
    "gdb-7.6/opcodes/ppc-opc.c" when building with "make target=PPC64" on an
    x86_64 host with gcc-6.0.0.  Without the patch, the warnings are treated
    as errors and the build is aborted.

  * Fix for a "[-Werror=unused-const-variable]" compiler warning that is
    generated by "gdb-7.6/opcodes/mips-dis.c" when building with "make
    target=MIPS" on an x86_64 host with gcc-6.0.0.  Without the patch, the
    warning is treated as an error and the build is aborted.

  * Configure the embedded gdb module with "--disable-sim" in order to bypass
    the unnecessary build of the libsim.a library.

  * Implement support for per-cpu IRQ stacks on the ARM64 architecture, which
    were introduced in Linux 4.5 by this commit:

      commit 132cd887b5c54758d04bf25c52fa48f45e843a30 arm64: Modify stack
      trace and dump for use with irq_stack

    Without the patch, if an active task was operating on its per-cpu IRQ
    stack on dumpfiles generated by kdump, its backtrace would start at the
    exception frame that was laid down on the process stack.  This patch also
    adds support for "bt -E" to search IRQ stacks for exception frames, and
    the "mach" command displays the addresses of each per-cpu IRQ stack.

  * Fixes for "[-Werror=misleading-indentation]" compiler warnings that are
    generated by the following files, when building X86_64 in a Fedora Rawhide
    environment with gcc-6.0.0:

      gdb-7.6/gdb/ada-lang.c gdb-7.6/gdb/linux-record.c gdb-7.6/gdb/inflow.c
      gdb-7.6/gdb/printcmd.c gdb-7.6/gdb/c-typeprint.c

    Without the patch, warnings in the gdb-7.6/gdb directory are not treated
    as errors, and are non-fatal to the build.

  * Further fix for the symbol name changes made to the kernel's
    cpu_online_mask, cpu_possible_mask, cpu_present_mask and cpu_active_mask
    symbols in Linux 4.5 and later kernels for when the crash session is
    brought up with "crash -d<debug-level>".  Without the patch, the cpus
    found in each mask are displayed like this example:

      cpu_possible_(null): cpus: 0 1 2 3 4 5 6 7 cpu_present_(null): cpus: 0 1
      cpu_online_(null): cpus: 0 1 cpu_active_(null): cpus: 0 1

    The "(null)" string segments above should read "mask".

  * Fix for the changes made to the kernel module structure introduced by this
    kernel commit for Linux 4.5 and later kernels:

      commit 8244062ef1e54502ef55f54cced659913f244c3e modules: fix
      longstanding /proc/kallsyms vs module insertion race.

    Without the patch, the crash session fails during initialization with the
    error message: "crash: invalid structure member offset:
    module_num_symtab".

  * Fix for the "dis <function | address>" option if the function or address
    is the highest text symbol value in a kernel module.  Without the patch,
    the disassembly may continue past the end of the function, or may show
    nothing at all.  The patch utilizes in-kernel kallsyms symbol size
    information instead of disassembling until reaching the address of the
    next symbol in the module.

  * Fix for the "irq -s" option in Linux 4.2 and later kernels.  Without the
    patch, the irq_chip.name string (e.g. "IO-APIC", "PCI-MSI", etc.) is
    missing from the display.

  * Improvement of the accuracy of the allocated objects count for each
    kmem_cache shown by "kmem -s" in kernels configured with CONFIG_SLUB.
    Without the patch, the values under the ALLOCATED column may be too large
    because cached per-cpu objects are counted as allocated.

  * Fixes to address two gcc-4.1.2 compiler warnings introduced by the
    previous patch: memory.c: In function ‘count_cpu_partial’: memory.c:17958:
    warning: comparison is always false due to limited range of data type
    memory.c: In function ‘count_partial’: memory.c:18729: warning: comparison
    is always false due to limited range of data type

  * Introduction of the "whatis -r" and "whatis -m" options.  The -r option
    searches for data structures of a specified size or within a range of
    specified sizes.  The -m option searches for data structures that contain
    a member of a given type.  If a structure contains another structure, the
    members of the embedded structure will also be subject to the search.  The
    type string may be a substring of the data type name.  The output displays
    the size and name of the data structure.

  * Apply a fuzz factor of zero to the re-application of a modified version of
    the gdb-7.6.patch in a pre-existing build directory.  Without the patch,
    it is possible that a previously-applied patch could be applied a second
    time without the fuzz restriction.

  * Include sys/macros.h explicitly in filesys.c for the definitions of
    major(), minor() and makedev().  These functions are defined in the
    sys/sysmacros.h header, not sys/types.h.  Linux C libraries are updating
    to drop the implicit include, so we need to include it explicitly.

  * Fix for "kmem -[sS]" options for kernels configured with CONFIG_SLUB.
    Without the patch, the count displayed in the ALLOCATED column may be too
    large, and the "kmem -S" display of allocated/free status of individual
    objects may be incorrect.

  * Fix for "kmem -[sS]" options for kernels configured with CONFIG_SLUB.
    Without the patch, if a freelist pointer is corrupt, the address of the
    slab page being referenced may not be displayed by the error message,
    showing something like: "kmem: kmalloc-32: slab: 0 invalid freepointer:
    6e652f323a302d74".

  * Fix for the "vm -p" option on kernels that are not configured with
    CONFIG_SWAP.  Without the patch, the command may fail prematurely with the
    message "nr_swapfiles doesn't exist in this kernel".

  * Introduction of ARM64 support for 64K pages with 3-level page tables and
    48 VA bits.  Until now, support has only existed for 64K pages with
    2-level page tables, and 4K pages with 3-level page tables.

  * Fix for the "vm -p" and "vtop <user virtual address>" commands if a user
    page is swapped out.  Without the patch, the "/dev" component of the swap
    file pathname may be missing from its display.

  * Fix for the x86_64 "vm -p" command to properly emulate the kernel's
    pte_present() function, which checks for either _PAGE_PRESENT or
    _PAGE_PROTNONE to be set.  Without the patch, user pages whose PTE does
    not have _PAGE_PRESENT bit set are misconstrued as SWAP pages with an
    "(unknown swap location") along with a bogus OFFSET value.

  * When reading a task's task_struct.flags field, check for its size, which
    was changed from an unsigned long to an unsigned int.

  * Introduction of support for the 64-bit SPARC V9 architecture.  This
    version supports running against a live kernel.  Compressed kdump support
    is also here, but the crash dump support for the kernel, kexec-tools, and
    makedumpfile is still pending.  Initial work was done by Karl Volz with
    help from Bob Picco.

  * Account for the Linux 3.17 increase of the ARM64 MAX_PHYSMEM_BITS
    definition from 40 to 48.


 -- Troy Heber <troyh@debian.org>  Sat, 30 Apr 2016 07:54:33 -0600

crash (7.1.4-1) unstable; urgency=medium

  * New upstream version 7.1.4, upstream changelog follows:

  * Fix for the ARM64 "vtop" command when translating kernel virtual addresses
    within a 2MB or 512MB huge page in which the PGD or PMD contains
    software-defined PTE bits.  Without the patch, the "PAGE:" address value
    will show the software-defined bits, the command will not display the
    related page structure translation, and will end with the message
    "WARNING: sparsemem: invalid section number: <number>".

  * Fix for the X86_64 "bt" command in Linux 4.2 and later kernels that are
    configured with both CONFIG_HAVE_COPY_THREAD_TLS and CONFIG_FRAME_POINTER.
    Without the patch, the fact that the kernel was compiled with
    framepointers is not recognized, which may result in backtraces containing
    stale frame references.

  * Fix for the "dis" command to support three new x86 instruction extensions
    that have been added to the Intel instruction set for hardware platforms
    that support them.  The newly-added instructions "clflushopt", "clwb", and
    "pcommit" prepend 0x66 as a prefix byte to the "clflush", "xsaveopt" and
    "sfence" instructions respectively.  Without the patch:

    "clflushopt" is disassembled as: "data16" followed by "clflush" "clwb" is
    disassembled as: "data16" followed by "xsaveopt" "pcommit" is disassembled
    as: "data16" followed by "sfence"

  The "clflushopt" instruction was introduced in Linux 3.15 in the
  clflushopt() function.  The "clwb" and "pcommit" instructions were
  introduced in Linux 4.1 in the clwb() and pcommit_sfence() functions.

  * Fix for the extensions/trace.c extension module for Linux 4.2 and later
    kernels.  Without the patch, the module fails to load, with the message
    "failed to init the offset, struct:ftrace_event_call, member:list".

  * For many years, Xen Dom0 dumps could only be saved in ELF format.  Since
    makedumpfile commit 349a0ed1, it is now possible to save Xen dumps in
    compressed kdump format.  This patch set adds support for these files.
    Two new files, xen_dom0.c and xen_dom0.h, have been added to provide the
    common functionality required by both ELF and compressed kdump formats.

  * Since Linux v4.1, specifically, "MIPS: Rearrange PTE bits into fixed
    positions.", commit be0c37c985eddc46d0d67543898c086f60460e2e, the MIPS PTE
    bits are at fixed locations.  Since they are macros in the kernel, this
    patch adds an explicit kernel version check in order to determine and set
    their values.

  * Display a machine-type mismatch warning if a little-endian PPC64
    compressed kdump created by makedumpfile(8) is used as an argument with a
    non-PPC64 crash utility binary.  Without the patch, the dumpfile is
    accepted, and the session subsequently fails with a message indicating
    that that the vmlinux and dumpfile do not match.

  * Fix for bitmap-handling in SADUMP dumpfiles, which associate each bit in a
    bitmap with a physical page in the reverse order that is used in
    kdump-compressed format.  The bug had not been detected for a long time
    because bitmaps in SADUMP formats consist mostly of 0x00 and 0xff
    excluding a very limited amount of memory space for firmware.

  * Fix for the behavior of the --zero_excluded option when used with SADUMP
    dumpfiles.  Without the patch, the behavior of --zero_excluded option is
    the opposite to what is expected: reads of filtered pages return
    successfully with zero-filled memory, while reads of filtered filtered
    pages fail when --zero_excluded option has been specified.

  * Fix for the "kmem -i" command in Linux 2.6.27 and later kernels to prevent
    the possibility that an arbitrary address may be accessed when calculating
    the number of total huge pages.  Without the patch, the command's "COMMIT
    LIMIT" and "COMMITTED" values may be invalid.

  * Added recognition of the new DUMP_DH_EXCLUDED_VMEMMAP flag in the header
    of compressed kdumps, which is set by the new -e option to the
    makedumpfile(8) facility.  The -e option excludes kernel pages that
    contain nothing but kernel page structures for pages that are not being
    included in the dump.  If the bit is set in the dumpfile, the crash
    utility will issue a warning that the dumpfile is known to be incomplete
    during initialization, just prior to the system banner display.

  * Fix for the handling of compound pages in Linux 4.4 and later kernels,
    which contain this kernel commit:

    commit 1d798ca3f16437c71ff63e36597ff07f9c12e4d6 mm: make compound_head()
    robust

  The commit above removes the PG_tail and PG_compound page.flags bits and the
  page.first_page member, and introduces a page.compound_head member, which is
  a pointer to the head page and whose bit 0 acts as the tail flag.  Without
  the patch, a SLAB or SLUB warning message that indicates "cannot determine
  how compound pages are linked" is displayed during initialization, and any
  command that tracks compound pages will be affected.

  * Fix for the handling of dynamically-sized task_struct structures in Linux
    4.2 and later kernels, which contain these commits:

    commit 5aaeb5c01c5b6c0be7b7aadbf3ace9f3a4458c3d x86/fpu, sched: Introduce
    CONFIG_ARCH_WANTS_DYNAMIC_TASK_STRUCT and use it on x86 commit
    0c8c0f03e3a292e031596484275c14cf39c0ab7a x86/fpu, sched: Dynamically
    allocate 'struct fpu'

  Without the patch, when running on a filtered kdump dumpfile, it is possible
  that error messages like this will be seen when gathering the tasks running
  on a system: "crash: page excluded: kernel virtual address: <task_struct
  address>  type: "fill_task_struct".

  * Fix for the "kmem -s <address>" command in Linux 3.13 and later kernels
    configured with CONFIG_SLAB.  Without the patch, if the address argument
    is contained within an object in a tail page of a multi-page slab, the
    command fails with the message "kmem: address is not allocated in slab
    subsystem: <address>".  Furthermore, in Linux 4.4 and later kernels
    configured with CONFIG_SLAB, addresses that are contained within an object
    in a tail page of a multi-page slab will not be marked by their slab cache
    name by the "rd -S" and "bt -F" commands.

  * Fix for a segmentation violation when attempting to run live on a a system
    without the crash.ko memory driver, and whose kernel was configured with
    CONFIG_STRICT_DEVMEM.  Without the patch, if any -d<value> is entered on
    the command line, the crash session fails during initialization.

  * Update for the determination of the ARM64 page size for kernels containing
    this Linux 4.4 commit:

    commit 9d372c9fab34cd8803141871195141995f85c7f7 arm64: Add page size to
    the kernel image header

  Without the patch, the kernel page size is calculated by looking at the size
  of the "swapper_pg_dir" page directory.  With this update, the page size can
  be determined by checking a flag built into the kernel image header,
  available in the "_kernel_flags_le" absolute symbol.

  * Fix for the handling of ARM and ARM64 QEMU-generated ELF dumpfiles and
    compressed kdump clones.  The patch utilizes the NT_PRSTATUS notes in the
    dumpfile headers instead of reading them from the kernel's "crash_notes",
    which are not initialized when QEMU generates a dumpfile.  Without the
    patch, these warning messages are displayed during session initialization:

    WARNING: invalid note (n_type != NT_PRSTATUS)   WARNING: cannot retrieve
    registers for active tasks

  and running "bt" on an active task causes a segmentation violation.

  * Update to the previous QEMU-specific patch to handle kdump dumpfiles which
    have offline cpus, and therefore will not contain associated NT_PRSTATUS
    notes in the dumpfile header.  Without the patch, if there are any offline
    cpus, a segmentation violation is generated during session initialization.

  * The s390 stand-alone dump tools may write the kernel memory directly to a
    block device.  When running the crash utility against such a block device,
    a misleading warning message such as this is displayed:

    WARNING: /dev/sda1: may be truncated or incomplete PT_LOAD p_offset: 16384
    p_filesz: 5497558138880 bytes required: 5497558155264 dumpfile size: 0

  With the patch, the warning message above will be replaced by a note using
  this format:

    NOTE: /dev/sda1: No dump complete check for block devices


  * Map CTRL-l to clear the screen while in vi insertion mode.  Without the
    patch, it displays "^L".

  * Introduced a general-purpose handler to register data structures that the
    kernel has dynamically downsized from the size indicated by the debuginfo
    data.  At this time, only "kmem_cache" and "task_struct" structures that
    have been downsized are registered, but others may be added in the future.
    If a downsized data structure is passed to gdb for display, gdb will
    request a read of the "full" data structure, which may flow into a memory
    region that was either filtered by makedumpfile(8), or perhaps into
    non-existent memory, thereby killing the generating command immediately
    due to a partial read.  With this patch, commands such as "struct" and
    "task" that reference downsized data structures will have their reads
    flagged to return successfully if partial read error occurs.

  * Fix for Linux 3.18 and later 32-bit ARM kernels that are configured with
    CONFIG_SLAB which contain percpu array_cache structures that were
    allocated with vmalloc().  Without the patch, during session
    initialization there will be error messages that indicate "crash:
    kmem_cache: <vaddr>: invalid array_cache pointer: <vaddr>", and during
    runtime, the "kmem -[sS]" commands will show kmem_cache lines that marked
    as "[INVALID/CORRUPTED]".

  * Added a new "list -l <offset>" option that can only be used in conjunction
    with "-s", and requires that the "start" address is the address of a
    list_head, or other similar list linkage structure whose first member
    points to the next linkage structure.  The "-l <offset>" argument is the
    offset of the embedded list linkage structure in the specified "-s" data
    structure; it can be either a number of bytes or expressed in
    "struct.member" format.

  * Enhanced the debug-only display of the first kernel data items read during
    session initialization.  This includes the system's cpu maps, xtime, and
    utsname data.  These require at least "-d1" as a command line option
    value, and are primarily useful as an aide for debugging suspect dumpfiles
    that fail during session initialization.

  * Added "print_array" as a new internal variable that may be turned on/off
    with the "set" command.  When set to "on", gdb's printing of arrays will
    be set to "pretty", so that the display of each array element will consume
    one line.

  * Introduction of the "sys -i" option, which displays the kernel's DMI
    identification string data if available.

  * Fix for "crash --osrelease" on Xen kernels that have both VMCOREINFO and
    VMCOREINFO_XEN ELF notes.  Without the patch, the command returns
    "(unknown)".

 -- Troy Heber <troyh@debian.org>  Fri, 15 Jan 2016 09:40:34 -0700

crash (7.1.3-1) UNRELEASED; urgency=medium

  * New upstream version 7.1.3, upstream changelog follows:

  * Fix for the "crash --osrelease" option for flattened format dumpfiles in
    the unlikely event that the dumpfile header does not contain the
    VMCOREINFO note section from the original ELF /proc/vmcore.  Without the
    patch, the command displays nothing instead of showing "unknown".

  * Fix for the "kmem -s <address>", "bt -F[F]", and "rd -S[S]" options in
    kernels configured with CONFIG_SLUB.  Without the patch, if a referenced
    slab object address comes from a slab cache that utilizes a multiple-page
    slab, and the object is located within a tail page of that slab cache, it
    will not be recognized as a slab object.  The "bt -F[F]" and "rd -S[S]"
    options will just show the object address, and the "kmem -s <address>"
    object will indicate "kmem: address is not allocated in slab subsystem:
    <address>".  This bug is a regression that was introduced in crash-7.1.0
    by commit 8b2cb365d7fb139e77cedd80d4061332099ed382, which addressed a bug
    where stale slab object addresses were incorrectly being recognized as
    valid slab objects.

  * Fix for a segmentation violation generated by the ARM64 "bt -[f|F]"
    options when analyzing the active tasks in vmcores generated by the kdump
    facility.  This bug is a regression that was introduced in crash-7.1.2 by
    commit 15a58e4070486efa2aa965bdd636626e62b65cc7, which was an enhancement
    of the ARM64 backtrace capability for active tasks in kdump vmcores.

  * Fix for the extensions/trace.c extension module to account for kernels
    that are not configured with CONFIG_TRACE_MAX_TRACER.  Without the patch,
    the module fails to load with the error message "failed to init the
    offset, struct: trace_array, member: max_offset".

  * If a kdump dumpfile is marked as incomplete in its ELF or compressed kdump
    header, and the user has not used the --zero_excluded command line option,
    append a note to the incomplete dump WARNING message shown during
    invocation that suggests the use of --zero_excluded.

  * Fix for the RSS value displayed by the "ps" command in Linux 2.6.34 and
    later big-endian machines.  Without the patch, a task's RSS value will be
    erroneously calculated by using twice its file pages instead of adding its
    file pages with its anonymous pages.

  * Do not search for a panic task in s390x dumpfiles that are marked as a
    "live dump" by the "zgetdump" facility.  Without the patch, an exhaustive,
    unnecessary, search of all kernel stacks that looks for evidence of a
    system crash may find an invalid reference in a task's kernel stack due to
    the common zero-based user and kernel virtual address space ranges of the
    s390x, causing the task to be mistakenly set as the "PANIC" task.

  * Mark the "crash" task that generated a snapshot vmcore utilizing the the
    "snap.so" extension module as "(ACTIVE)" in the STATE field of the initial
    system banner and the "set" command.  Without the patch, the task's STATE
    field shows it as the "(PANIC)" task.

  * Second part of: Do not search for a panic task in s390x dumpfiles that are
    marked as a "live dump" by the "zgetdump" facility...  The first part
    prevented a search of the active tasks; this part prevents the last-ditch
    search of all tasks.

  * When searching all kernel stacks for evidence of a panic task in "live"
    s390x dumpfiles created by the VMDUMP, stand-alone dump, or "virsh dump"
    facilities, none of which explicitly mark the dumpfile as a "live dump",
    run a standard "bt" backtrace on each kernel stack instead of the
    text-address-only "bt -t".  Without the patch, an invalid text reference
    may be found in a task's kernel stack due to the common zero-based user
    and kernel virtual address space ranges of the s390x, causing the task to
    be mistakenly set as the "PANIC" task.

  * Introduction of the "dis -f <address>" option, which disassembles from the
    target address until the end of the function.

  * Fix for the ARM64 "dis" command to prevent branch target addresses from
    being displayed as kernel system call alias/wrapper names, for example,
    "SyS_read+<offset>" instead of "sys_read+<offset>".

  * Fix for the PPC64 "dis" command to prevent conditional branch target
    addresses from being displayed as kernel system call alias/wrapper names,
    for example, "SyS_read+<offset>" instead of "sys_read+<offset>".

  * Fix for the S390X "dis" command to prevent jump target addresses from
    being displayed as kernel system call alias/wrapper names, for example,
    "SyS_read+<offset>" instead of "sys_read+<offset>".

  * Fix for the "dis" command on architectures with variable-length
    instructions.  Without the patch, "dis [-f] <function>" may continue
    beyond the end of a function, disassembling the memory that is in between
    the target function and the next function.  For kernel module functions,
    the module's debuginfo data must be loaded.

  * Minor cleanup and error handling fix-up for the "dis" command.  Without
    the patch, if the target address of "dis -r" or "dis -f" is not an exact
    address of an instruction, "dis -r" will continue beyond the target
    address, and "dis -f" will show nothing.

  * Reduce the unnecessary error messages if a directory is used as a command
    line argument.  Without the patch, six error messages are displayed:

    crash: unable to read dump file /tmp /tmp: ELF header read: Is a directory
    /tmp: ELF header read: Is a directory crash: /tmp: read: Is a directory
    read_maps: unable to read header from /tmp, errno = 1 crash: vmw: Failed
    to read '/tmp': [Error 21] Is a directory

  With the patch applied, the functions that generate those messages are not
  called; only the standard "not a supported file format", and "Usage"
  messages will be displayed.

  * If the method of determining how compound pages are linked cannot be
    accomplished due to page struct related changes in upstream kernels, issue
    a WARNING message during session initialization.

  * Fix for the "timer" command on Linux 4.2 and later kernels, which contain
    this kernel commit that modifies the tvec_root and tvec data structures:

    commit bc7a34b8b9ebfb0f4b8a35a72a0b134fd6c5ef50 timer: Use hlist for the
    timer wheel hash buckets

  Without the patch, the "timer" command will spew messages indicating "timer:
  invalid list entry: 0", followed by "timer: ignoring faulty timer list at
  index <number> of timer array".

  * Introduction of the "dis -s <address>" option, which displays the filename
    and line number that is associated with the specified text location,
    followed by a source code listing if it is available on the host machine.
    The line associated with the text location will be marked with an
    asterisk; depending upon gdb's internal "listsize" variable, several lines
    will precede the marked location.  If a "count" argument is entered, it
    specifies the number of source code lines to be displayed after the marked
    location; otherwise the remaining source code of the containing function
    will be displayed.

  * Added a new "--src <directory>" command line option for use by the "dis
    -s" option if the kernel source code is not located in the standard
    location that is compiled into the kernel's debuginfo data.  The directory
    argument should point to the top-level directory of the kernel source
    tree.

 -- Troy Heber <troyh@debian.org>  Fri, 15 Jan 2016 09:40:34 -0700

crash (7.1.2-1) UNRELEASED; urgency=medium

  * New upstream version 7.1.2, upstream changelog follows:

  * Enhancement of the ARM64 backtrace capability.  Without the patch,
    backtraces of the active tasks start at the function that is saved in each
    per-cpu ELF note.  With the patch, the backtrace will start at the
    "crash_kexec" function on the panicking cpu, and at the "crash_save_cpu"
    function on the other active cpus.  By doing so, the backtrace will
    display the exception handling functions leading to crash_kexec() or
    crash_save_cpu(), as well as the exception frame register set as it was at
    the time of the fatal exception on the panic cpu, or when the shutdown IPI
    was received on the other cpus.

  * Enabled the "bt -R" option on the ARM64 architecture.  Without the patch,
    the option fails with the message "bt: -R option not supported or
    applicable on this architecture or kernel".

  * Enabled the "crash --log vmcore" command line option on the ARM64
    architecture.  Without the patch, the option fails with the message
    "crash: crash --log not implemented on ARM64: TBD".

  * Fix for the S390X "bt" command when running against kernels that have
    Linux 4.0 commit 2f859d0dad818765117c1cecb24b3bc7f4592074, which removes
    the "async_stack" and "panic_stack" members from the "pcpu" structure.
    Without the patch, backtraces of active tasks that were executing I/O or
    machine check interrupts are not displayed, while other tasks may generate
    fatal readmem() errors of type "readmem_ul".

  * Fix to prevent an unnecessary/temporary GETBUF() memory allocation of 1 MB
    by the dump_mem_map() utility function when the kernel is configured with
    CONFIG_SPARSEMEM.

  * Speed up the "crash --osrelease" option when used with "flattened" format
    dumpfiles.  Without the patch, the rearranged data array initialization is
    performed before the vmcoreinfo data in the header is read, which can take
    a significant amount of time with large dumpfiles.  The patch simply looks
    for the appropriate vmcoreinfo data string near the beginning of the
    dumpfile.

  * Fix for the initialization-time sorting mechanism required for "flattened
    format" dumpfiles if the dumpfile is truncated/incomplete.  Without the
    patch, the sorting function continues performing invalid reads beyond the
    of the dumpfile, which may lead to an infinite loop instead of a
    session-ending error message.  In addition, since the sorting operation
    may take several minutes, a "please wait" message with an incrementing
    percentage-complete counter will be displayed.

  * Several fixes associated with the gathering and display of task state.
    Without the patch: (1) The "ps" command's ST column shows "??" for tasks
    in the TASK_WAKING state.  (2) The "ps" command's ST column shows "??" for
    tasks in the TASK_PARKED state in Linux 3.14 and later kernels.  (3) The
    STATE field of the initial system banner and the "set" command are
    incorrect if the task state has the TASK_WAKING, TASK_WAKEKILL modifier,
    or TASK_PARKED bits set in Linux 3.14 and later kernels.  (4) The "foreach
    DE" task identifier fails if a task with a PID number of 0xDE (222)
    exists.  (5) The "foreach" command's "SW", "PA", "TR" and "DE" task
    identifiers inadvertently select all tasks in kernel versions that do not
    have those states.  (6) The "help -t" output would display incorrect
    values for the TASK_WAKEKILL, TASK_WAKING and TASK_PARKED states in Linux
    3.14 and later kernels.  Lastly, support for the TASK_NOLOAD modifier
    introduced in Linux 4.2 has been added to STATE field of the "set" command
    and the initial system banner.

  * Fix for the internal memory allocation functionality.  Without the patch,
    in the unlikely event where the GETBUF() facility has to utilize malloc()
    to allocate a buffer, and CTRL-c is entered while that buffer is being
    zeroed out before being returned to the caller, it may result in a
    never-ending set of "malloc-free mismatch" error messages.

  * Fix for the PPC64 "bt" command for active non-panic tasks.  Without the
    patch, the backtrace may fail immediately with the error message "bt:
    invalid kernel virtual address: f  type: Regs NIP value".

  * Fix for the "bt" command on little-endian PPC64 machines for tasks that
    are blocked in __schedule().  Without the patch, there will be two
    "__switch_to" frames displayed before the normal "__schedule" frame that
    is used as the starting point for blocked tasks.

  * Fix for the PPC64 "bt" command to align its exception frame verifier
    function with the most recent version of the kernel's getvecname()
    function, which was updated in Linux 3.12.  Without the patch, the
    "Hypervisor Decrementer", "Emulation Assist", "Hypervisor Doorbell",
    "Altivec Unavailable", "Instruction Breakpoint", "Denormalisation", "HMI"
    and "Altivec Assist" exception types are not recognized and their
    exception frames not displayed; the  "Doorbell" exception type is marked
    as a "reserved" exception type,

  * Fix for the "timer" command when run on a kernel with a large number of
    cpus.  Without the patch, the command may fail prematurely with a dump of
    the internal crash utility allocated buffer statistics followed by the
    message "timer: cannot allocate any more memory!",

  * Commit f95ecdc330a11d3701de859aab59a5ab5954aae6, which speeds up "crash
    --osrelease" for flattened format dumpfiles, inadvertently broke the
    option for ELF kdump and compressed kdump dumpfiles.

  * Implementation of two new "files" command options.  The "files -c" option
    is context-sensitive, similar to the the regular "files" command when used
    without an argument, but replaces the FILE and DENTRY columns with
    I_MAPPING and NRPAGES columns that reflect each open file's
    inode.i_mapping address_space structure address, and the
    address_space.nrpages count within it; this shows how many of each open
    file's pages are currently in the system's page cache.  The "files -p
    <inode>" option takes the address of an inode, and dumps all of its pages
    that are currently in the system's page cache, borrowing the "kmem -p"
    page structure output.

  * Modified the qualification for the execution of the "runq -g" option.
    Without the patch, if the target kernel was not configured with both
    CONFIG_FAIR_GROUP_SCHED and CONFIG_RT_GROUP_SCHED, the command fails with
    the message "runq: -g option not supported or applicable on this
    architecture or kernel".  With this patch, if the kernel was built with
    either CONFIG_FAIR_GROUP_SCHED or CONFIG_RT_GROUP_SCHED, the command will
    execute.

  * Fix for the error handling of the "foreach task -R struct.member" format
    if an invalid structure and/or member is used as an argument.  Without the
    patch, the command will display the expected error indicating "task:
    invalid structure member reference", but then will be followed by a stream
    of "task: recursive temporary file usage" error messages.

  * Force the 32-bit MIPS extensions/eppic.so to be compiled with -m32.  This
    is required when "make extensions" is executed after the top level crash
    binary has been built with "make TARGET=MIPS" on an x86_64 host.

  * If the starting hexadecimal address of a function is passed to the "dis"
    command without a count argument, disassemble the entire function --
    similar to when a symbol name of a function is passed without a count
    argument.  Without the patch, only one instruction is displayed.

  * Fix compiler warning generated by extensions/trace.c when compiled with
    gcc version 5.  Without the patch, the message "warning: the use of
    'mktemp' is dangerous, better use 'mkstemp'" is generated.

  * Update the extensions/eppic.mk file to clone the eppic source code from
    https://github.com/lucchouina/eppic.git.

  * Export the previously static symbol_name_count() function, which returns a
    count of symbols with the same name.  Export a new is_symbol_text()
    function, which checks whether specified symbol entry is a type 't' or
    'T'.

  * If a symbol or symbol+offset argument is passed to the "dis" command, and
    there are multiple text symbols with the same symbol name, then display a
    message indicating that there are "duplicate text symbols found", followed
    by a list of the symbols.  Without the patch, the duplicate symbol with
    the lowest virtual address is used.

 -- Troy Heber <troyh@debian.org>  Fri, 15 Jan 2016 09:40:34 -0700

crash (7.1.1-1) unstable; urgency=medium

  * Autopkgtest fix from Martin Pitt <mpitt@debian.org>  (Closes: #756969):
   - Drop sudo calls; they potentially hang forever asking for a password or
     might get denied, destroy the environment, and are not necessary as the
     test already has "needs-root".
   - Fix invalid indentation of here-doc
   - Suppress expected stderr output of apt-key (which causes a test failure)
   - Drop "set -x", as that causes stderr output and the called commands are
     already verbose enough.
   - Drop -security pocket for Ubuntu's ddebs.u.c., as that does not exist.

  * Fix for two minor issues with the "net" command.  Without the patch, the
    "net -a" option appends its correct output with the command's "Usage:"
    message; and if either the "net -x" or "net -d" options are used without
    also specifying "-s" or "-S", the error message would indicate "net:
    illegal flag: 800000" or "net: illegal flag: 1000000" instead of showing
    the command's "Usage:" message.

  * If the kernel (live or dumpfile) has the TAINT_LIVEPATCH bit set, or if
    the Red Hat "kpatch" module is installed, the tag "[LIVEPATCH]" will be
    displayed next to the kernel name in the initial system banner and by the
    "sys" command.  This new tag replaces the "[KPATCH]" tag that was
    introduced in crash-7.0.7.

  * Addressed three Coverity Scan complaints in vmware_vmss.c:

    50:leaked_storage: Variable "fp" going out of scope leaks the
       storage it points to.
    53:leaked_storage: Variable "fp" going out of scope leaks the
       storage it points to.
   256:warning: Use of memory after it is freed

  * Remove the LKCD-only "propeller spinner" seen when a dumpfile read
    requires more than 2048 page header accesses.  This was put in place
    because of the non-random-access design of LKCD dumpfiles.  Without the
    patch, the spinner display is intermingled with command output, which
    complicates the parsing of the output.

  * Fix to support the Linux version increment from 3 to 4.  Without the
    patch, both dumpfile and live sessions fail during initialization, issuing
    the message "WARNING: kernel version inconsistency between vmlinux and
    dumpfile" or "WARNING: kernel version inconsistency between vmlinux and
    live memory", followed by the nonsensical fatal error message "crash:
    incompatible arguments:  vmlinux is not SMP -- vmcore is SMP" or "crash:
    incompatible arguments:  vmlinux is not SMP -- live system is SMP".  To
    prevent unexpected kernel version bumps in the future, support has been
    added for version 5.

  * Add support for more than 16TB of physical memory space in the SADUMP
    dumpfile format.  Without the patch, there is a limitation caused by
    several 32-bit members of dump_header structure, in particular the
    max_mapnr member, which overflows if the dumpfile contains more than 16TB
    of physical memory space.  The header_version member of the dump_header
    structure has been increased from 0 to 1 in this extended new format, and
    the new 64-bit members will be used.

  * Fix for command lines that are redirected to a pipe.  Without the patch,
    if an external piped-to command contains a quoted string that includes a
    "|" character, the command fails with the message "crash: pipe operation
    failed".

  * Fix for insecure temporary file usage in _rl_tropen() as reported by
    readline library CVE-2014-2524.

  * When the gdb-<version>.patch file has changed and a rebuild is done from
    within a previously-existing build tree, the "patch -N" option is used to
    ignore patches that have been previously applied; this patch also applies
    the "patch -r-" option to prevent unnecessary .rej files from being
    created.

  * Fix to account for Xen hypervisor's "domain" structure member name change
    from "is_paused_by_controller" to "controller_pause_count".  Without the
    patch, in Xen 4.2.5 and later, the crash session fails during
    initialization with the error message 'crash: invalid structure member
    offset: domain_is_paused_by_controller".

  * During initialization, reject useless ARM64 "(A)" and "(a)" absolute
    symbols that are below the text region.  Without the patch, several
    recently-introduced absolute symbols have been introduced into the kernel,
    which will be displayed by "sym -l" prior to the first kernel virtual
    address symbol, and will show up in command output where memory values are
    translated into kernel symbol references.

  * Fix for ARM64 kernels to account for changes in the virtual memory layout
    introduced in Linux 3.17.  The vmalloc region end address, and the vmemmap
    start and end addresses are now calculated at kernel build time, because
    they depend upon the size of a struct page.  Accordingly, the crash
    utility needs to calculate those three address values dynamically, after
    the embedded gdb module has initialized.  Without the patch, reads of page
    structures return invalid data due to incorrect virtual-to-physical
    translations of memory in the vmemmap range.  This in turn causes commands
    that require page structure contents to fail or show invalid data, such as
    "kmem -p", "kmem -[sS]", and the "kmem -[fF]" options.

  * Fix to support ELF vmcore dumpfiles whose PT_LOAD file offset values of
    their respective memory segments are not laid out sequentially from low to
    high in the dumpfile.  This has only been seen in ELF dumpfiles created by
    VMware's "vmss2core -M" facility.  Without the patch, the crash session
    may fail during initialization, either with the message "cannot malloc ELF
    header buffer", or "crash: <dumpfile>: not a supported file format".

  * Enhancement to the support of VMware .vmss suspended state dumpfiles.
    There may be holes in the memory address saved for PCI, etc.  In such
    cases, the memory dump is divided into regions.  With this patch, up to 3
    memory regions are supported.

  * Fortified the error handling of task gathering from the pid_hash[] chains
    during session initialization.  If a chain has been corrupted, the patch
    prevents the sequence from entering an infinite loop, and the error
    messages associated with corrupt/invalid chains have been updated to
    report the pid_hash[] index number.

  * Implemented a new STRDUPBUF() utility that will duplicate an existing
    string into a buffer allocated with GETBUF().  As is the case with any
    buffer allocated with GETBUF(), it is only meant to exist during the
    life-span of the current command.  If it is not explicitly freed via
    FREEBUF(), then it will be freed automatically prior to the next command.

  * Implemented a new fill_struct_member_data() function that gathers a bundle
    of data that describes a structure member.  The function receives a
    pointer to a struct_member_data structure, in which the caller has
    initialized the "structure" and "member" name pointers:

    struct struct_member_data {
            char *structure;
            char *member;
            long type;
            long unsigned_type;
            long length;
            long offset;
            long bitpos;
            long bitsize;
    };

    A gdb "printm" command is crafted using those two fields, and the output
    of the command is used to initialize the remaining six fields.  Adapted
    from Qiao Nuohan's "pstruct" extension module.

  * Implemented a new "runq -c cpu(s)" option to display the run queue data of
    specified cpus.  It can be used in conjunction with all runq command
    options.  The cpus must be specified in a comma- and/or dash-separated
    list; for examples, "3", "1,8,9", "1-23", or "1,8-15".

  * Build extension modules that utilize the generic extensions/Makefile
  with -g.  In addition, build the snap.c extension module with -g.

  * Several fixes, updates, and enhancements for 32-bit MIPS support:
    (1) The MIPS general purpose registers in the elf_gregset_t
        don't start at index 0 but at index 6.
    (2) Adjust for the kernel's pt_regs structure changes between
        kernel versions.  For example, fields are inserted into the
        middle based on build time options, and the amount of padding
        at the head of the structure was changed relatively recently.
        To handle this, split the structure definition into two parts
        and get the offsets of these two parts dynamically.
    (3) Do not display each parsed kernel symbol during initialization
        when invoked with "crash -d8".
    (4) Add support for loading raw MIPS ramdump dumpfiles.
    (5) Add support for compressed kdump dumpfiles.

  * Fix for a typo in "help foreach", and a fix for a spelling error in "help
    input".

  * Fix for "and and" and "the the" typos in the README file.

  * Fix to address the Xen 4.5.0 hypervisor symbol name change from "dom0" to
    "hardware_domain".  Without the patch, the crash session fails with the
    error message "crash: cannot resolve: dom0".

  * Fix for a regression in crash-7.1.0 that causes failures when the "crash
    -t" option is run on a live system, and when analyzing remote Linux
    kernels.  Without the patch, "crash -t" on a live system fails with the
    message "crash: cannot open remote memory source: /dev/mem", and attempts
    to analyze a Linux kernel remotely just shows the kernel timestamp and
    exits immediately.

  * Speed up the session invocation time of "flattened" format dumpfiles
    created by the makedumpfile(8) facility.  When sorting the blocks of
    memory by their intended ELF or compressed kdump file offsets, the patch
    replaces the bubble-sort method that is currently used with an insertion
    sort method.

  * Remove the non-existent "-L" option from the "ps" command's mutually-
    exclusive options error message.

  * Fix for the "irq", "mount", "kmem -p" and "kmem -v" commands when they are
    used in an input file.  If more than one of any of those four commands are
    used in an input file, the output of the second and subsequent command
    instances will not display their respective command headers.

  * Implemented a new "kmem -m" option that is similar to "kmem -p", but it
    allows the user to specify the page struct members to be displayed.  The
    option takes a comma-separated list of one or more page struct members,
    which will be displayed following the page structure address.  The "flags"
    member will always be expressed in hexadecimal format, and the "_count"
    and "_mapcount" members will always be expressed in decimal format.
    Otherwise, all other members will be displayed in hexadecimal format
    unless the current output radix is 10 and the member is a signed/unsigned
    integer.  Members that are data structures may be specified by the data
    structure's member name, or expanded to specify a member of that data
    structure.  For example, "-m lru" refers to a list_head data structure, in
    which case both the list_head.next and list_head.prev pointer values will
    be displayed; if "-m lru.next" is specified, just the list_head.next value
    will be displayed.

  * Support enhancement for the 32-bit MIPS architecture that retrieves the
    per-cpu registers from the NT_PRSTATUS notes stored in the header of
    compressed kdump dumpfiles.

  * Fix to remove an invalid warning message on ARM64 if a crash session is
    invoked with the "-d<number>" debug flag.  Without the patch, the invalid
    message is "WARNING: SPARSEMEM_EX: questionable section values".

  * Remove the leftover ".constructor" build file in the extensions
    subdirectory when "make extensions" is complete, and update the top-level
    .gitignore file to ignore post-build extensions subdirectory files.

  * Fix for a segmentation violation generated by the "help -[n|D]" options on
    ARM64 compressed kdumps.

  * Additional output for the "help [-D|-n]" options on ARM64.  For ELF kdump
    vmcores and compressed kdumps, the elf_prstatus structure in each
    NT_PRSTATUS note will be translated.

  * The "help -r" option has been extended to dump the ARM64 registers stored
    in each per-cpu NT_PRSTATUS note in compressed kdump and ELF kdump
    dumpfiles.

  * Fix for the ARM64 page size determination on Linux 4.1 and later kernels.
    Without the patch, the crash session fails during initialization with the
    message "crash: invalid/unsupported page size: 98304" on kernels with 64K
    pages.  On kernels with 4K pages, the message is "crash:
    invalid/unsupported page size: 6144".  In addition, the "-p <page-size>"
    command line override option had no effect on ARM64; that has been fixed
    as well.

  * Fix for the DATE display in the initial system banner and by the "sys"
    command to account for the Linux 3.17 change that moved the "timekeeper"
    symbol and structure into a containing tk_core structure; the
    "shadow_timekeeper" timekeeper will be used as an alternative.  Without
    the patch, the DATE shows something within a few hours of the Linux epoch,
    such as "Wed Dec 31 18:00:00 1969".

  * Fixes for the translation of ARM64 PTEs, as displayed by the "vm -p" and
    "vtop" commands.  Without the patch, if "vm -p" references a swapped-out
    page on Linux 4.0 and later kernels, the SWAP location may indicate
    "(unknown swap location)", and will show an invalid OFFSET value; on Linux
    3.13 and later kernels, running "vtop" on a user virtual address
    incorrectly translates the PTE contents of swapped out pages by showing a
    PHYSICAL address and FLAGS translation instead of the SWAP device and
    OFFSET.  It is possible that there may be PTE bit translation errors on
    other kernel versions; the patch addresses the changes in ARM64 PTE bit
    definitions made in Linux 3.11, 3.13, and 4.0 kernels.

  * Enhanced the "struct.member" display capability of the "struct", "union",
    "task", "list" and "tree" commands.  If a specified structure member
    contains an embedded structure, the output may be restricted to just the
    embedded structure by expressing the .member argument as "member.member".
    If a specified structure member is an array, the output may be restricted
    to a single array element by expressing the .member argument as
    "member[index]".  Furthermore, these embedded member specifications may
    extend beyond one level deep, for example, by expressing the member
    argument as "member.member.member", or "member[index].member".

  * Fix for any command that passes strings to gdb for evaluation, where the
    string contains a parentheses-within-parentheses expression along with a
    ">" or ">>" operator inside the outermost set of parentheses.  Without the
    patch, a command such as the following fails like so:

    crash> p ((1+1) >> 1)
    p: gdb request failed: p ((1+1)
    crash>

  * Fix for the handling of ARM64 kernel module per-cpu symbols.  Without the
    patch, if the debuginfo data of an ARM64 kernel module that contains a
    per-cpu section is loaded by "mod -s <module>" or "mod -S", commands such
    as "bt" or "sym" may incorrectly translate the module's virtual addresses
    to symbol names.

  * Fix to support the Linux version increment from 3 to 4.  (Closes: #699367)
    Without the patch, both dumpfile and live sessions fail during
    initialization, issuing the message "WARNING: kernel version inconsistency
    between vmlinux and dumpfile" or "WARNING: kernel version inconsistency
    between vmlinux and live memory", followed by the nonsensical fatal error
    message "crash: incompatible arguments:  vmlinux is not SMP -- vmcore is
    SMP" or "crash: incompatible arguments:  vmlinux is not SMP -- live system
    is SMP"

 -- Troy Heber <troyh@debian.org>  Wed, 27 May 2015 11:20:02 -0600

crash (7.1.0-1) UNRELEASED; urgency=medium
  * Support for "irq" and "irq -u" on the S390 and S390X architectures if they
    are running Linux 3.12 and later kernels.  Older kernels without
    GENERIC_HARDIRQ support will fail with the error message "irq: cannot
    determine number of IRQs".

  * Fix for the handling of multiple ramdump images.  Without the patch,
    entering more than one ramdump image on the command line may result in a
    segmentation violation.

  * Implemented the capability of building crash as an x86_64 binary for
    analyzing little-endian PPC64 dumpfiles on an x86_64 host, which can be
    done by entering "make target=PPC64".  After the initial build is
    complete, subsequent builds can be done by entering "make" alone.

  * Fix for the "crash --log <dumpfile>" option on both of the PPC64
    architectures.  Without the patch, the command fails with the message
    "crash: seek error: physical address: <address> type: log_buf pointer",
    followed by "crash: cannot read log_buf value".  This bug was introduced
    in crash-7.0.0 by a patch that added support for the PPC64 BOOK3E
    processor family.

  * Fix for a misleading fatal error message if a 32-bit crash binary built on
    an X86_64 host with "make target=X86" or "make target=ARM" is used on a
    live X86_64 system without specifying a vmlinux namelist.  Without the
    patch, the session fails with the message "crash: cannot find booted
    kernel -- please enter namelist argument".  The error message will be
    "crash: compiled for the X86 architecture" or "crash: compiled for the ARM
    architecture".

  * Fix for finding the starting stack and instruction pointer hooks for the
    active tasks in x86_64 ELF or compressed dumpfiles created by the KVM
    "virsh dump --memory-only" facility.  Without the patch, the backtraces of
    active tasks may show an invalid starting frame that indicates
    "__schedule".  The fix displays the exception RIP and dumps the register
    contents that are stored in the dumpfile header.  If the active task was
    operating in the kernel, the backtrace continues from there; if the task
    was operating in user-space, the backtrace is complete at that point.

  * Fix for the "waitq" command when it is passed the address of a
    wait_queue_head_t structure.  Without the patch, if the entries on the
    list are dynamically-created __wait_queue structures on kernel stacks, the
    tasks owning the kernel stack are not displayed.

  * Implemented a new "net -n [pid|task]" option that displays the list of
    network devices with respect the network namespace of the current context,
    or that of a task specified by the optional "pid" or "task" argument.  The
    former "net -n <address>" option that translates an IPv4 address expressed
    as a decimal or hexadecimal value into a standard numbers-and-dots
    notation has been changed to "net -N".

  * Fix for the kernel virtual address to symbol name translation for special
    text region delimiter symbols declared in vmlinux.lds.S with
    VMLINUX_SYMBOL(), such as __sched_text_start, __lock_text_start,
    __kprobes_text_start, __entry_text_start and  __irqentry_text_start.
    Without the patch, if the addresses of those symbols are the same value as
    the first "real" symbol in those text regions, commands such as "dis" and
    "sym" may show the "_text_start" symbol name instead of the desired text
    symbol name.

  * Enhancement of the "kmem -i" option to display memory overcommit
    information, which will be appended to the traditional output of the
    command.  For example:

    crash> kmem -i
                       PAGES        TOTAL      PERCENTAGE
          TOTAL MEM  1965332       7.5 GB         ----
               FREE    78080       305 MB    3% of TOTAL MEM
               USED  1887252       7.2 GB   96% of TOTAL MEM
             SHARED   789954         3 GB   40% of TOTAL MEM
            BUFFERS   110606     432.1 MB    5% of TOTAL MEM
             CACHED  1212645       4.6 GB   61% of TOTAL MEM
               SLAB   146563     572.5 MB    7% of TOTAL MEM

         TOTAL SWAP  1970175       7.5 GB         ----
          SWAP USED        5        20 KB    0% of TOTAL SWAP
          SWAP FREE  1970170       7.5 GB   99% of TOTAL SWAP

       COMMIT LIMIT  2952841      11.3 GB         ----
          COMMITTED  1150595       4.4 GB   38% of TOTAL LIMIT

  The COMMIT LIMIT and COMMITTED information is similar to that
  displayed by the CommitLimit and Committed_AS lines in /proc/meminfo.

  * Fix for the "kmem [-s|-S] <address>" command, and the "rd -S[S]" and "bt
    -F[F]" options.  Without the patch, if the page structure associated with
    a memory address still contains a (stale) pointer to the address of a
    kmem_cache structure, but whose page.flags does not have the PG_slab bit
    set, the address is incorrectly presumed to be contained within that slab
    cache.  As as result, the "kmem" command may display one or more messages
    indicating a "bad inuse counter", a "bad next pointer" or a "bad s_mem
    pointer", followed by an "address not found in cache" error message.  The
    "rd -S[S]" and "bt -F[F]" commands may mislabel memory locations as
    belonging to slab caches.

  * Added a new "vm -M <mm_struct>" option.  When a task is exiting, the
    mm_struct address pointer in its task_struct is NULL'd out, and as a
    result, the "vm" command looks like this:

    crash> vm
    PID: 4563   TASK: ffff88049863f500  CPU: 8   COMMAND: "postgres"
           MM               PGD          RSS    TOTAL_VM
           0                 0            0k       0k

    However, the mm_struct address can be retrieved from the task's kernel
    stack and entered manually with this option, which allows the "vm" command
    to attempt to dump the virtual memory data of the task.  It may, or may
    not, work, depending upon how far the virtual memory deconstruction has
    proceeded.  This option only verifies that the address entered is from the
    "mm_struct" slab cache, and that its mm_struct.mm_count is non-zero.

  * Fix for the X86_64 "bt" and "mach" commands when running against kernels
    that have the following Linux 3.18 commit, which addresses CVE-2014-9322.
    The kernel patch removes the per-cpu exception stack used for handling
    stack segment faults:

    commit 6f442be2fb22be02cafa606f1769fa1e6f894441
    x86_64, traps: Stop using IST for #SS

    Without this patch, backtraces that originate on any of the other 4
    per-cpu exception stacks will be mis-labeled at the transition point back
    to the previous stack.  For example, backtraces that that originate on the
    NMI stack will indicate that they are coming from the "DOUBLEFAULT" stack.
    The patch examines all idt_table entries during initialization, looking
    for gate descriptors that have non-zero index values, and when found,
    pulls out out the handler function address; from that information, the
    exception stack name string array is properly initialized rather than
    being hard-coded.  This fix also properly labels the exception stack names
    on x86_64 CONFIG_PREEMPT_RT realtime kernels, which only utilize 3
    exception stacks instead of the traditional 5 (now 4 with this kernel
    commit), instead of just showing "RT".  Also, without the patch, the
    "mach" command will mis-label the stack names when it displays the base
    addresses of each per-cpu exception stack.

  * Additional output for the "help [-D|-n]" options on X86 and X86_64
    architectures.  For compressed kdumps, the elf_prstatus structure in each
    per-cpu NT_PRSTATUS note will be translated.  For ELF kdumps, the
    elf_prstatus structure in each per-cpu NT_PRSTATUS note, and the
    QEMUCPUState structure in each per-cpu QEMU note, will be translated.

  * Implemented a new "bt -A" option for the S390X architecture, which adds
    support for displaying the new s390x vector registers.  For ELF dumps, the
    registers are taken from the VX ELF notes; for s390 dumps. the registers
    are taken from memory.  The option produces the same output as the -a
    option, but also displays the vector registers for all active tasks.

  * Fix for the 32-bit ARM virtual-to-physical address translation of
    unity-mapped kernel virtual addresses in kernels configured with
    CONFIG_ARM_LPAE if the system's phys_base exceeds 4GB.

  * Fix for the "help [-D|-n]" option on 32-bit X86 kernels that use the
    64-bit ELF vmcore format generated by "virsh dump --memory-only".  Without
    the patch, the QEMUCPUState structures in QEMU notes are not translated.

  * Additional output for the "help [-D|-n]" options on X86 and X86_64
    architectures.  For compressed kdumps generated by "virsh dump
    --memory-only", the QEMUCPUState structure in each per-cpu QEMU note will
    be translated, and the dumpfile offset address of each QEMU note will be
    displayed.

  * Introduction of support for the 32-bit MIPS architecture.  This initial
    support is restricted to 32-bit MIPS kernels that are configured as
    little-endian.  With respect to dumpfile types, only ELF vmcores are
    recognized.  In addition to building crash as a 32-bit MIPS binary, it is
    also possible to build crash as an x86 binary on an x86 or x86_64 host so
    that crash analysis of MIPS dumpfiles can be performed on an x86 or x86_64
    host.  The x86 binary can be built by entering "make target=MIPS" for the
    initial build; subsequent builds with MIPS support can be accomplished by
    entering "make" alone.

  * Added support for big-endian 32-bit MIPS kernels.  Only native MIPS crash
    binaries may be built with big-endian support; running the "make
    target=MIPS" build option on an x86 or x86_64 host creates x86 binaries
    with little-endian support only.

  * Update the "ps" help page to reflect that the "ps -l" option may be based
    upon the task_struct's sched_entity.last_arrival.  Without the patch, it
    indicates that either the task_struct's last_run or timestamp value are
    used.

  * Fix for the "kmem -z" option output to change the zone structure's
    pages_scanned field from a signed to an unsigned long integer.

  * Fix for "kmem -z" option on Linux 2.6.30 and later kernels.  Without the
    patch, the zone structure's all_unreclaimable and pages_scanned fields are
    not dumped.

  * Fix for the PPC64 "bt" command on both big-endian and little-endian
    architectures.  Without the patch, backtraces of the active tasks may be
    "empty" on little-endian machines, or show a one-liner of the form: "#0
    [c0000005f4db7a60] (null) at 501  (unreliable)" on big-endian machines.

  * Additional output for the "help [-D|-n]" options for the PPC64
    architecture.  For compressed kdump and ELF kdump dumpfiles, the
    elf_prstatus structure in each per-cpu NT_PRSTATUS note will be
    translated.

  * The "help -r" option has been extended to dump the PPC64 registers stored
    in each per-cpu NT_PRSTATUS note in compressed kdump and ELF kdump
    dumpfiles.

  * Prevent "help -r" and "help -[D|n]" from generating a segmentation
    violation when attempting to access non-existent NT_PRSTATUS notes for
    offline cpus in ELF or compressed kdumps.

  * Fix for the "kmem -V" option output to change the display of the
    vm_event_states fields from signed to unsigned long integers.

  * Fix to allow the "ps -G" qualifier to be used in conjunction with the "ps
    -p" option.  Without the patch, "ps -G -p" fails with the error message
    "ps: do_list: hash queue is in use?"

  * Fix for the "runq" command on kernels that are configured with
    CONFIG_RT_GROUP_SCHED=n.  Without the patch, real-time tasks queued on a
    per-cpu rt_rq.rt_prio_array will not be displayed under the "RT
    PRIO_ARRAY" header.

  * Fix for a regression introduced in crash-7.0.9 when running on a live
    32-bit ARM machine.  Without the patch, a segmentation violation is
    generated during session initialization.

  * Enhancement of the "PANIC:" message displayed by the initial system banner
    and by the "sys" command.  Without the patch, many panic types are
    categorized under the same generic message of the form:

     PANIC: "Oops: 0000 [#1] SMP " (check log for details)

    or in other types of crashes, no message is displayed at all.  With this
    patch, a more comprehensive search is made of the kernel log for a more
    informative panic message.

  * Add appropriate checks for the MIPS architecture to allow extension
    modules to be loaded with the "extend" command.

  * Update the extensions/trace.c extension module to account for the movement
    of the ftrace_event_call.name member into an anonymous union in Linux
    3.15, commit de7b2973903c6cc50b31ee5682a69b2219b9919d.

  * Added support for VMware .vmss suspended state files as dumpfiles.
    Similar to all other supported dumpfile types, it is invoked as:

    $ crash vmlinux <vmname>.vmss

    A "<vmname>.vmss" file created by the VMware vSphere ESX hypervisor
    contains a header and the full memory image.  A "<vmname>.vmss" file
    created by the VMware Workstation facility only contains the header, and
    must be accompanied by a companion "<vmname>.vmem" memory image that is
    located in the same directory as the "<vmname>.vmss" file.

 -- Troy Heber <troyh@debian.org>  Wed, 27 May 2015 11:20:02 -0600

crash (7.0.9-1) UNRELEASED; urgency=medium

  * Fix the CPU timer and clock comparator output for the "bt -a" command on
    S390X machines.  The output of CPU timer and clock comparator has always
    been incorrect because: - We added S390X_WORD_SIZE (8) instead of 4 to get
    the second word - We did not left shift the clock comparator by 8 The fix
    gets the complete 64 bit values and by shifting the clock comparator
    correctly.

  * Add "/lib/modules/<version>/build" to the list of directories that are
    searched for the currently-running kernel on live systems.  This will
    automatically locate the vmlinux namelist for kernels that were locally
    installed with "make modules_install install".

  * Addressed 3 Coverity Scan issues:
    (1) task.c: initialize the "curr" and "curr_my_q" variables in the
    dump_tasks_in_task_group_cfs_rq() function.
    (2) ramdump.c: make the "rd" and "len" return values from read() and
    write() calls in write_elf() to be ssize_t types.
    (3) cmdline.c: make the parsed PATH string buffer equal to the size of the
    PATH string + 1 to prevent a possible buffer overflow when a command line
    starts with a "!".

  * Fix for the one-time (dumpfile), or as-required (live system), gathering
    of tasks from the kernel pid_hash[] in 2.6.24 and later kernels.  Without
    the patch, if an entry in a pid_hash[] chain is not related to the
    "init_pid_ns" pid_namespace structure, any remaining entries in the hlist
    chain are skipped.

  * Update the "extensions/snap.mk" file to allow the "snap.so" extension
    module to be built outside of a crash source tree on a ppc64le PPC64
    little-endian host.  Without the patch, "make -f snap.mk" would fail to
    compile, indicating "gcc: error: macro name missing after '-D'"

  * Improve the method for determining whether a 32-bit ARM vmlinux is an LPAE
    enabled kernel by first checking whether CONFIG_ARM_LPAE exists in the
    vmcoreinfo data, and if it does not, by then checking whether the next
    higher symbol above "swapper_pg_dir" is 0x5000 bytes higher in value.

  * Fix "defs.h" for building extension modules outside of the crash utility
    source tree on PPC and PPC64 machines.  Without the patch, both PPC and
    PPC64 will get #define'd if the extension module build procedure does not
    #define one or the other, which in turn causes multiple conflicting
    declarations.

  * Fix for the "ps" command performance degradation patch the was introduced
    in crash-7.0.8.  Without this patch, it is possible that the "ps" command
    may fail prematurely with the error message "ps: bsearch for tgid failed:
    task: <address> tgid: <number>" when running on a live system or against a
    "live" dumpfile.

  * Set the 32-bit ARM HZ value to a default value of 100 if the kernel was
    not configured with CONFIG_IKCONFIG.  Without the patch, the initial
    system banner and the "sys" command show "UPTIME: (cannot calculate:
    unknown HZ value)", the "ps -t" option shows "RUN TIME: (cannot calculate:
    unknown HZ value)", and the "timer -r" option kills the crash session with
    a floating point exception.

  * Fix the error message displayed if the vmlinux or vmcore file is not the
    same endian as the crash utility binary.  Without the patch the filename
    is shown with the incorrect/opposite endian type.

  * Update the "ps" command's "ST" task state display to recognize the
    TASK_PARKED state in Linux 3.9 and later kernels.  Without the patch, the
    command's "ST" column entry for parked tasks shows "??".  The state column
    will now show "PA", and the foreach command will accept "PA" as a "state"
    argument.

  * Fortify the protection against the use of an invalid/corrupted CONFIG_SLAB
    kmem_cache per-cpu array_cache.limit value during session initialization.
    In a recently seen vmcore, several of the array_cache.limit values were
    corrupted such that they were stored as negative values, which in turn
    caused the "kmem -[sS]" options to fail immediately with a dump of the
    internal memory buffer allocation statistics and the error message "kmem:
    cannot allocate any more memory!".

  * Implement a new "offline" internal crash variable that can be set to
    either "show" (the default) or "hide".  When set to "hide", certain
    command output associated with offline cpus will be hidden from view, and
    the output will indicate that the cpu is "[OFFLINE]".  The new variable
    can be set during invocation on the crash command line via the option
    "--offline [show|hide]".  During runtime, or in a .crashrc or other crash
    input file, the variable can be set by entering "set offline [show|hide]".
    The commands or options that are affected when the variable is set to
    "hide" are as follows:

    o  On X86_64 machines, the "bt -E" option will not search exception
       stacks associated with offline cpus.
    o  On X86_64 machines, the "mach" command will append "[OFFLINE]"
       to the addresses of IRQ and exception stacks associated with
       offline cpus.
    o  On X86_64 machines, the "mach -c" command will not display the
       cpuinfo_x86 data structure associated with offline cpus.
    o  The "help -r" option has been fixed so as to not attempt to
       display register sets of offline cpus from ELF kdump vmcores,
       compressed kdump vmcores, and ELF kdump clones created by
       "virsh dump --memory-only".
    o  The "bt -c" option will not accept an offline cpu number.
    o  The "set -c" option will not accept an offline cpu number.
    o  The "irq -s" option will not display statistics associated with
       offline cpus.
    o  The "timer" command will not display hrtimer data associated
       with offline cpus.
    o  The "timer -r" option will not display hrtimer data associated
       with offline cpus.
    o  The "ptov" command will append "[OFFLINE]" when translating a
       per-cpu address offset to a virtal address of an offline cpu.
    o  The "kmem -o" option will append "[OFFLINE]" to the base per-cpu
       virtual address of an offline cpu.
    o  The "kmem -S" option in CONFIG_SLUB kernels will not display
       per-cpu data associated with offline cpus.
    o  When a per-cpu address reference is passed to the "struct"
       command, the data structure will not be displayed for offline
       cpus.
    o  When a per-cpu symbol and cpu reference is passed to the "p"
       command, the data will not be displayed for offline cpus.
    o  When the "ps -[l|m]" option is passed the optional "-C [cpus]"
       option, the tasks queued on offline cpus are not shown.
    o  The "runq" command and the "runq [-t/-m/-g/-d]" options will not
       display runqueue data for offline cpus.
    o  The "ps" command will replace the ">" active task indicator to
       a "-" for offline cpus.

    The initial system information banner and the "sys" command will display
    the total number of cpus as before, but will append the count of offline
    cpus.  Lastly, a fix has been made for the initialization time
    determination of the maximum number of per-cpu objects queued in a
    CONFIG_SLAB kmem_cache so as to continue checking all cpus higher than the
    first offline cpu.  These changes in behavior are not dependent upon the
    setting of the crash "offline" variable.

  * Adjustment to the "offline" patch-set to make the initial system banner,
    the "sys" command, and the X86_64 "mach" command, to only show the
    "OFFLINE" cpu count if there are actually offline cpus.

  * Make the "bt -E" option conform to a "-c cpu(s)" specification when the
    the two options are used together.  Without the patch, "bt -E" ignores a
    cpu specifier.

  * Fix for the determination of the cpu count on 32-bit ARM machines.
    Without the patch, if certain patterns of cpus are offline, the count may
    be too small, causing cpu-dependent commands to not recognize online cpus.

  * Fix for a missing exception frame dump by the X86_64 "bt" command when an
    IRQ is received while a task is running on its per-cpu interrupt stack
    with interrupts enabled.

  * Fix for the determination of the cpu count on ARM64 machines.  Without the
    patch, if certain patterns of cpus are offline, the count may be too
    small, causing cpu-dependent commands to not recognize online cpus.

  * Fix for a possible SIGSEGV generated during session initialization while
    "please wait... (determining panic task)" is being displayed.  This was
    caused by a patch introduced in crash-7.0.8, and can only happen when
    analyzing dumpfiles whose header does not contain the requisite
    information to determine the panic task and the active tasks do not have
    any crash-related traces in their kernel stacks.  It should be noted that
    the SIGSEGV can be avoided by entering "--no_panic" on the crash command
    line.

  * Fix for a SIGSEGV generated by the "bt -a" or "help -r" commands if the
    NT_PRSTATUS notes in a compressed kdump are invalid/corrupt.  If all cpus
    are online but the dumpfile initialization that cycles through the
    NT_PRSTATUS notes does not find exactly one note per cpu, then the
    register contents in those notes should not be used.

  * Fix for data access from "split" compressed kdump dumpfiles.  Without the
    patch, if a dumpfile read targets physical memory in the first memory page
    stored in the second or later sequential split dumpfile, incorrect data
    will be returned.

  * Correction of the copyright and authorship of ramdump.c.

  * Added recognition of the new DUMP_DH_COMPRESSED_INCOMPLETE flag in the
    header of compressed kdumps, and the new DUMP_ELF_INCOMPLETE flag in the
    header of ELF kdumps.  If the makedumpfile(8) facility fails to complete
    the creation of compressed or ELF kdump vmcore files due to ENOSPC or
    other error, it will mark the vmcore as incomplete.  If either flag is
    set, the crash utility will issue a warning that the dumpfile is known to
    be incomplete during initialization, just prior to the system banner
    display.  When reads are attempted on missing data, a read error will be
    returned.  As an alternative, zero-filled data will be returned if the
    "--zero_excluded" command line flag is used, or the "zero_excluded"
    runtime variable is set to "on".  In either case, the read errors or
    zero-filled memory may cause the crash session to fail entirely, cause
    commands to fail, or may result in other unpredictable runtime behavior.

  * If a kernel has been configured with CONFIG_DEBUG_INFO_REDUCED, then the
    crash utility will fail to initialize, typically with a message indicating
    "no debugging data available".  However, it has been reported (on a 32-bit
    ARM system) that the initialization sequence continued on beyond that
    message point, and the session failed later on with the message "neither
    runqueue nor rq structures exist".  As an aid to understanding why the
    session failed, if the target kernel is configured with CONFIG_IKCONFIG,
    and CONFIG_DEBUG_INFO_REDUCED has been set to "y", a relevant warning
    message will be displayed.

  * Implemented support for this Linux 3.18 commit for kernels that are
    configured with CONFIG_SLAB:

    commit bf0dea23a9c094ae869a88bb694fbe966671bf6d
    mm/slab: use percpu allocator for cpu cache

    The commit above redesigned the kmem_cache.array_cache[] from a hardwired
    array to a per-cpu pointer referencing external array_cache structures.
    Without the patch, the crash session would fail during initialization with
    the message "crash: cannot resolve cache_cache".  Note that it could be
    worked around by using the "--no_kmem_cache" command line option, with a
    resulting loss of functionality for commands requiring slab-related data.

  * Implemented a new "sys -t" option that displays kernel taint information.
    If the "tainted_mask" symbol exists, the option will show its hexadecimal
    value and translate each bit set to the symbolic letter of the taint type.
    On kernels prior to 2.6.28 which had the "tainted" symbol, only its
    hexadecimal value is shown.  The relevant kernel sources should be
    consulted for the meaning of the letter(s) or hexadecimal bit value(s).

  * Cosmetic fix for the "help -[n|D]" translation of the bitmap contents of
    the kdump_sub_header.dump_level flag in compressed kdump dumpfiles.

  * Fix for the support of compressed kdump clones created with the KVM "virsh
    dump --memory-only --format <compression-type>" command, where the
    compression-type is either "kdump-zlib", "kdump-lzo" or "kdump-snappy".
    Without the patch, if an x86_64 guest kernel was loaded with a non-zero
    "phys_base", the "--machdep phys_base=<offset>" command line option was
    required as a workaround or the crash session would fail with the warning
    message "WARNING: cannot read linux_banner string" followed by the fatal
    error message "crash: vmlinux and <dumpfile name> do not match!".

 -- Troy Heber <troyh@debian.org>  Mon, 27 Apr 2015 08:28:11 -0600

crash (7.0.8-1) unstable; urgency=medium

  * Fix for the handling of 32-bit ELF xendump dumpfiles if the guest was
    configured with more than 4GB of memory.  Without the patch, the crash
    session may fail during initialization with the error message "crash:
    vmlinux and <dumpfile> do not match!".
  * Fix for file-handling errors when a compressed vmlinux.debug file is
    followed by a vmlinux file on the crash command line.  When the crash
    session ends, two errors will occur: (1) the vmlinux file will be deleted
    (2) the temporary uncompressed version of the vmlinux.debug file will
    remain in /var/tmp This problem also occurs in the highly unlikely case
    where a compressed vmlinux file is followed by a vmlinux.debug file on the
    command line, and the uncompressed temporary version of the vmlinux file
    is larger than the vmlinux.debug file.  In that case: (1) the
    vmlinux.debug file will be deleted (2) the temporary uncompressed version
    of the vmlinux file will remain in /var/tmp
  * Fix for the "search -t" option if the system has 2064 or more tasks.
    Without the patch, the command fails with a dump of the crash utility
    memory allocation statistics, ending with "search: cannot allocate any
    more memory!".
  * Fix for the "mod -S" command to find the debuginfo data for Red Hat
    "kpatch" modules.  Without the patch, the command would display "mod:
    cannot find or load object file for <kpatch-module> module".
  * Deprecated the "mount -f" option for Linux 3.13 and later kernels
    containing commit eee5cc2702929fd41cce28058dc6d6717f723f87, which removed
    the super_block.s_files list_head member and the open files list that it
    contained.  Without the patch, the command option fails with the error
    message "mount: invalid structure member offset: super_block_s_files"
  * If a compressed kdump is damaged/truncated such that the bitmap data in
    the dumpfile header is not contained within the file, attempts to analyze
    it with a vmlinux file, or using the "crash --osrelease" or "crash --log"
    options with just the vmcore, will result in the crash utility spinning
    forever, endlessly performing reads of 0 bytes from the file without
    recognizing the EOF condition.
  * Fix for an ARM64 compilation failure of the embedded gdb file
    "aarch-linux-nat.c" in the Fedora fc21 rawhide environment, which uses
    glibc-headers-2.19.90-24.fc21.
  * Document the reason behind the deprecation of the "mount -f" option for
    Linux 3.13 and later kernels if the option is attempted, and in the "help
    mount" output, similar to the deprecated "mount -d" option.
  * During initialization, reject useless ARM64 "(A)" absolute symbols that
    begin with "__crc_".  Without the patch, several thousand of them may be
    displayed by "sym -l" prior to the first kernel virtual address symbol.
  * When running against an ARM64 dumpfile created with the "snap.so"
    extension module, do not attempt to read the crash_notes.  Since the
    dumpfile was taken while running on a live system, the crash_notes, if
    configured into the kernel, would not contain valid data.  Without the
    patch, the message "WARNING: could not retrieve crash_notes" is displayed
    during session initialization.
  * Determine the various ARM64 kernel virtual address ranges using the
    kernel's VA_BITS value.  It currently is hardwired in the kernel to one of
    two values depending upon whether 4K or 64K pages are configured.
    However, there are plans to support 16K paqes, to make VA_BITS a
    configurable value, and to make the number of page-table levels
    configurable.  Towards that end, the crash utility has been changed to
    determine the VA_BITS value based upon known kernel virtual addresses, and
    to then calculate the relevant kernel virtual address ranges on that value
    instead of hardwiring them based upon the page size.
  * Enhancement to the "kmem -S" option for Linux 3.2 and later kernels
    configured with CONFIG_SLUB to display the address of each per-cpu
    kmem_cache_cpu address and the contents of its per-cpu partial list.
  * If an ARM or ARM64 dumpfile does not contain the register sets of the
    active tasks in the kernel's per-cpu crash_notes, there is an
    initialization-time warning message indicating "could not retrieve
    crash_notes".  It has been changed to a more meaningful warning message
    indicating "cannot retrieve registers for active tasks".
  * Implement support for ARM and ARM64 raw RAM dumpfiles.  One or more
    "ramdump" files may be entered on the crash command line in an ordered
    pair format consisting of the RAM dump filename and the starting physical
    address expressed in hexadecimal, connected with an ampersand:

    $ crash vmlinux ramdump@address [ramdump@address]

    A temporary ELF header will be created in /var/tmp, and the combination of
    the header and the ramdump file(s) will be handled like a normal ELF
    vmcore.  The ELF header will only exist during the crash session.  If
    desired, an optional "-o <filename>" may be entered to create a permanent
    ELF vmcore file from the ramdump file(s).
  * Fix for the "help -[nD]" ELF header translation to recognize the EM_ARM
    and EM_AARCH values as "e_machine" types, and ELFOSABI_LINUX as an
    "e_ident[EI_OSABI]" type.  Without the patch, the e_machine translation
    would show "40 (unsupported)" for 32-bit ARM, or "183 (unsupported)" on
    ARM64; and the ELFOSABI_LINUX type would be translated as "3 (?)".
  * Re-run a command in the history list by entering an "!" followed by the
    number identifying the command.  However, unlike the similar "r"
    pseudo-command, if the number is a command name in the user's PATH,
    maintain the current behavior and execute that command.
  * Fix to recognize that the live system "crash.ko" memory driver may be
    compressed and named "crash.ko.xz".  Without the patch, the driver is not
    recognized and loaded, and as a result the /dev/mem driver  and/or
    /proc/kcore will be tried as the live memory source.
  * On a live system during session initialization, delay the first read error
    message (typically when reading the "cpu_possible_mask") until it is
    confirmed that all of the following are true: (1) /dev/crash does not
    exist, and (2) /dev/mem is restricted via CONFIG_STRICT_DEVMEM, and (3)
    /proc/kcore cannot be read/accessed.  The "kernel may be configured with
    CONFIG_STRICT_DEVMEM" and the "trying /proc/kcore as an alternative"
    messages will still be displayed when appropriate.  The read error message
    be displayed only if all three live memory read options fail.
  * Fortify the validity verification of the data structures traversed by the
    "kmem [-sS]" options for kernels configured with CONFIG_SLUB.  Without the
    patch, the contents of several structure members are not validated, and
    may generate bogus or never-ending output, typically seen when running the
    commands on a "live dump" where the dumpfile was taken while the kernel
    was still running.  The patch aborts the relevant parts of per-kmem_cache
    output when invalid data is encountered or if an object list contains
    duplicate entries, and error messages have been enhanced to more
    accurately describe the issues encountered.
  * Implement support for the ppc64le PPC64 little-endian architecture.  Since
    this required a large number of patches to be applied to
    architecture-neutral files in the gdb-7.6 tree, the changes are only
    applied if the host build system is a ppc64le.
  * Fix for SMP active task register-gathering from "kvmdump" dumpfiles that
    were created with a cpu version id of 12 or greater that contain
    additional XSAVE related fields in their cpu device headers.  Without the
    patch, active tasks running on cpus above 0 may have truncated backtraces.
  * Maintain backwards-compatibility for "kvmdump" dumpfiles that were created
    by older development versions of KVM tools in which the cpu version id was
    12, but the cpu device headers did not contain the additional XSAVE
    related fields.
  * Address a "ps" command performance degradation that was introduced by a
    crash-7.0.4 patch which added per-thread task_struct.rss_stat page counts
    to the task's mm_struct.rss_stat page counts in order to show an
    accurate/synchronized RSS value.  Without the patch, the "ps" command
    performance would degrade as the number of tasks increased, most notably
    when there were thousands of tasks.

 -- Troy Heber <troyh@debian.org>  Wed, 17 Sep 2014 08:30:13 -0600

crash (7.0.7-1) unstable; urgency=low

  * Export the static ELF and compressed kdump vmcoreinfo_read_string()
    functions from netdump.c and kdump.c via a new read_vmcoreinfo() method in
    the global program_context structure.  The function
    get_log_from_vmcoreinfo() will access vmcoreinfo data via the new pointer
    instead of requiring its callers to pass pointers to their
    dumpfile-specific function.
  * Linux 3.15 and later kernels configured with CONFIG_RANDOMIZE_BASE can be
    now be readily identified because of new kernel symbols that have been
    added.  For those kernels, the new "--kaslr=<offset>" and/or
    "--kaslr=auto" options are not necessary for ELF or compressed kdump
    vmcores, or for live systems that have /proc/kallsyms showing the
    relocated symbol values.  A new KASLR initialization function called
    kaslr_init() is now called by symtab_init() prior to the initial
    symbol-sorting operation.  If kaslr_init() determines that KASLR may be in
    effect, it will trigger a search for the relevant vmlinux symbols during
    the sorting operation, which in turn will cause the relocation value to be
    automatically calculated.
  * Implemented a new "bt -c cpu(s)" option to display the backtrace of the
    active task on one or more cpus.  The cpus must be specified in a comma-
    and/or dash-separated list; for examples ""3", "1,8,9", "1-23", or
    "1,8,9-14".  Similar to "bt -a", the option is only applicable with crash
    dumps.
  * Fix for Linux 3.11 and later ARM kernels, in which all non-panicking cpus
    offline themselves during a kdump procedure.  This causes an invalid cpu
    count determination during crash session initialization from an ARM
    vmcore.  The patch utilizes the cpu count found in the cpu_active_map if
    it is greater than the count in the cpu_online_map.  In addition, the
    maximum NR_CPUS value for the ARM architecture has been raised from 4 to
    32.
  * Fix for the X86_64 "bt" command on Linux 3.3 and later kernels to properly
    display exception frame register contents on NMI stacks.  Kernel commit
    3f3c8b8c4b2a34776c3470142a7c8baafcda6eb0 added 12 more values to the NMI
    exception stack to handle nested NMIs caused by page faults or breakpoints
    that could occur while handling an NMI exception.
  * Kernel commit 28696f434fef0efa97534b59986ad33b9c4df7f8 changed the stack
    layout again, swapping the location of the "saved" and "copied" registers.
    This can be detected automatically, because the "copied" registers contain
    either a copy of the "saved" registers, or point to "repeat_nmi". So, if
    "repeat_nmi" is found as the return address, assume that this is the old
    layout, and adjust the stack pointer again.  Without the patch, incorrect
    register values are displayed in the exception frame dump in the NMI stack
    backtrace.
  * Fix for the built-in "g" alias, which apparently has not worked correctly
    since crash-5.1.4.  Without the patch, if the "g" alias and the first
    argument are separated by one space, then the first first character of
    that argument would get stripped prior to being passed to the embedded gdb
    module.
  * Removed the BASELEVEL_REVISION string from defs.h, which serves no purpose
    since the deprecation of the remote daemon, and typically has been out of
    sync with the crash version.
  * Fix for the "p", "irq", "struct", "union" and "*" commands if a cpu
    specification contains an invalid cpu number.  Without the patch, a
    segmentation violation may be generated.
  * Implemented a new capability for the "ptov" command that takes a per-cpu
    offset and cpu specification argument and translates it into the kernel
    virtual addresses for the cpus specified.
  * Implemented a new "ps -m" option that is a similar, complementary option
    to "ps -l", but which translates the task timestamp value from a decimal
    or hexadecimal nanoseconds value into a more human-readable string
    consisting of the number of days, hours, minutes, seconds and milliseconds
    that have elapsed since the task started executing on a cpu.  More
    accurately described, it is the time difference between the timestamp
    copied from the per-cpu runqueue clock when the task last started
    executing compared to the most current value of the per-cpu runqueue
    clock.
  * In addition, a new "ps -C <cpu-specifier>" option has been added that can
    only be used with "ps -l" and "ps -m", which sorts the global task list
    into per-cpu blocks; the cpu-specifier uses the standard comma or dash
    separated list, expressed as "-C 1,3,5", "-C 1-3", "-C 1,3,5-7,10", or
    "-Call" or "-Ca" for all cpus.
  * Implemented a new "runq -m" option that is a simliar, complementary option
    to "runq -t", but which displays the amount of time that the active task
    on each cpu has been running, expressed in a format consisting of days,
    hours, minutes, seconds and milliseconds.
  * Implemented a new "kmem -h" option that displays the address of each
    hugepage hstate array entry, its hugepage size, its free and total counts,
    and name string.
  * Implemented a new "ps -S" option that displays a summary consisting of the
    number of tasks in a task state.
  * Fix for the "arguments-input-file" feature to protect against a called
    command modifying an argument string.  For example, the "struct" command
    modifies "-l struct_name.member" argument strings, and so without the
    patch, all iterative calls after the first one will fail.
  * Fix failure to build from source when compiling the crash utility with
    gcc-4.9 (closes: #746835)
  * Fix for displaying enum values that are greater than 32-bits in size.
    Without the patch, the upper 32-bits are clipped off and displayed as
    integer-sized value.
  * If the kernel (live or dumpfile) has the "kpatch" module installed, the
    tag "[KPATCH]" will be displayed next to the kernel name in the initial
    system banner and by the "sys" command.
  * Fix for the "DEBUG KERNEL:" display in the initial system banner and by
    the "sys" command when using a System.map file with a Linux 3.0 and later
    debug kernel.  Without the patch, the kernel version is not displayed in
    parentheses following the debug kernel name.
  * If the gdb-<version>.patch file has changed and a rebuild is being done
    from within a previously-existing build tree, "patch -N" the gdb sources,
    and start the rebuild from the gdb-<version> directory instead of the
    gdb-<version>/gdb directory.
  * Fix to prevent a possible segmentation violation generated by the "runq
    -g" command when run on a very active live system due to an active task on
    a cpu exiting while the command is running.
  * Fix for the "runq -g" command on Linux 3.15 and later kernels, where the
    cgroup_name() function now utilizes kernfs_name().  Without the patch, the
    command fails with the error message "runq: invalid structure member
    offset: cgroup_dentry".
  * Fix for the "extend" command when running with an x86_64 crash binary that
    was built with "make target=ARM64" in order to analyze ARM64 dumpfiles on
    an x86_64 host.  Without the patch, if the extend command is used with an
    extension module built in the same manner, it fails with the message
    "extend: <module>.so: not an ELF format object file".
  * Introduce support for 32-bit ARM kernels that are configured with
    CONFIG_ARM_LPAE.  The patch implements the virtual-to-physical address
    translation of 64-bit PTEs used by ARM LPAE kernels.

 -- Troy Heber <troyh@debian.org>  Mon, 16 Jun 2014 10:24:39 -0600

crash (7.0.6-1) unstable; urgency=low

  * Fix for custom X86_64 kernels that change the declaration of the
    context_switch() function so that it is not an inline function.  Without
    the patch, the message "crash: cannot determine thread return address" is
    displayed during invocation, and backtraces of blocked tasks may have
    missing or invalid frames.
  * Fix to prevent a possible invocation-time error on Linux 3.7 and later
    kernels configured with CONFIG_SLAB, running against vmcore files filtered
    with the makedumpfile(8) facility.  Without the patch, the message "crash:
    page excluded: kernel virtual address: <address>  type: kmem_cache buffer"
    is immediately followed by the message "crash: unable to initialize kmem
    slab cache subsystem".  Because of a kernel data structure name change
    from "cache_cache" to "kmem_cache_boot", the crash utility failed to
    properly downsize the stored size of the kernel's kmem_cache data
    structure from the size indicated by the vmlinux debuginfo data.  This in
    turn could lead to reading beyond the end of a kmem_cache data structure
    into a page of memory that had been excluded from the vmcore.  The fix was
    also applied to kernels configured with CONFIG_SLUB.
  * Added a new "--kaslr <offset>" command line option for X86_64 kernels that
    are configured with CONFIG_RANDOMIZE_BASE.  The offset value must be equal
    to the difference between the symbol values compiled into the vmlinux file
    and their relocated KASLR values.
  * Added a new "--kaslr=auto" command line option for X86_64 kernels that
    that are configured with CONFIG_RANDOMIZE_BASE.  When set to "auto", the
    KASLR relocation value will be determined automatically by comparing the
    "_stext" symbol value compiled into the vmlinux file with the _stext
    symbol value stored in kdump vmcoreinfo data; on live systems the
    comparison will be made with the "_stext" symbol value that is found in
    /proc/kallsyms.
  * Enable kernel text line number capability for the "dis -l", "bt -l", "sys
    -c", and "sym" commands for kernels that are configured with
    CONFIG_RANDOMIZE_BASE.
  * Fix for the "crash --log vmcore" command to account for the kernel data
    structure and VMCOREINFO string name changes from "log" to "printk_log" in
    Linux 3.11-rc4 and later kernels.  Without the patch, the command fails
    with the error message "crash: VMCOREINFO: no log buffer data".
  * Adjustment to the internal symbol-handling to prevent the usage of kernel
    system call alias/wrapper names, for examples, "SyS_read" and
    "compat_SyS_futex" instead of "sys_read" and "compat_sys_futex".  Without
    the patch, commands such as "dis", "sym <address>", and "sys -c" display
    the alias/wrapper name instead of the real system call name in Linux 3.10
    and later kernels.
  * Increase the internal hash queue head count from 128 to 32768.  The hash
    queue is used for gathering and verifying lists, and the original count of
    128 may be overwhelmed if a list is extremely large.  For example, on a
    256GB system with 192GB of free pages, the "kmem -f" command takes hours
    to complete; with this patch, the time is reduced to a few minutes.  In
    addition, a new command line option "--hash <count>" has been added to
    allow a user to override the default hash queue head count of 32768.
  * Fix for the "kmem -F" display and the "kmem -f <address>" or "kmem
    <address>" options.  Without the patch, "kmem -F" does not display the
    first page in a list of free page blocks on its own line, but rather at
    the end of the previous line that shows the area number, block size, and
    free_area struct address that the page is linked to.  Due to this error,
    both "kmem -f <address>" and "kmem -f address>" would not find the
    associated page or page block if it happened to be the first page or page
    block in the list.
  * Created a new feature for the internal do_list() function if it is
    necessary to immediately perform a function for each entry in a list while
    the list is being traversed.  A callback function, and an option callback
    data pointer, can be registered in the list_data structure.  The address
    of each entry in the list along with the optional callback data pointer
    will be passed to the callback function.  If desired, the callback
    function may also dictate that do_list() should stop the list traversal
    and return immediately to its caller.
  * Made the "kmem -f <address>" and "kmem <address>" options more efficient
    by using the new do_list() callback function feature above as well as
    restricting the search to only the NUMA node that contains the address.
  * If the first assembly language instruction in an X86_64 function is "nopl
    0x0(%rax,%rax,1)" or "data32 data32 data32 xchg %ax,%ax", which are
    generated when the ftrace facility is configured, the X86_64 "dis" command
    will append "[FTRACE NOP]" to the line.
  * Correction for the "crash -h" and crash.8 man page documentation of the
    "--machdep phys_base=<physical-address>" command line option.  In both
    places the parameter mistakenly indicated "physbase".
  * If a host build system does not have /usr/bin/wget installed, and the
    crash package is built from a directory that was git-cloned from
    github.com/crash-utility/crash.git, the error message has been clarified
    to indicate "/usr/bin/wget is required to download gdb-7.6.tar.gz".
    Without the patch, the message indicates "tar (child): gdb-7.6.tar.gz:
    Cannot open: No such file or directory".
  * Updated the ARM64 implementation to support Linux 3.13 and later kernels
    that expand to a 42-bit address space when 64K pages are configured.  This
    is also the first crash version that has been tested on a live ARM64
    system with 4K pages, where it cleanly make it to the "crash>" prompt.
    However, it should be noted that some commands (most notably "bt") still
    do not work as of yet.
  * Document the "--machdep phys_offset=<physical-address>" command line
    option for the ARM64 architecture in the crash.8 man page and the "crash
    -h" output.
  * Fix for KVM dumpfiles created with "virsh dump --memory-only" if an X86_64
    kernel was loaded with a non-zero "phys_base".  Without the patch, the
    crash session fails with the warning message "WARNING: cannot read
    linux_banner string" followed by the fatal error message "crash: vmlinux
    and <dumpfile name> do not match!".
  * Initial working implementation of the basic ARM64 "bt" command, with
    several command options still under development.  In-kernel exception
    frames are only dumped if the exception handler function is contained
    within the symbol boundaries from "__exception_text_start" to
    "__exception_text_end"; when ARM64 kdump is eventually implemented,
    further exception-related work will be resumed.
  * Cleaned up the exception frame displays of 64-bit in-kernel and both
    32-bit and 64-bit user-mode exceptions.
  * Implemented support for the ARM64 "bt -e" option.
  * Implemented support for the ARM64 "bt -l" option.
  * Update for the X86_64 "bt -l" option such that it also displays the
    available file and line number information for functions indicated as the
    "exception RIP" in kernel exception frames.  The line number information
    will follow the exception frame register dump.
  * Fix for the ARM64 virtual-to-physical translation of vmemmap page
    structure addresses for kernels configured with 4K pages.  Without the
    patch, any command that required the contents of a page structure would
    fail with a readmem error.
  * Added support for the ARM64 architecture in the extensions/snap.c
    extension module.  Also fixed the progress percentage display to correct
    for systems which have non-zero starting physical addresses.
  * Implemented support for the ARM64 "bt -f" and "bt -F[F]" options.
  * Increase the ARM64 PTRS_PER_PGD_L2_64K from 1024 to 9182 to account for
    the Linux 3.13 increase of the ARM64 virtual address space size from 39 to
    42 bits when 64K pages are configured.  Without the patch, the warning
    message "WARNING: cannot access vmalloc'd module memory" is displayed
    during session initialization.
  * Fix for the "vm -p" option on ARM64 so that file-backed pages are properly
    translated to the filename and offset.  Without the patch, file-backed
    pages are erroneously shown as being backed on a swap device.
  * Increment maximum ARM64 physical address from 40 to 48 bits to match
    upstream kernel commit 87366d8cf7b3f6dc34633938aa8766e5a390ce33.
  * Fix for a segmentation violation generated by the "crash -g vmlinux"
    command on ARM64.
  * Fix for the ARM64 "vtop <address>" command on kernels configured with 64K
    pages if the address argument is located in the kernel logical memory map
    region, which uses 512MB hugepage mappings.  Without the patch, the
    verbose page table walk mistakenly continues to the PTE level.
  * Fix for ARM64 /proc/kcore support.  Without the patch, the crash session
    fails with the warning message "WARNING: cannot read linux_banner string"
    followed by the fatal error message "crash: vmlinux and <dumpfile name> do
    not match!".  At this point in time, the kernel requires a patch to the
    ARM64 kern_addr_valid() function to properly allow memory to be read from
    the kernel logical memory map region.

 -- Troy Heber <troyh@debian.org>  Thu, 05 Jun 2014 09:26:32 -0600

crash (7.0.5-1) unstable; urgency=low

  * New upstream version 7.0.5
  * Fix for the "runq -g" option for kernels that are configured with
    CONFIG_FAIR_GROUP_SCHED, but not CONFIG_CFS_BANDWIDTH.  Without the patch,
    the command fails with the message "runq: invalid structure member offset:
    cfs_rq_throttled".
  * Add support for Xen PVH guest types introduced in Xen 4.4.  Without the
    patch, running against a Xen 4.4 hypervisor binary would fail during
    session initialization with the error message "crash: invalid structure
    member offset: domain_is_hvm".  In addition, the PVH guest type is being
    registered internally as an HVM guest type, the debug "help -X ofs"
    command's display of the domain_domain_flags offset has been fixed to show
    it in decimal, and the setting of the internal dc->domain_flags has been
    fixed to contain all flags set, not just the first one found.
  * Fix for the "kmem -S" command on Linux 3.1 and later kernels that are
    configured with CONFIG_SLUB.  Because the the page structure's inuse and
    objects fields used by SLUB were changed from discrete u16 types to
    bit-fields within an unsigned int, the display of per-node partial slab
    statistics are incorrect.  Without the patch, the TOTAL and ALLOCATED
    values are incorrectly shown as equal values, and therefore the FREE value
    is always zero.
  * Fix for the "kmem -S" command for kernels that are configured with
    CONFIG_SLUB.  Eash per-cpu slab object dump may show incorrect ALLOCATED
    and FREE values; and as seen on Linux 3.5 and later kernels, the TOTAL
    value and the number of individual objects dumped may also be incorrect
    (too small).
  * When executing the commands from an input file specified by the "-i
    <file>" command line option, or when accepting input from a file as a set
    of commands or as a set of command arguments using the "<" redirection
    character, unconditionally cease the operation if CTRL-c is entered.
    Without the patch, depending upon the command that was running when the
    SIGINT was received, the operation may continue uninterruptibly until the
    file contents are consumed.
  * Enhanced the "bt -F" option such that if "-F" is entered twice, and if the
    stack frame contents reference a slab cache object, both the slab cache
    name and the stack contents will be displayed within brackets.
  * Enhanced the "rd -S" option such that if "-S" is entered twice, and if the
    memory contents reference a slab cache object, both the slab cache name
    and the memory contents will be displayed within brackets.
  * Fix for the X86_64 "bt" command to prevent an unwarranted message
    indicating "WARNING: possibly bogus exception frame" generated from a
    blocked kernel thread that was in the process of exec'ing a user process
    via the call_usermodehelper() facility.
  * Fix for the X86_64 "bt" command to more correctly determine the function
    frame that called into an interrupted function.  Without the patch, the
    first frame just above an IRQ exception frame register dump may show an
    invalid/stale function.
  * Fix for the X86_64 "bt" command if a page fault exception was generated by
    the invalid contents of the RIP register.  Without the patch, the
    exception frame register dump is not displayed above the "page_fault"
    stack frame; and in a related issue, the "bt -e" option will not find and
    display the exception frame.
  * When invoking a crash session with a compressed vmlinux file, make the
    same host-machine/vmlinux endian verification that is done with
    uncompressed vmlinx files.
  * Reduce the number of CTRL-c entries required to unconditionally terminate
    any manually-entered command from three to one.
  * Fix for the X86_64 "bt" command if an async page fault exception occurred
    in a KVM guest running a Linux 2.6.38 or later kernel.  Without the patch,
    the exception frame register dump is not displayed above the
    "async_page_fault" stack frame.

 -- Troy Heber <troyh@debian.org>  Mon, 14 Apr 2014 14:59:30 -0600

crash (7.0.3-3) unstable; urgency=low

  * Add autopkgtest and try to keep the Debian and Ubuntu crash packages in
    sync  (closes: #721095)

 -- Troy Heber <troyh@debian.org>  Thu, 07 Nov 2013 08:14:34 -0700

crash (7.0.3-2) unstable; urgency=low

  * Fix from  Louis Bouchard <louis.bouchard@canonical.com> to resolve FTBS on
    i386

 -- Troy Heber <troyh@debian.org>  Wed, 06 Nov 2013 09:41:06 -0700

crash (7.0.3-1) unstable; urgency=low

  * Fix for the ARM architecture if the backtrace unwind information cannot be
    gathered during session initialization.  Without the patch, the two
    unwind-related warning messages indicating "WARNING: UNWIND: failed to
    gather unwind_table list" and "WARNING: UNWIND: failed to initialize
    module unwind tables" are followed by the fatal error message "crash:
    cannot hash task_struct entries".

  * Fix for the "help -[Dn]" dumpfile information display of the GUID EFI
    table in the header of SADUMP dumpfiles.  Without the patch, only 33 of
    the 36 bytes in the table are translated.

  * Fix for the determination of the kernel NR_CPUS configurable for Linux 3.8
    and later kernels that are configured with CONFIG_SLAB.  Without the
    patch, the kernel's compiled-in NR_CPUS value was incorrectly calculated
    to be the sum of the kernel's NR_CPUS and MAX_NUMNODES configurables.

  * In the next release of makedumpfile, the status field of the dumpfile
    header of compressed kdumps will show the compression type that was
    utilized.  The "help -[Dn]" output has been updated to display that
    information.

  * For kernels configured with CONFIG_SLAB in which an array_cache pointer
    referenced by a kmem_cache structure is invalid, the individual cache(s)
    will be marked as invalid.  During session initialization, the message
    "crash: kmem_cache: <cache-address>: invalid array_cache pointer" will be
    displayed, and during runtime, attempts to access the cache(s) will result
    in a message indicating that the cache is "[INVALID/CORRPUTED]".  Without
    the patch, the message "crash: unable to initialize kmem slab cache
    subsystem" is displayed during session initialization, and run-time
    commands that attempt to access the kmem slab cache subsystem fail with
    the error message "kmem cache slab subsystem not available".

  * Fix for the "kmem -[sS] <slab-object-address>" option in Linux 3.6 and
    later kernels configured with CONFIG_SLAB.  Without the patch, the command
    fails with the message "kmem: address is not allocated in slab subsystem:
    <slab-object-address>.  This also causes the "kmem <slab-object-address>"
    command to (quietly) fail to determine that the address is a slab object.

  * Fix for the "bt" command if a kernel __init text address is encountered.
    Without the patch, and depending upon the reallocation of the __init text
    memory, a bogus framesize may be calculated, or more likely, in a
    compressed kdump, a warning message indicating "bt: page excluded: kernel
    virtual address: <address>  type: gdb_readmem_callback" will be displayed
    following the frame data.

  * Update for determining whether an S390X PTE contains a swap entry in Linux
    3.12 and later kernels.

  * Resurrected the translation and display of the page.flags bits by the
    "kmem -p" command on Linux 2.6.26 and later kernels whose vmlinux
    debuginfo data contains either the "pageflags" enumerator or the
    "pageflag_names" array of trace_print_flags structures.  If they are not
    available, just the page.flags value is printed in hexadecimal, as has
    been done since Linux 2.4.9.

  * Fix for the "bt" command when used with vmcore files that were created
    with the recently-introduced "virsh dump --memory-only", which dumps KVM
    guests into an ELF vmcore similar to those created by the kdump facility.
    Without the patch, a faulty backtrace for the panic task may be generated
    due to the use of incorrect starting RSP/RIP registers; this happens
    because (unlike kdump) the non-panicking cpus are offlined prior to the
    dumpfile being created, which in turn leads to the use of the wrong
    NT_PRSTATUS note.

  * Fix for the CPU number display on systems with 255 or more cpus during the
    initial banner, by the "set" command, the "ps" command, and by all
    commands that display the per-task header consisting of the task address,
    pid, cpu and command name.  Without the patch, for cpu 255, the "sys"
    command displays "NO_PROC_ID", and the other commands would show a "-" for
    the cpu number; for cpu numbers greater than 255, garbage values would be
    displayed in the cpu number field.

  * Implemented support for compressed kdump header version 6, in which
    makedumpfile(8) adds new fields in the kdump_sub_header to support large
    memory systems with pfn values that are larger than 32-bits.  Without the
    patch, if the system contains physical memory located in high memory such
    that its maximum pfn value is overflows the 32-bit "max_mapnr" field in
    the header, the crash session will fail with the error message "crash:
    vmlinux and vmcore do not match!".

  * Fix for the "net -s" command on Linux 3.8 and later kernels.  Without the
    patch, the command fails with the message "net: invalid structure member
    offset: inet_opt_daddr".

  * Fix a build failure in a native ARM64 environment due to obsolete LKCD
    dumpfile headers.

  * Implementation of a new "per-cpu object" as an argument format that can be
    passed to the "p", "struct", "union" or "*" commands.  The format is
    expressed as either <per-cpu symbol>:<cpu-specifier> or as <per-cpu
    offset>:<cpu-specifier>, where the per-cpu symbol or per-cpu offset must
    precede a colon, and where the <cpu-identifier> follows the colon.
    Without the patch, per-cpu symbols are only accepted by the "p" command,
    and the data type and the resolved kernel virtual address for each per-cpu
    instance are displayed shown.  With this patch, a colon and a
    cpu-specifier may be appended to the symbol name, and the the contents of
    the symbol on each cpu that is specified will be displayed by the "p"
    command.  For the "struct/union/*" commands, an argument may be specified
    using either a per-cpu offset value or per-cpu symbol name followed by a
    colon and cpu-specifier, and the contents of each structure/union on each
    specified cpu will be displayed.

    Fixed several minor flaws that were detected by a Coverity Scan.

 -- Troy Heber <troyh@debian.org>  Wed, 30 Oct 2013 16:12:40 -0600

crash (7.0.2-1) unstable; urgency=low

  * Added "bison" to the BuildRequires line of the crash.spec file.
           Without the patch, the build of the embedded gdb-7.6 module will fail
           unless either /usr/bin/bison or /usr/bin/yacc are available.  The
           failure will result in a stream of error messages from different
           files that indicate:

             multiple definition of 'main'
             undefined reference to 'c_parse_escape'
             undefined reference to 'ada_parse'
             undefined reference to 'ada_error'
             undefined reference to 'c_parse'
             undefined reference to 'c_error'
             undefined reference to 'cp_demangled_name_to_comp'
             undefined reference to 'cp_demangled_name_parse_free'
             undefined reference to 'cp_comp_to_string'
             undefined reference to 'cp_new_demangle_parse_info'

           and the build fails like so:

             collect2: ld returned 1 exit status
             make[4]: *** [gdb] Error 1
             crash build failed

           If building with rpmbuild, the new BuildRequires "bison" entry will
           prevent the build from initiating unless the bison package has been
           installed.  If building with the tar.gz file, the build attempt will
           proceed and fail unless either the bison or byacc (Berkeley Yacc)
           package is installed.

  * Fix the S390X initialization sequence on kernels that are configured
           with CONFIG_STRICT_DEVMEM to automatically try /proc/kcore if:

            (1) the /dev/crash driver is not available, and
            (2) the initial /dev/mem access fails.

           Without the patch, if /dev/mem is selected as the memory source and
           it is restricted, the crash session will fail during initialization
           with the error message "crash: read error: kernel virtual address:
           <address>  type: cpu_possible_mask".

  * When checking whether a argument on the crash command line is a dumpfile
    that may be in makedumpfile's "flattened" format, do not bother checking
    character device files.

  * Fix for the PPC64 virtual-to-physical virtual address translation
    mechanism for vmalloc and user-space virtual addresses on Linux 3.10 and
    later kernels.  Without the patch, the message "WARNING: cannot access
    vmalloc'd module memory" is displayed during initialization, and during
    the crash session, if a command attempts to translate or read a vmalloc or
    user-space virtual address, it will fail.

  * Clean up all files that emit "warning: format not a string literal and no
    format arguments" when compiled with -Wformat-security warning option.
    All instances of fprintf, sprintf and snprintf using the format
    "fprintf(fp, buf)" are replaced with "fprintf(fp, "%s", buf)".  Also, the
    -Wformat-security warning option has been added to the option list used
    when compiling with "make warn".

  * Fix a build failure when compiling with very old gcc-3.4.6 version on a
    2.6.9-based RHEL4 IA64 host.  The bfd library in gdb-7.6 is compiled with
    the -Werror option, and it fails with the message "elflink.c:4733:
    warning: 'idx' might be used uninitialized in this function".

  * Fix a build failure when compiling with very old gcc-3.4.6 version on a
    2.6.9-based RHEL4 S390 or S390X hosts.  The embedded gdb-7.6 fails to
    compile with the error message "s390-nat.c:364: error: storage size of
    'iov' isn't known".

  * Fix to properly store two-digit kernel version numbers. (closes: #717036)

  * Fix to provide hugepage address translation for the "vtop" command on the
    PPC64 architecture.

  * Fix for the "log" command to account for the kernel data structure name
    change from "log" to "printk_log" in Linux 3.11-rc4 and later kernels.
    Without the patch, the message "WARNING: log buf data structure(s) have
    changed" will be displayed during initialization and by the "log" command.

  * Fix to add a linefeed after the description of the "kmem -I" option in the
    "help kmem" output, which was recently added in crash-7.0.0.

  * Document the "-s" command line option in the "crash -h|--help" output and
    in the crash.8 man page to also indicate that runtime command scrolling is
    turned off by default.

  * Fix for the "irq -d" option on 2.6.25 and later X86_64 kernels to display
    the Intel interrupt descriptor table contents.  Without the patch, those
    kernel versions would display "irq: -d option not supported or applicable
    on this architecture or kernel".

  * Fix for the "kmem -[sS]" options on Linux 3.11-rc1 and later kernels that
    are configured with CONFIG_SLAB.  Without the patch, the command fails
    with the error message "kmem: invalid structure member offset:

  * Fix for the "kmem <address>" and the "bt -F" options on Linux 3.8 and
    later kernels that are configured with CONFIG_SLUB.  Without the patch,
    the command would fail with the error message "kmem: invalid structure
    member offset: page_slab".

  * Fix misspellings in the "bt" and "search" help page output.

  * Fix for the determination of the base of the kernel's unity-mapped virtual
    address region on recent ARM kernels whose "_stext" variable address has
    changed from 0xc0008000 to 0xc0100000.  Without the patch, the crash
    session fails during invocation with the error message "crash: vmlinux and
    vmcore do not match!".

  * When printing data structures, prevent the embedded gdb from symbolically
    translating pointers that are not kernel virtual addresses.  Kernel or
    module symbols that are not virtual addresses can be mistaken for virtual
    addresses, leading to NULL pointers being invalidly translated into a
    symbol name from the vmlinux or module object file.  For example, in
    X86_64 kernels, NULL pointers are translated into the symbol
    "irq_stack_union", whose value is not a virtual address, but rather a
    per-cpu offset value of 0.

  * Fix for the "kmem -s <address>" or "kmem <address>" options on Linux 3.11
    and later kernels configured with CONFIG_SLAB.  Without the patch, both
    commands fail with the error message "kmem: cannot resolve cache_cache".

  * Fix to prevent the "bt" command from generating a segmentation violation
    in a case where the per-cpu "current_task" variable and the runqueue's
    "curr" variable did not agree, and the panic task had overflowed its
    kernel stack.  This led to the selection of the a starting RSP address
    which belonged to the other task; without the patch, the command generated
    a segmentation violation after printing the first frame of the backtrace.

 -- Troy Heber <troyh@debian.org>  Wed, 16 Oct 2013 10:26:33 -0600

crash (7.0.1-3) unstable; urgency=low

  * Updated format-strings patch to cover additional architectures
  * Requested update to packages-arch-specific to enable s390x and armel
    (#717283)

 -- Troy Heber <troyh@debian.org>  Tue, 16 Jul 2013 07:00:41 -0600

crash (7.0.1-2) unstable; urgency=low

  * Missed updating the Architecture line in the -1 upload, armel
    (closes: #656132)
  * Move defs.h to /usr/include/crash (closes: #702513)
  * Patch from Stefan Bader to add a format string to all *printf calls

 -- Troy Heber <troyh@debian.org>  Thu, 11 Jul 2013 08:51:32 -0600

crash (7.0.1-1) unstable; urgency=low

  * Enable armel (closes: #656132)
  * Enable s390x (closes: #710675)
  * Include the crash/defs.h header (closes: #702513)
  * Sync with the Ubuntu crash package, build crash extensions, SPU has been
    dropped (closes: #584119), lpia has been dropped (closes: #504522).
  * Fix the -I include path sequence in the extensions/eppic.mk file to
    prevent a series of "redefined" and "redeclaration" warnings when
    compiling the EPPIC extension module.
  * Address two compile-time warnings generated as a result of the
    gdb*7.6.patch.  Without the patch, there are "warning: no previous
    prototype" warnings for gdb_main_entry() and replace_ui_file_FILE().
  * Implemented a new "mod -t" option that walks through the installed modules
    and checks for non*zero values in each module's "taints" bitmask, and
    translates the bits into symbolic letters if possible, or shows the
    hexadecimal value of the bitmask if not.  In older kernels, the
    "license_gplok" field is checked, and if non*zero, its value is displayed
    in hexadecimal.  Lastly, if the "gpgsig_ok" member exists and is zero, a
    "(U)" notation will also be displayed.
   * Fixed compiler warnings generated by extensions/trace.c when compiled
     with *DFORTIFY_SOURCE=2.  Without the patch, the messages "warning:
     ignoring return value of 'mktemp', declared with attribute
     warn_unused_result", "warning: ignoring return value of 'fwrite',
     declared with attribute warn_unused_result", and "warning: 'trace_dat'
     may be used uninitialized in this function" are generated.
  * Laid down the basic infrastructure for the ARM64 backtrace facility using
    the kernel's arm64 unwind facility as a basis.  Compile*tested only.
  * Implemented the ARM64 virtual-to-physical kernel and user address
    translation functions, supporting both 2*level page tables with 64K pages,
    and 3*level page tables with 4K pages.  Also added the associated PTE
    translator function.  Compile*tested only.
  * Implemented the capability of building crash as an x86_64 binary for
    analyzing ARM64 dumpfiles on an x86_64 host, which can be done by entering
    "make target=ARM64".  After the initial build is complete, subsequent
    builds can be done by entering "make" alone.
  * Added "aarch64" to the ExclusiveArch: line in the crash.spec file.
  * Fix for the S390X "bt" command for Linux 3.10 and later kernels.  Without
    the patch, the starting stack location of the per*cpu async and panic
    stacks of active tasks would be incorrectly determined.

 -- Troy Heber <troyh@debian.org>  Tue, 18 Jun 2013 13:38:49 -0600

crash (7.0.0-1) unstable; urgency=low

  * Updated the embedded gdb version to FSF gdb-7.6, which was officially
    released by the Free Software Foundation on http://www.gnu.org on 4/26/13.
    The primary motivation for upgrading from gdb-7.3.1 is for future ARM64
    support, but there are also issues with respect to kernels built with
    gcc-4.8.0.  The relevant pieces of gdb-7.3.1.patch were forward-ported to
    the gdb-7.6.patch, and the GDB_7_6 #define has been applied in the
    top-level sources where appropriate.

  * Continued incremental steps for support of the ARM64 architecture.

  * Fix for the "struct name.member <address>" option if the "member" name is
    also coincidentally a member of an embedded structure that is located
    before the targeted member.  Without the patch, the value of the embedded
    structure's member is displayed instead of the targeted member.

  * Expose a heretofore unadvertised "kmem -[sS] -I slab[,slab]" option that
    specifies one or more slab cache names in a comma-separated list that the
    "kmem -[sS]" option should ignore.  This can be helpful in cases where a
    corrupted slab cache may never complete, or in very large memory systems
    where one or more caches take an inordinate amount of time to complete.

  * Fix for the "kmem -i" option on Linux 3.9 and later kernels.  Without the
    patch, the "TOTAL SWAP", "SWAP USED" and "SWAP FREE" lines are not
    displayed because the kernel's former "swapper_space" singular
    address_space structure has has been changed into a "swapper_spaces" array
    of address_space structures, with one for each swap partition.

  * Support for the PPC64 BOOK3E processor family, whose virtual memory
    layout and PTE format are significantly different.  Without the patch, the
    crash session fails to initialize properly.  (ataufer@us.ibm.com)

  * Fix for the PPC64 "sys", "mach" and initial system banner display of of
    the processor speed in more recent kernels.  Without the patch, the
    "MACHINE" line in the initial banner and in the "sys" command display may
    show "MACHINE: ppc64 (unknown Mhz)", and the "mach" command may show
    "PROCESSOR SPEED: (unknown)".  (anderson@redhat.com, ataufer@us.ibm.com)

  * Since the libgdb.a file no longer exists in gdb-7.6, the Makefile does not
    check for it as a determining factor for whether a build has succeeded.

  * gdb-7.6 requires that the bfd library's "config.h" file be #include'd
    before the "bfd.h" file by the top-level symbols.c file.

  * gdb-7.6 has replaced/moved the gnu_debuglink_crc32() utility function to
    bfd_calc_gnu_debuglink_crc32(); the call in symbols.c has been configured
    based upon the gdb version.

  * gdb-7.6 has reworked its do_cleanups() functionality, which requires the
    gdb_error_hook() function to pass all_cleanups() as an argument.

  * gdb-7.6 causes the anon_member_offset() function to fail due to a change
    in the output string; the function has been changed to work with both old
    and new gdb versions.

  * gdb-7.6 required changes to vm_stat_init() and vm_event_state_init()
    functions because enum lists get displayed differently on the S390X and
    PPC64 architectures, which in turn caused failures of "kmem -i", "kmem -z"
    and "kmem -V" on those two machine types.

  * Adjusted the alignment of the "kmem -V" and "kmem -z" display of the items
    in the vm_stat[] array based upon the longest enumerator name string.

  * Adjusted the alignment of the "kmem -V" display of the cumulative totals
    of the per-cpu "vm_event_states" items based upon the longest enumerator
    name string.

  * Modified the top-level Makefile such that if the tar.gz file of the
    configured gdb version does not exist in the build directory, try to wget
    the file from http://ftp.gnu.org/gnu/gdb.  This is normally not necessary
    because the most recent gdb tar.gz file is bundled with the the crash
    utility tar.gz and src.rpm files.  However, it will allow the use of the
    gdb-less crash.tar.gz file created via "make tar" to be copied to another
    location, or perhaps copied to a git tree, and then built without
    containing the the gdb tar.gz file.

  * Fix for the s390x.c file to handle a gcc-4.8.0 compiler warning when
    building crash with "make warn", or compiler failures when building with
    "make Warn" on an S390x machine.  Without the patch, gcc-4.8.0 generates
    the message "error: variable ‘psw_addr’ set but not used
    [-Werror=unused-but-set-variable]".

  * Fixes for the s390dbf.c file to handle gcc-4.8.0 compiler warnings when
    building crash with "make warn", or compiler failures when building with
    "make Warn" on an S390X machine.  Without the patch, gcc-4.8.0 generates
    three "error: variable ‘<variable>’ set but not used
    [-Werror=unused-but-set-variable]" messages.

  * Fix for an X86_64 warning message that gets displayed during session
    initialization when running against Linux 3.9 kernels that were compiled
    with gcc-4.8.0.  Without the patch, the warning message "crash: cannot
    determine thread return address" is displayed prior to the system
    information.

  * Fix for lack of kernel text line number information by the "dis -l" and
    "sym <text-symbol or address>" options on Linux 3.9 kernels that were
    compiled with gcc-4.8.0.  Without the patch, the line number information
    for kernel text symbols of type "(T)" may not be able to be determined and
    displayed.

 -- Troy Heber <troyh@debian.org>  Mon, 13 May 2013 11:59:26 -0600

crash (6.1.6-1) unstable; urgency=low

  * New upstream version 6.1.6

  * Fix for a crash-6.1.5 regression that causes the "mount" command to fail
    on kernel versions prior to Linux 3.3.  Without the patch, the command
    fails with the message "mount: invalid structure member offset:
    mount_mnt_devname".

 -- Troy Heber <troyh@debian.org>  Mon, 06 May 2013 11:20:38 -0600

crash (6.1.5-1) UNRELEASED; urgency=low

  * New upstream version 6.1.6

  * Fix for the ARM "irq" command.  Without the patch, on 2.6.34 and later
    kernels configured with CONFIG_SPARSE_IRQ, the command fails with the
    error message "irq: cannot determine number of IRQs".

  * Fix for a segmentation violation generated during invocation while parsing
    a makedumpfile-created "flat-format" vmcore-incomplete file.  Without the
    patch, the crash session would display the error message "crash: unable to
    seek dump file vmcore-incomplete", followed by a segmentation violation.

  * Fix for a segmentation violation generated by the "kmem -s" option when
    encountering a corrupted array_cache structure that contains a bogus
    "avail" count that is greater than the maximum legitimate limit value.
    Without the patch, the "kmem -s" command would print a warning message
    regarding the invalid array_cache, complete the command normally, and then
    generate a segmentation violation when freeing buffers used by the
    command.

  * Update to the "kmem -s" function to include the errors found in slab
    structures to the display of total errors found when the command
    completes.  Without the patch, invalid list_head pointers, bad inuse
    counters, and bad s_mem pointers were not added to the total number of
    errors found.

  * Fix for "crash --osrelease <dumpfile>" and "crash --log <dumpfile>" when
    run on an ARM compressed kdump with a crash binary that was built with
    "make target=ARM" on an x86 or x86_64 host.  Without the patch, if the
    compressed kdump header version is 4 or 5, "crash --osrelease" fails with
    the error message "crash: compressed kdump: cannot lseek dump vmcoreinfo"
    followed by "unknown", and "crash --log" fails with the error message
    "crash: <dumpfile>: no VMCOREINFO section".

  * Enhancement to the "swap" command to display the swap_info_struct address
    of each configured swap device.  The output has been changed to display
    the address in the first column, and the variable-length device name has
    been moved to the last column.

  * Fix for the "kmem -[sS]" options on kernels that configured with both
    CONFIG_SLUB and CONFIG_NODES_SHIFT, and that are running on hardware that
    generates NUMA nodes that contain no memory.  Without the patch, both
    command options fail immediately with the message "kmem: invalid kernel
    virtual address: 8  type: kmem_cache_node nr_partial".

  * Increment the PPC64 NR_CPUS maximum value from 1024 to 2048.

  * Strip the ".isra." and ".part." appendages to cloned text symbol names,
    which seem to have been introduced by gcc-4.6.0.  To keep them intact, a
    "--no_strip" command line option has been added.

  * Patch to the internal gdb_get_datatype() function to return the typecode
    and length of integer variables.

  * Fix for the "dev -d" option on Linux 3.6 and later kernels.  Without the
    patch the option fails with the message "dev: invalid structure member
    offset: request_queue_rq".

  * Export the red/black tree utility functions rb_first(), rb_parent(),
    rb_right(), rb_left(), rp_next() and rb_last().  Without the patch, they
    are statically declared and only used by the "runq" command.

  * Implemented a new "timer -r" option that displays the hrtimer queues,
    supporting all versions from Linux 2.6.16 to the present.

  * Fix for "kmem -s" on Linux 3.8 and later kernels that are configured with
    CONFIG_SLAB.  The kmem_cache.array[] length has been extended to store the
    nodelist pointers, so the original method to determine the per-cpu array
    limit can go out-of-range.  Without the patch, during session
    initialization there may be a message that indicates "crash: invalid
    kernel virtual address: <address> type: array cache limit", followed by
    "crash: unable to initialize kmem slab cache subsystem"; if those messages
    do get shown, then "kmem -s" will subsequently fail during runtime with
    the message "kmem: kmem cache slab subsystem not available".

  * Two Xen hypervisor fixes: (1) Fix console buffer content length
    calculation: Function displaying console buffer always assumes its content
    length equal to console buffer size.  This is not true and sometimes it
    sends garbage to the screen. This patch fixes this issue.  (2) Improve
    calculation of beginning of virtual address space: Xen changeset 26447
    (x86: re-introduce map_domain_page() et al) once again altered virtual
    address space.  The current algorithm calculating its start could not cope
    with that change.  New version establishes this value on the base of image
    start address and is more generic.

  * Fix for the ARM "vtop" command when run on a module address.  Without the
    patch, the command fails with error message "vtop: ambiguous address:
    <module-address>  (requires -u or -k)".

  * Add the "--active" command line option to the crash(8) man page and to the
    "crash [-h|--help]" output.

  * Add the "--buildinfo" command line option to the crash(8) man page and to
    the "crash [-h|--help]" output.

  * Remove the unadvertised and unnecessary "--data_debug" command line
    option, given that it is the default setting.

  * Remove the unadvertised and obsolete "--no_namelist_gzip" command line
    option.

  * Add the "-g [namelist]" command line option to the crash(8) man page and
    to the "crash [-h|--help]" output.

  * Remove the unadvertised and never-implemented "--shadow_page_tables"
    command line option.

  * Fix for the ARM "vtop" command when run on a user virtual address of the
    panic task.  Prior to Linux 3.3, the panic task's pgd gets overwritten
    with a pgd that identity-maps the whole address space, and therefore crash
    loses the capability of translating any user virtual address into its
    original physical address.

  * Fix to prevent the ARM linker mapping symbols "$d" and "$a" from being
    added to the list of symbols from kernel modules.  Without the patch, the
    two symbols would only be rejected from the base kernel's symbol list, but
    would be added to the symbol list of individual kernel modules.

  * Fix for the X86_64 "bt" command to recognize that the kernel was built
    with CONFIG_FRAME_POINTER on Linux 3.7 and later kernels that are
    configured with CONFIG_FUNCTION_TRACER.  In those kernels, the special
    4-byte NOP instruction that can be overwritten during runtime for dynamic
    ftracing has been moved to the very beginning of each function, before the
    function preamble.  Without the patch, the test that checks the function
    preamble to determine whether CONFIG_FRAME_POINTER was configured would
    fail, which could potentially lead to less reliable backtraces.

 -- Troy Heber <troyh@debian.org>  Mon, 06 May 2013 11:20:38 -0600

crash (6.1.4-1) UNRELEASED; urgency=low

  * New upstream version 6.1.4

  * Fix for a crash-6.1.3 regression with respect to the loading of extension
    modules.  Because of the change that replaced the obsolete _init() and
    _fini() functions with constructor and destructor functions, extension
    modules may fail to load when the extension modules are built with older
    compiler/linkers.  The problem is due to the continued usage of the
    -nostartfiles compiler option regardless whether the extension module has
    replaced its _init() function with a constructor function; with older
    compiler/linkers, the module may fail to load.  The fix predetermines
    whether an extension module still uses _init() or if it has been updated
    to use a constructor function, and will use the -nostartfiles option only
    on older "legacy" modules.

  * Implemented a new "list -r" option that can be used with lists that are
    linked with list_head structures.  When invoked, the command will traverse
    the linked list in the reverse order by using the "prev" pointer instead
    of "next".

  * Fix for the "swap" command's FILENAME display.  In some kernels between
    2.6.32 and 2.6.38 the swap partition's pathname may not show the "/dev"
    filename component.

  * Fix for the "swap" command's PCT display, which will display a a negative
    percentage value if more than 5368709 swap pages are in use.

 -- Troy Heber <troyh@debian.org>  Mon, 06 May 2013 11:20:38 -0600

crash (6.1.3-1) unstable; urgency=low

  * New upstream version 6.1.3

  * Implemented a new "crash --log dumpfile" option which dumps the
  kernel log buffer and exits.  A kernel namelist is not required,
  but the dumpfile must contain the VMCOREINFO data from the ELF
  header of the original /proc/vmcore file that was created by the
  kexec/kdump facility.  Accordingly, this option supports kdump ELF
  vmcores and compressed kdump vmcores created by the makedumpfile
  facility, including those that are in makedumpfile's intermediary
  "vmcore.flat" format.

  * Fixes for the ppc64.c file to handle gcc-4.7.2 compiler warnings when
  building crash with "make warn", or compiler failures when building
  with "make Warn" on a PPC64 machine.  Without the patch, gcc-4.7.2
  generates three "error: variable ‘<variable>’ set but not used
  [-Werror=unused-but-set-variable]" messages.

  * Update the PPC64 architecure's internal storage of the kernel's
  MAX_PHYSMEM_BITS value for Linux 3.7 and later kernels, which changed
  from 44 to 46 to for 64TB support.  Without the patch, there is no
  known issue, but the stored value should be correct.

  * Fix for the "mount" command's header display to indicate "MOUNT"
  instead of "VFSMOUNT" on Linux 3.3 and later kernels because the
  the first column contains a mount structure address instead of a
  vfsmount structure address.  For those later kernels, it is
  permissable to enter either the mount structure address, or the
  address of the vfsmount structure that is embedded within it, as
  an optional argument.  The output has also been tightened up so
  that the DIRNAME field is not shifted to the right based upon the
  DEVNAME field length.

  * Fix for the "mount <superblock>" search option on 2.6.32 and later
  kernels.  Without the patch, it is possible that multiple filesystems
  will be displayed.

  * Update to the "mount" help page to indicate that a dentry address
  may be used as a search option.

  * Fix for the "ps -l [pid|task|command]" option to display the
  specified tasks sorted with the most recently-run task (the largest
  last_run/timestamp) shown first, as is done with the "ps -l" option
  with no arguments.  Without the patch, the timestamp data gets
  displayed in the order of the "[pid|task|command]" arguments.

  * Added the "ps" command to the set of supported "foreach" commands,
  serving as an alternative manner of passing task-identifying
  arguments to the "ps" command.  For example, a command such as
  "foreach RU ps" can be accomplished without having to pipe normal
  "ps" output to "grep RU".  All "ps" options are supported from the
  "foreach" framework.

  * Fix for the "ps -G" restrictor option such that it also takes affect
  if the -p, -c, -l, -a, -r or -g options are used.  Without the
  patch, thread group filtering would only take effect when the default
  "ps" command is used without any of the options above.

  * Fortify the internal hq_open() function to return FALSE if it is
  already open, and have restore_sanity() and restore_ifile_sanity()
  call hq_close() unconditionally.

  * Added the "extend" command to the set of built-in commands that
  support minimal mode.  A new MINIMAL flag has been created for
  extension modules to set in their command_table_entry.flags field(s)
  to signal that a command supports minimal mode.  If the crash session
  has been invoked with --minimal, then the "extend" command will
  require that the module registers at least one command that has
  the MINIMAL bit set.

  * Prevent the "__crc_*" symbols from being added to the the ARM kernel
  symbol list.

  * Prevent the "PRRR" and "NMRR" absolute symbols from being added to
  the ARM kernel symbol list.  Without the patch, it allows an invalid
  set of addresses to pass the check in the in_ksymbol_range() function.

  * Fix for the ppc.c file to handle a gcc-4.7.2 compiler warning when
  building crash with "make warn", or compiler failures when building
  with "make Warn" on a PPC machine.  Without the patch, gcc-4.7.2
  generates the message "error: variable ‘dm’ set but not used
  [-Werror=unused-but-set-variable]".

  * Workaround for the "crash --osrelease dumpfile" option to be able
  to work with malformed ARM compressed kdump headers.  ARM compressed
  kdumps that indicate header version 3 may contain a malformed
  kdump_sub_header structure with offset_vmcoreinfo and size_vmcoreinfo
  fields offset by 4 bytes, and the actual vmcoreinfo data is not
  preceded by its ELF note header and its "VMCOREINFO" string.  This
  workaround finds the vmcoreinfo data and patches the stored header's
  offset_vmcoreinfo and size_vmcoreinfo values.  Without the patch, the
  "--osrelease dumpfile" command line option fails with the message
  "crash: compressed kdump: cannot lseek dump vmcoreinfo", followed by
  "unknown".

  * Fix for the "help -n" option on 32-bit compressed kdumps.  Without
  the patch, the offset_vmcoreinfo, offset_eraseinfo, and offset_note
  fields of the kdump_sub_header have their upper 32-bits clipped off
  when displayed.  However, it should be harmless since the offset
  values point into the first few pages of the dumpfile.

  * Update of the extensions/echo.c extension module example, and the
  "extend" help page, to utilize a constructor function to call the
  register_extension() function.  The _init() and _fini() functions
  have been designated as obsolete for usage by dlopen() and dlclose().
  The echo.c example module has been modified to contain echo_init()
  and echo_fini() functions marked as __attribute__((constructor)) and
  __attribute__((destructor)) respectively.

  * Updated extensions/dminfo.c, extensions/snap.c and extensions/trace.c
  to replace their _init() and _fini() functions with constructor and
  destructor functions.

  * Fix for the "bt" command on the PPC64 architecture when running
  on Linux 3.7 kernel threads.  Without the patch, some kernel threads
  may fail to terminate on the final ".ret_from_kernel_thread" frame,
  repeating that frame endlessly, because the stack linkage pointer
  points back to itself instead of being NULL.

 -- Troy Heber <troyh@debian.org>  Wed, 13 Feb 2013 09:28:40 -0700

crash (6.1.2-1) UNRELEASED; urgency=low

  * New upstream version 6.1.2

  * Enhancement of the "task" command to display both the task_struct and the
    thread_info structures of a task.  The -R option accepts members of
    either/both structure types.

  * Fix for the X86_64 "search" and "rd" commands due to this commit:
    http://git.kernel.org/linus/027ef6c87853b0a9df53175063028edb4950d476 Upon
    any attempt to read a page within the RAM region reserved for AMD GART on
    a live system, the Linux 3.7rc1 commit above causes causes /dev/mem,
    /proc/kcore and the /dev/crash drivers to spin forever, leading to a
    kernel soft lockup.  The RAM pages reserved for GART consist of 2MB large
    pages whose _PAGE_PRESENT bits are turned off.  Prior to the above commit,
    a read() attempt on GART RAM would cause an unresolvable page fault, and
    would harmlessly return an EFAULT.  The commit above has changed
    pmd_large() function such that it now returns TRUE if only _PAGE_PSE bit
    is set in the PTE, whereas before it required both _PAGE_PSE and
    _PAGE_PRESENT.  So instead of just failing the read() system call with an
    EFAULT, the page fault handling code now considers it a spurious TLB
    fault, and the instruction is retried indefinitely.  The crash utility
    patch stores the GART physical memory range, and disallows any attempts to
    read from it.

  * If an EPPIC_GIT_URL environment variable is defined, then the URL that it
    points to is used as an alternative to the code.google.com git source
    repository for the eppic.so extension module.  However, the alternative
    site is only accessed if code.google.com can first be pinged; this patch
    removes that restriction.

  * Fix for the "files" command PATH display on kernels configured with
    CONFIG_DEVTMPFS, when the vfsmount pointer in an file structure's "f_path"
    member does not point to the root vfsmount required for reconstructing the
    full file pathname.  Without the patch, open files in /dev directory may
    be truncated and not show the "/dev" filename component.

  * Enhancement to the "kmem -v" option on 2.6.28 and later kernels that
    utilize the "vmap_area_list" list of mapped kernel virtual memory regions,
    replacing the usage of the to-be-obsoleted "vmlist" list.  In those
    kernels, the output of the command will also show each vmap_area structure
    address, in addition to its vm_struct address, memory range, and size.

  * Update to the exported do_rbtree() and do_rdtree() functions such that
    they will return the number of items found in the targeted tree, similar
    in nature to the do_list() function.  The two functions have also been
    fixed such that the VERBOSE flag is actually recognized, so that external
    callers are able to gather the entries in a tree without having them
    displayed.  The calls to either function may be enclosed with hq_open()
    and hq_close() so the that tree entries may be subsequently gathered by
    retrieve_list() into a supplied buffer, as well as to recognize a
    corrupted list with duplicate entries.

  * Fix for the "extend -u" option to prevent the usage of a member of a
    free()'d extension_table structure.  No command failure occurs, but rather
    an inadvertent coding error.

  * Fix to allow error() to be called during an open_tmpfile() sequence prior
    to close_tmpfile() being called.  There are no crash functions that call
    error() during an open_tmpfile() sequence, but there's no reason why it
    cannot be done.  Without the patch, the error message gets displayed on
    stdout (as expected), but the error message will also overwrite/corrupt
    the tmpfile() data while it is being parsed.

  * Fix to properly determine whether X86_64 kernels were configured with
    CONFIG_FRAME_POINTER, due to this ftrace-related commit:
    http://git.kernel.org/linus/d57c5d51a30152f3175d2344cb6395f08bf8ee0c
    Without the patch, the crash utility fails to determine whether the kernel
    was built with CONFIG_FRAME_POINTER, and therefore the "bt" command cannot
    take advantage of it for more reliable backtraces.

  * Fix to properly determine whether 2.6.31 and earlier X86_64 kernels were
    configured with CONFIG_FRAME_POINTER.  Without the patch, the crash
    utility may fail to determine whether the kernel was built with
    CONFIG_FRAME_POINTER.  In those kernel versions -- which may be dependent
    upon the compiler version used -- one of the sample functions tested may
    have their "push %rbp, mov %rsp,%rbp" function preamble separated by other
    instruction(s), resulting in a false negative that precludes the "bt"
    command from taking advantage of framepointers.

  * Fix for the file and line-number string that is displayed by the "sym
    <kernel-text>" option.  Without the patch, the "/usr/src/" part of the
    string is stripped, and the filename string itself could have two
    corrupted characters in the pathname, for example, showing
    "k3.nel-3.6.fc17" instead of "kernel-3.6.fc17".  This is dependent upon
    the compiler version, or perhaps the string library that is linked into
    the crash binary, because it only has been seen on crash binaries built
    with gcc-4.7.  The fix now displays the full pathname, no longer dropping
    the "/usr/src" from beginning.

  * Restricted the X86_64 "line_number_hook" to kernels earlier than 2.6.24,
    i.e., kernels prior to the x86/x86_64 merge.  Without the patch, the
    manufactured filename information for assembly-language files was
    incorrect for 2.6.24 and later kernels.  Also, the kernel debuginfo data
    now has file/line-number data for assembly-language files as well,
    obviating the need for the hook.

  * Fix for the extensions/trace.c extension module to prevent a double free
    exception that would occur if a calloc() call fails during module
    initialization.

  * Fix for the "p -u" option if a 32-bit kernel symbol is incorrectly passed
    as an argument.  Without the patch, the command fails, but the next
    command requiring the services of the embedded gdb module will generate an
    error message of the sort "*** glibc detected *** crash: free(): invalid
    pointer: <address> ***", or "*** glibc detected *** crash: munmap_chunk():
    invalid pointer: <address> ***", followed by a backtrace, and an abort of
    the crash session.

  * Fix for the embedded gdb module to correctly handle kernel modules whose
    ELF header contains "__ksymtab" and "__ksymtab_gpl" sections with non-zero
    nonsensical "Address" values.

  * Without the patch, if one of the odd sections above is encountered, the
    "Offset" values of the remaining sections are not processed; and if the
    module's .data section is ignored, gdb incorrectly calculates the address
    of all symbols in the module's .data section, leading to incorrect output
    if, for example, data is printed with the gdb "p" command.  This invalid
    ELF section format was introduced in Linux 3.0 by the kernel's
    "scripts/module-common.lds" file.

  * Fix for the "runq -g" option if the kernel contains more than 200 task
    groups.  Without the patch, the command generates a segmentation
    violation.

 -- Troy Heber <troyh@debian.org>  Wed, 13 Feb 2013 09:28:40 -0700

crash (6.1.1-1) UNRELEASED; urgency=low

  * New upstream version 6.1.1

  * Fixes for the ARM "vtop" command display of kernel unity-mapped virtual
    addresses.  Without the patch, the PGD, PMD values may be incorrect, and
    the PAGE value is always incorrectly calculated.

  * Fix for Linux 2.6.34 and later kernels that are configured with
    CONFIG_SLUB, but not configured with CONFIG_IKCONFIG, to be able to
    determine the kernel's CONFIG_NR_CPUS value.  Without the patch, if the
    actual number of cpus is larger than the crash utility's per-architecture
    NR_CPUS maximum value, then the cpus beyond the NR_CPUS limit would not be
    accounted for.

  * Increment the X86_64 NR_CPUS maximum value from 4096 to 5120.

  * Try to determine whether the kernel is running as a virtual machine by
    using any available kernel-specific data or by dumpfile type.  The results
    of the hypervisor type search will be stored in the internal kernel_table
    data structure, and if a hypervisor type can be determined, its name will
    be displayed by the "mach" command.  The result of the hypervisor
    determination, successful or otherwise, may be viewed during session
    initialization if the -d<number> command line option is invoked, or during
    runtime via the "help -k" option.  Only applicable to the X86, X86_64 and
    IA64 architectures.

  * Allow the "ps command" and "foreach name" command options to contain more
    than the kernel's maximum of 15 characters that are stored in each task's
    task_struct.comm[] array.  Without the patch, the two string arguments
    were required to be the possibly-truncated command name string in order to
    match.

  * Enhancement to the "ps" command to allow any of the "command" arguments to
    be POSIX extended regular expressions.  The expression string must be
    encompassed by "'" characters, and will be matched against the names of
    all tasks.

  * Add support for 2GB pages in the S390X virtual-to-physical address
    translation function.  Required for the new IBM zEC12 Mainframe.

  * Initial preparation for support of the ARM64 architecture.

  * Fix for the "log" command if a kernel message contains either a '\n' or a
    '\t'.  Without the patch, the two characters are replaced with a '.', and
    the message continues.  With the patch applied, the characters are
    printed, and if it is a '\n', spaces are inserted after the linefeed so
    that the subsequent characters in the message line up appropriately under
    the preceding line.

  * Fix for the "kmem -[sS]" options on kernels that configured with both
    CONFIG_SLUB and CONFIG_NODES_SHIFT, and that are running on hardware that
    generates NUMA node ids that are not numbered consecutively.  Without the
    patch, both command options fail with the error message "kmem: invalid
    kernel virtual address: 8  type: kmem_cache_node nr_partial".

  * Fix for the "trace.so" extension module's "trace show" command.  Without
    the patch, the output showing each trace point is shown with two
    hexadecimal virtual addresses instead of displaying them symbolically
    using the format "<function> <-- <function>".

  * Fixes for handling incomplete/invalid ELF or compressed kdump vmcores
    whose per-cpu NT_PRSTATUS notes are missing.  For example, this has been
    seen to happen when kexec/kdump incorrectly recognizes a Xen DomU kernel
    as a Xen Dom0 kernel.  Without the patch, possible ramifications would be
    a NULL pointer dereference during session intialization when searching for
    the panic task, or during the "bt" command on an active task.

  * Implemented a new "runq -g" option that displays CFS runqueue tasks
    hierarchically by task_group.  Tasks in throttled groups are also
    displayed.  The "runq" command with no option will no longer display
    task_group data for the RT queue.

  * Patchset for Xen support up to version 4.2:

  * Fix for the S390X virtual-to-physical address translation to allow the HW
    Change-bit override bit (0x100) to be used in page table entries.

  * Fix for a rarely-seen circumstance in which a kdump ELF vmcore of a Xen
    dom0 kernel gets incorrectly identified as a old-style netdump ELF vmcore.
    This has only been seen after the original kdump ELF vmcore was
    transformed via "makedumpfile -d1".  Without the patch, the crash session
    fails during initialization with the messages "crash: invalid size
    request: 0  type: xen kdump p2m mfn page", followed by "crash: cannot read
    xen kdump p2m mfn page".  If run against the Xen hypervisor, the session
    fails during initialization with the error message "crash: read error:
    kernel virtual address: <address>  type: crashing_cpu".

 -- Troy Heber <troyh@debian.org>  Wed, 13 Feb 2013 09:28:40 -0700

crash (6.1.0-1) unstable; urgency=low

  * Fix for 32-bit SADUMP dumpfiles to correctly check whether a requested
    physical address is within the 0-640K backup region.  Without the patch,
    requested physical addresses that are larger than 32-bits are truncated to
    32-bit values, leading to unexpected results.

  * Added support for the ELF dumpfile type that is generated by the new
    "virsh dump --memory-only" option.  The "--memory-only" option uses a new
    "dump-guest-memory" QEMU monitor command that creates an ELF kdump vmcore
    clone.  The "virsh dump" command continues to borrow the "migrate" QEMU
    monitor command to create a file that is designed for guest migration, and
    not well-suited for a vmcore because it is not designed for random-access
    of physical memory.  A new "help -r" option has been added to dump the
    registers that are stored in per-cpu "QEMU" ELF notes; those notes are
    used to distinguish this dumpfile type from regular kdump ELF vmcores.
    The patch also combines common functionality between the new format and
    the SADUMP format.

  * Fix for the "runq" command for kernels that have the CFS scheduler.
    Without the patch, a cpu's RT runqueue may incorrectly display "[no tasks
    queued]" when in fact there are tasks on its queue.

  * In the highly-unlikely event that a pre-Linux 3.5 kernel's log buffer
    cannot be read during initialization, display a message indicating
    "WARNING: cannot read log_buf contents", and just continue.  Without the
    patch, a "readmem" error would be displayed and the crash session would be
    killed.

  * Updated the "net -a" option to support Linux 2.6.9 to 3.6.0.  Without the
    patch, the option displayed "net: -a option not supported or applicable on
    this architecture or kernel".

  * Enhanced the "net -a" option to show the struct neighbour address
    associated with each line of output.

  * Fix for the "runq" command for kernels that are configured with
    CONFIG_RT_GROUP_SCHED.  Without the patch, tasks contained within an RT
    group scheduling entity are not displayed.

  * Fix for "crash --version" or "crash -v" to prevent the sourcing of a
    .gdbinit file that is located in the current directory.

  * Preemptive fix to handle this patch to the x86 devmem_is_allowed()
    function that was posted on the Linux Kernel Mailing List here:
    https://lkml.org/lkml/2012/8/28/357 If the proposed kernel patch put into
    place, a failed attempt to use /dev/mem when the kernel is configured with
    CONFIG_STRICT_DEVMEM will not result in an automatic attempt to use
    /proc/kcore.  With this crash utility patch, the automatic switch to
    /proc/kcore will be attempted regardless whether the kernel patch is
    accepted or not.

  * Patch for CVE-2012-3509: libiberty: objalloc_alloc integer overflows

  * Fix for Linux 3.0 and later kernels that have been configured with
    CONFIG_SLAB, and without CONFIG_NODES_SHIFT (or have set it to 0).
    Without the patch, the warning messages "crash: nr_node_ids: symbol does
    not exist" and "crash: unable to initialize kmem slab cache subsystem" are
    displayed during initialization, and the "kmem -[sS]" options fail with
    the message "kmem: kmem cache slab subsystem not available".

  * Allow the build procedure to use an alternate compiler by passing "make
    CC=<compiler>" to the top-level Makefile.

  * Allow the user to append options to the "configure" script that is invoked
    by the initial embedded gdb build procedure.  The additional options
    should be put in a file named "GDBFLAGS.extra" located in the top-level
    directory.

  * Change for the "ps" command if a task is stopped due to the task being
    traced by another task.  Without the patch, the traced task is shown with
    the "ST" (stopped) status; with the patch it will be shown with a "TR"
    ncement of the "task" command to display both the task_struct and the
    thread_info structures of a task.  The -R option accepts members of
    either/both structure types.
  * The "TR" state has been added to the "foreach" command's list of task
    state qualifiers.  Without the patch, there is no way to filter out tasks
    that are stopped due to being traced by another task.

  * Fix for passing a a "gdb" command to a crash session via a pipe if there
    are any spaces preceding the "gdb" command name in the string.  Without
    the patch, the command will fail with the error message "gdb: gdb request
    failed: <truncated input-string>".

  * Preparation for the future S390/S390X structure name change from
    "_lowcore" to "lowcore".  The patch checks which structure is defined and
    uses the correct name.

  * Replaced datatype_info() calls in do_radix_tree() and do_rdtree() with
    preferred MEMBER_SIZE() macro.

 -- Troy Heber <troyh@debian.org>  Tue, 23 Oct 2012 09:48:28 -0600

crash (6.0.9-1) UNRELEASED; urgency=low

  * Fix for building on host machines that have glibc-2.15.90 installed, in
    which case the glibc header file /usr/include/bits/siginfo.h no longer
    declares a "struct siginfo", but only the "siginfo_t" typedef.  Without
    the patch, the build of the embedded gdb module fails with the error
    message "linux-nat.h:63:18: error: field 'siginfo' has incomplete type".

  * Add support for reading compressed kdump dumpfiles that were compressed by
    the snappy compressor.  This feature is disabled by default.  To enable
    this feature, build the crash utility in the following manner: (1) Install
    the snappy libraries by using the host system's package manager or by
    directly downloading libraries from author's website.  The packages
    required are: - snappy - snappy-devel The author's website is:
    http://code.google.com/p/snappy (2) Create a CFLAGS.extra file and an
    LDFLAGS.extra file in top-level crash sources directory: - enter -DSNAPPY
    in the CFLAGS.extra file - enter -lsnappy in the LDFLAGS.extra file.  (3)
    Build crash with "make" as always.

  * Prevent the "ptov" command from returning an invalid virtual address on
    32-bit architectures.  Without the patch, the command may result in an
    invalid virtual address if the physical address entered cannot be accessed
    by a unity-mapped kernel virtual address.  The patch verifies that the
    calculated virtual address can be translated back into the supplied
    physical address.

  * Fix to automatically try /proc/kcore as an alternative live memory source
    when the /dev/crash driver does not exist and /dev/mem is unusable because
    the kernel was configured with CONFIG_STRICT_DEVMEM.  Without the patch,
    the automatic switch from /dev/mem to /proc/kcore is only attempted on the
    X86 and X86_64 architectures.

  * Added missing linefeeds to several error messages in makedumpfile.c.

  * Fix for a regression introduced by a crash-5.1.1 patch that reworked the
    handling of "set" commands that are put in .crashrc files, such that only
    certain command options would get resolved before the crash session is
    initialized.  Without this patch, the "--less", "--more", "--no_scroll"
    and "--CRASHPAGER" crash command line options do not properly override
    conflicting "set scroll <option>" entries that are put in a .crashrc file.

  * Added new "--hex" and "--dec" crash command line options, which will set
    the command output format to hexadecimal or decimal.  These two command
    line options will override any "set radix [10|16]" settings in a .crashrc
    file; since decimal is the default, the "--dec" option would only be
    necessary to override a "set radix 16" setting in a .crashrc file.

  * Fix for the "runq" and "timer" commands when running against 2.6.34 and
    later kernels that are not configured with CONFIG_SMP.  Without the patch,
    the "runq" command fails with the error message "runq: per-cpu runqueues
    does not exist", and the "timer" command fails with the error message
    "timer: zero-size memory allocation! (called from <address>)".

  * If code.google.com is not available from the host build machine, then
    "make extensions" will be delayed by a 10 minute timeout of the "git
    clone" command that downloads the EPPIC library and extension module
    source tree.  The patch pings code.google.com first in order to determine
    its availability before attempting the download.

  * For kernel versions 3.5 and later, in which the kernel log buffer has been
    converted from a byte-buffer to a variable-length record buffer, the "log
    -m" option will display the level in hexadecimal, and depending upon the
    kernel version, the value also contains either the facility or flags bits.

  * Fix for accessing the per-cpu registers from ARM vmcores generated by
    recent kernels in which the per-cpu data region has been moved into mapped
    kernel virtual address space.  Without the patch, an incorrect physical
    address is calculated, resulting in bogus register contents.

  * Check that an s390x dumpfile is a "live dump" earlier during session
    initialization so that the internal LIVE_DUMP flag will get set when
    "crash --minimal" is invoked.

  * Removed the usage of C++ keywords in structure and structure member names
    declared in "defs.h" so that extension modules written in C++ will compile
    successfully.  Accordingly, the "struct namespace" is renamed to "struct
    symbol_namespace", the struct symbol_table_data's "namespace" member is
    renamed to "kernel_namespace", and the struct gnu_request's "typename"
    member is renamed to "type_name".

  * Fix for the date displayed by the initial system banner and by the "sys"
    command for Linux version 3.6 and later.  Without the patch, the date
    displayed will be that of the UNIX epoch, i.e., midnight, Jan 1, 1970 UTC,
    adjusted to local time.

  * When the eppic.so extension module is built by "make extensions", the
    EPPIC source tree is downloaded from its upstream source repository at
    https://code.google.com/p/eppic.  However, if an EPPIC_GIT_URL environment
    variable is defined, then the URL that it points to will be used as an
    alternative git source repository.

  * Fix for a segmentation violation generated by the "struct" command when
    printing a structure member using the "struct_name.member" argument
    format, where the member is a "char *" that points to a string that
    contains a "%" character.

  * Patchset to support the most recent Xen hypervisor and Xen pvops kernels:
    (1) Always calculate max_cpus value (2) Read only crash notes for onlined
    CPUs (3) Read variables from dynamically allocated per_cpu data (4) Get
    idle data from alternative source (5) Read data correctly from dynamically
    allocated console ring (6) Add support for 3 level P2M tree

  * Fix for building a 32-bit eppic.so extension module after having built
    crash with "make target=ARM" or "make target=X86" on an x86_64 host.
    Without the patch, the eppic.so extension module would be built as a
    64-bit binary.

  * For the ARM architecture, fix the determination of the kernel modules base
    address when modules are not installed, and update the "mach" command to
    display the "KERNEL MODULES BASE" address.

  * Fix for the "kmem -[sS]" commands for Linux version 3.6 and later kernels
    configured with CONFIG_SLUB.  Without the patch, the commands fail with
    the error message "kmem: invalid structure member offset:
    kmem_cache_objsize".

  * Fix for an invocation failure when running against Linux version 3.6 and
    later kernels that are configured with CONFIG_SLAB.  Without the patch,
    the crash session fails during initialization with the error message
    "crash: invalid structure member offset: kmem_cache_s_next".

  * Fix for the "kmem -[sS]" commands on kernels that are configured with
    CONFIG_SLUB to prevent a silent hang if a per-node slab cache partial list
    recurses back onto itself.  Without the patch, it was necessary to kill
    the command; with the patch an error message is displayed and the command
    continues on to the next kmem slab cache.

  * Fix for the "kmem -[sS]" and "kmem -s list" options on dumpfiles from
    kernels that are configured with CONFIG_SLUB which have been filtered by
    the makedumpfile facility.  Without the patch, it is possible that those
    commands may generate the error message "kmem: page excluded: kernel
    virtual address: <address>  type: kmem_cache buffer", and would require
    either the "--zero_excluded" command line option or having to execute "set
    zero_excluded on" during runtime in order to complete successfully.

 -- Troy Heber <troyh@debian.org>  Wed, 22 Aug 2012 07:03:58 -0600

crash (6.0.8-1) UNRELEASED; urgency=low

  * Introduction of a new "tree" command that can be used to dump the the
    addresses of all data structure entries in a red-black tree or a radix
    tree.  Similar in nature to the "list" command, each data structure in a
    tree can be dumped in total, or one or more members in each strucure may
    be dumped.

  * If a compressed kdump header contains an invalid "nr_cpus" value, allow
    the crash session to continue after printing a warning message.  Without
    the patch, on non-S390/S390X systems, an invalid nr_cpus value generates a
    message such as "crash: compressed kdump: invalid nr_cpus value: 0", and
    the session subsequently fails with the message "crash: vmcore: not a
    supported file format".  However, compressed kdumps have been seen that
    have an nr_cpus value of 0, but the session can still run normally.  The
    patch changes the message to "WARNING: compressed kdump: invalid nr_cpus
    value: 0", and the session is allowed to continue.

  * Clarify the "help -n" output for compressed kdumps to show the offsets and
    sizes of the vmcoreinfo, notes, and eraseinfo sections  in both
    hexadecimal and decimal, and to cleanly handle compressed kdumps that have
    no NR_PRSTATUS notes in the notes section.

  * Fix for the X86 "bt" command for a possible situation where the crashing
    cpu's back trace starts at the "sysrq_handle_crash" stack frame instead of
    farther down the stack below the exception at the "crash_kexec" stack
    frame.

  * Fix for the "runq" command for kernels that have the CFS scheduler.
    Without the patch, tasks queued on a priority array of a cpu's RT runqueue
    may not be displayed.

  * Fix for analyzing dumpfiles from kernel version 3.5 and later, in which
    the kernel log buffer has been converted from a byte-buffer to a
    variable-length record buffer.  Without the patch, the crash session fails
    during initialization with the error message "crash: cannot determine
    length of symbol: log_end".  If the session is run on a live system, or if
    the session is invoked with the "-s" command line option, the session is
    not killed, but in those cases the "sys" and "log" commands will fail with
    the same error message.

  * For kernel versions 3.5 and later, in which the kernel log buffer has been
    converted from a byte-buffer to a variable-length record buffer, two new
    options have been added.  The "log -t" option will display log messages
    without the timestamp prepended.  The "log -d" option will display the
    dictionary of key/value pair properties that the kernel's dev_printk()
    function optionally appends to a message.

  * The SIAL extension module has been replaced by the "eppic" facility, which
    stands for "Embeddable Pre-Processor and Interpreter for C".  The eppic
    git tree is located at http://code.google.com/p/eppic.  When "make
    extensions" is done, the eppic source code will be downloaded
    automatically via "git clone", and then the "eppic.so" extension module
    will be built.  The "eppic.so" extension module offers the same command
    set as the older "sial.so" module; the SIAL extension module source files
    have been completely removed.  If desired, the eppic sources can be
    updated by executing "git pull" from the "extensions/eppic" subdirectory.

  * Added a new "list -h" option.  When used with -h, the "start", address
    must be the address of a data structure that contains an embedded
    list_head structure.  Updated the "list" help page to more clearly
    differentiate the difference between using a "start" address alone, "-H
    start", or "-h start", and added a WARNING section to address the problem
    of "-h start" passing through an external LIST_HEAD(), or passing though
    the actual starting point of the list that is contained within a different
    type of data structure from all the entries in the list.

  * Implemented a new "scope" crash environment variable that can alter the
    text scope for viewing the definition of data structures.  It is useful in
    cases where the kernel defines more than one instance of of a data
    structure with the same name, and the "wrong" one is selected by default.
    The variable takes a kernel or module text symbol name or address, or an
    expression evaluating to the same.  If the variable is a module text
    address, then the command will attempt to load the module into the crash
    session if it is not already loaded; if that fails, then the setting of
    the variable will fail.

  * Update to the extensions/trace.c extension modue to handle a kernel
    version 3.4 patch that added a new "ring_buffer_per_cpu.nr_pages" member,
    making the trace buffer size per-cpu.

  * Fix to recognize a kernel version 3.5 patch that changed the "qstr.len"
    member from an unsigned integer into a member of an anonymous structure
    within an anonymous union.  Without the patch, the following commands
    fail, displaying the following error messages: mount: "mount: invalid
    structure member offset: qstr_len" files: "files: invalid structure member
    offset: qstr_len" vm: "vm: invalid structure member offset: qstr_len"
    swap: "swap: invalid structure member offset: qstr_len fuser: "files:
    invalid structure member offset: qstr_len"

  * The "fuser" command generates the above error because it uses the "files"
    command behind the scenes.

  * Fix for the function that gathers a cpu's register set from an NT_PRSTATUS
    note of an x86 or x86_64 compressed kdump header if one or more cpus were
    offline when the system crashed.  In that case, if the requested cpu
    number is equal or greater than the number of online cpus, the function
    will fail.  When that happens, that cpu's back trace will not have those
    registers as a fall-back option if the starting point cannot be determined
    otherwise.

  * Added "ipcs" and "tree" command references to the crash.8 man page.

  * Redefined the usage of the "struct -o" flag when used in conjunction with
    a symbol or address argument.  Without this patch, the behavior has been
    to print the warning message "struct: -o option not valid with an address
    argument", ignore the "-o", and to just display the structure at that
    address.  With this patch, each structure member will be proceded by its
    virtual address.

  * Added new "bt -s [-xd]" options that will display symbol names plus their
    offset in each frame.  The default behavior is unchanged, where only the
    symbol name is displayed.  The symbol offset will be expressed in the
    default output format, which can be overridden with the -x or -d options.

  * Fix for 32-bit PPC to handle a situation where one or more NT_PRSTATUS
    note(s) were not captured in the kdump header due to cpu(s) not responding
    to an IPI.  Without the patch, the "bt" command may result in a
    segmentation violation.

  * Fix for building the PPC64 architecture in ppc64 environments where where
    applications are built 32-bit by default when -m32 or -m64 are not
    specified.  This was a regression introduced in the crash-6.0.3 patch that
    introduced the "make target=PPC" feature that can be performed on ppc64
    hosts.  Without the patch, a "make" command would build a 32-bit PPC crash
    utility on such ppc64 hosts.

  * Fix for the 32-bit PPC "irq" command.  Without the patch, depending upon
    the kernel version, the command would fail with the message "irq: cannot
    determine number of IRQs", or "irq: invalid structure size: irqdesc".

  * Fix for the 32-bit PPC "pte" command to properly translate the PTE bit
    settings based upon the correct Book3E specifications.

 -- Troy Heber <troyh@debian.org>  Mon, 02 Jul 2012 17:03:16 -0600

crash (6.0.7-1) UNRELEASED; urgency=low

  * Enhanced the "search" command to allow the searched-for value to be
    entered as a crash (expression) or a kernel symbol name.  The resultant
    value of an (expression) or kernel symbol value must fit into in the
    designated value size if -w or -h are used, and neither variant may be
    used with the -c option.  If found, both the resultant value and the
    argument input string will be displayed next to the target address(es).

  * Added a new "search -t" option that will restrict the search to the kernel
    stack pages of all tasks.  If one or more matches are found in a task's
    kernel stack, the output is preceded with a task-identifying header.

  * Fix for the s390x "bt -[tT]" options when run on an active task on a live
    system.  Without the patch, the options fail with the message "bt:
    invalid/stale stack pointer for this task: 0".

  * Fix for s390x "vm -p" option, which may show invalid user to physical
    address translation data if a page is not mapped.  Without the patch, a
    page's translation may indicate "<address>   SWAP: (unknown swap location)
    OFFSET: 0", or show an incorrect swap offset on an actual swap device.

  * Added new "vm -[xd]" options to be used in conjunction with "vm -[mv]",
    which override the current default output format with hexadecimal or
    decimal format for just the command instance.  Without the patch, it would
    require changing the default output format with "hex" or "dec" prior to
    executing "vm -[mv]".  The new flags may also be used with "foreach vm
    -[mv]".

  * Fix for the s390x "vm -p" and "vtop -u <user-address>" commands if the
    page containing the relevant PTE is not mapped.  Without the patch, the
    commands fail with the error message "vm: read error: kernel virtual
    address: 0  type: entry" or "vtop: read error: kernel virtual address: 0
    type: entry"

  * Fix for the s390x "vm -p" command and "vtop -u <user-address>" commands to
    properly translate pages that are swapped out into their swap file and
    offset.  Without the patch, the swap file and offset would not be
    displayed.

  * Added new "list -[xd]" options to be used in conjunction with "list -s",
    which override the current default output format with hexadecimal or
    decimal format for just the command instance.  Without the patch, it would
    require changing the default output format with "hex" or "dec" prior to
    executing "list -s".

  * Added new "net -[xd]" options to be used in conjunction with "net -S",
    which override the current default output format with hexadecimal or
    decimal format for just the command instance.  Without the patch, it would
    require changing the default output format with "hex" or "dec" prior to
    executing "net -S".  The new flags may also be used with "foreach net -S".

  * Added new "mach -[xd]" options to be used in conjunction with "mach -c",
    which override the current default output format with hexadecimal or
    decimal format for just the command instance.  Without the patch, it would
    require changing the default output format with "hex" or "dec" prior to
    executing "mach -c".

  * If the value read from the cpu online, present, or possible masks contains
    a cpu bit value that is outside the architecture's maximum NR_CPUS value,
    print a warning message during invocation.  Without the patch, a corrupt
    vmcore containing a bogus mask value could quietly corrupt heap memory.

  * Add support to for reading dumpfiles compressed by LZO using makedumpfile
    version 1.4.4 or later.  This feature is disabled by default.  To enable
    this feature, build the crash utility in the following manner: (1) Install
    the LZO libraries by using the host system's package manager or by
    directly downloading libraries from author's website.  The packages
    required are: - lzo - lzo-minilzo - lzo-devel The author's website is:
    http://www.oberhumer.com/opensource/lzo (2) Create a CFLAGS.extra file and
    an LDFLAGS.extra file in top-level crash sources directory: - enter -DLZO
    in the CFLAGS.extra file - enter -llzo2 in the LDFLAGS.extra file.  (3)
    Build crash with "make" as always.

  * Fix for the included "trace" extension module.  Without the patch, if the
    module initialization sequence fails, a double-free in the module may lead
    to a subsequent malloc() segmentation violation in the crash session.

  * Incorporated the "ipcs" extension module written by Qiao Nuohan as a
    built-in command.  The command displays the kernel's usage of the System V
    shared memory, semaphore and message queue IPC facilities.  It differs
    from the original extension module by fixing a failure scenario if the
    current task is exiting, and adds a "-n pid|task" option, which displays
    the IPCS facilities with respect to the namespace of a given pid or task.

  * Fix for a gdb-7.3.1 regression that causes the line number capability to
    fail with certain ranges of x86 base kernel text addresses.  Without the
    patch, the "dis -l <symbol>" or "sym <symbol>" commands would fail to show
    line number information for certain ranges of base kernel text addresses.

  * Added a new "printm" command to the embedded gdb module.  It is currently
    only used by the "pstruct" extension module, but can be used to dump the
    type, size, offset, bitpos and bitsize values of an expression.

  * Added a new "runq -t" option that displays the timestamp information of
    each cpu's runqueue, which consists of either the rq.clock, the
    rq.most_recent_timestamp or rq.timestamp_last_tick value, whichever
    applies.  Following each cpu timestamp is the last_run or timestamp value
    of the active task on that cpu, whichever applies, along with the task
    identification.

  * Fix for an initialization-time warning when running on a live system with
    the most recent version of the modprobe command, which no longer supports
    the -l and --type options.  The modprobe is used to detect whether the
    crash.ko memory driver is part of the distribution.  Without the patch, a
    warning message is issued that indicates "/sbin/modprobe: invalid option
    -- 'l'".  If the driver is built into the kernel, the message is harmless.
    If the driver is not built into kernel, then the crash.ko (/dev/crash)
    driver would not be selected as the live memory source.

 -- Troy Heber <troyh@debian.org>  Fri, 01 Oct 2012 11:17:42 -0600

crash (6.0.6-1) unstable; urgency=low

  * New upstream version 6.0.6
  * Extend the supported cross-architecture build capability so that it
    applies to the SIAL extension module.  Without the patch, when building
    the SIAL module in an environment where the overlying crash utility was
    built with "make target=ARM", "make target=PPC", or "make target=X86", the
    SIAL extension module would continue to be built for the host
    architecture.
  * Fixes for memory leaks and possible segmentation violations when unloading
    SIAL extension module scripts.
  * Fix for the new "foreach RU" task state qualifier.  Without the patch, the
    runnable tasks are not selected.
  * Fix to disallow multiple task states from being entered using the "foreach
    <task-state>" qualifier.  Without the patch, if multiple states were
    entered, the last one on the command line would be honored.
  * Fix for the "extend" command to allow the usage of 32-bit PPC extension
    modules.  Without the patch, the command fails with the message: "extend:
    <object>.so: not an ELF format object file".
  * If an input line starts with "#" or "//", then the line will be saved as a
    comment that is visible when re-cycling through the command history list.
  * Fix for a crash-5.1.9 regression that broke the "bt -g" option.  Without
    the patch, the option is ignored completely.
  * Fix for s390x virtual-to-physical translation of virtual addresses that
    are backed by 1MB pages.
  * The s390x has a dumpfile method that creates "live dumps", where the
    kernel continues to run while the dumpfile is being created.  The initial
    system banner display and the "sys" command will inform the user that the
    dumpfile is a "[LIVE DUMP]", and the "bt -a" option will fail with the
    message "bt: -a option not supported on a live system or live dump".
  * Newly-created dumpfiles generated by the "snap.c" extension module will
    now be recognized as "live dumps".  Accordingly, the initial system banner
    display and the "sys" command will inform the user that the dumpfile is a
    "[LIVE DUMP]", and the "bt -a" option will fail with the message "bt: -a
    option not supported on a live system or live dump".
  * If "bt" alone is attempted on an active task in a "live dump", it will
    indicate "(active)", i.e., the same as if it were attempted on a live
    system.
  * If an extension module does not define the appropriate architecture, i.e.,
    "-DX86", "-DX86_64", etc., then the inclusion of "defs.h" will generate a
    compiler failure indicating "error: 'NR_CPUS' undeclared here (not in a
    function)".  In that case, the architecture will now default to that of
    the host machine.
  * Prevent a highly-unlikely incorrect calculation of the maximum cpudata
    array length of a kmem_cache during initialization of of CONFIG_SLAB
    kernels.
  * Prevent an infinite loop during the initialization of the kmem_cache
    subsystem in CONFIG_SLAB kernels if the cache list or the vmcore is
    corrupt.  If the kmem_cache list links back into itself, messages showing
    the first "duplicate" entry in the list and "crash: unable to initialize
    kmem slab cache subsystem" will be displayed.
  * Update to the "mod" command to additionally search for module object files
    in the directory containing the kernel namelist (vmlinux) file.  This will
    allow an alternate module-debuginfo directory tree to be set up like so: #
    cd <directory> # rpm2cpio kernel-debuginfo-<release>.rpm | cpio -idv
    Having done that, and by referencing the vmlinux file in that directory
    tree directly or by symbolic link, the "mod" command will search for
    module object files starting from the directory containing the vmlinux
    file if they are not found in the standard /lib/modules/<release>
    directory.
  * Update to the s390x "bt" command if a task was running in userspace.
    Without the patch, the back trace display ended at the kernel entry
    function frame; with the patch, the user space PSW register is displayed
    with a "(user space)" tag, followed by the general purpose register set.
  * In the unlikely event that the access of ARM or x86_64 kernel unwind table
    data fails during crash invocation, print a warning message and allow the
    crash session to continue.  Without the patch, the crash session would
    fail immediately.

 -- Troy Heber <troyh@debian.org>  Thu, 10 May 2012 09:18:26 -0600

crash (6.0.5-1) unstable; urgency=low

  * New upstream version 6.0.5
  * Enhancement to the "foreach" command to allow any of the "name" arguments
    to be POSIX extended regular expressions.  The expression string must be
    encompassed by "'" characters, and will be matched against the names of
    all tasks.
  * Fix for the embedded gdb module's "ptype" command, and by extension, the
    crash utility's "struct" command, to be able to fully display embedded
    structure or union members of a structure/union.  Without the patch, if a
    structure or union is a member of a structure or union that is a member of
    a structure or union, then it is displayed as "struct {...}" or "union
    {...}".
  * Extend the "ps -l" output to also display the task state next to its
    last_run/timestamp value.
  * Enhancement to the "foreach" command which adds a new "state"
    task-indentifier argument that filters tasks by their task state.  The
    state argument may be any of the task states displayed by the "ps"
    command: RU, IN, UN, ST, ZO, SW or DE.
  * Implemented a new pc->cmd_cleanup function pointer and an optional
    pc->cmd_cleanup_arg argument that will allow any command to register a
    function and an optional argument that will be called after a command has
    completed successfully, or more likely, unsuccessfully.  Normally the only
    cleanup required for a command is the freeing of buffers that were
    allocated with GETBUF(), but that is performed automatically after each
    command is run.  However, with the introduction of the new POSIX regular
    expression functionality of the "foreach" command, there needed to be a
    way to call regfree() in the case where where regcomp() was called
    successfully, but then the command later encountered one of several fatal
    error conditions.  This facility is also available for use by extension
    module commands.
  * Enforce the usage of a kernel thread's pgd from its active_mm for the ARM
    "vtop -c" command; if its active_mm is NULL, make the command fail
    similarly to the other architectures, displaying the error message "vtop:
    no active_mm for this kernel thread".
  * Fix for the x86_64 "bt" command running against recent kernels if an
    active task was operating on its IRQ stack when the crash occurred.
    Without the patch, the determination of the IRQ exception frame was
    off-by-8, displaying invalid register data and the error message "bt:
    WARNING: possibly bogus exception frame".
  * Update to handle the vfsmount structure change in 3.3 kernels, in which
    most members of the vfsmount structure have been moved into a new "struct
    mount", and the vfsmount structure has been embedded in the new mount
    structure.
  * Fix for the "ps" command to prevent the display of "??" under the ST (task
    state) column.  Without the patch, in more recent kernels, if more than
    one bit were set in the task_struct.state field, the state would display
    "??".  With the fix, the primary state will always be displayed.
  * Update to the output of the "set" command when it displays a task's state.
    Without the patch, if more than one bit was set in the task_struct.state
    field, "STATE: (unknown)" would be displayed.  With the fix, all bits in
    both the task_struct.state and task_struct.exit_state fields are
    translated.
  * Implemented a new "vm -P <vma-address>" option, which is similar to "vm
    - p", but only does the page translations of the specified VM area of a
    context.
  * Add support for the Freescale PowerPC e500mc version of the E500 processor
    chipset, and rework the PPC platform-specific code in order to more easily
    support new processors.
  * Implemented a new "gdb" crash environment variable that can be used to
    alter a crash session's behavior such that all commands are passed
    directly to the embedded gdb module.  The new mode is turned on and off by
    entering "set gdb on" and "set gdb off".  When running in this mode, the
    command prompt will be "gdb>".  In order to execute native crash commands
    while running in this mode, precede the command with the "crash"
    directive, for example, "crash ps".
  * Fix for a "*** stack smashing detected ***: crash terminated" failure
    during the initial system banner display on a 32-bit PPC platform.
  * Redesigned/simplified the internal read_string() function to prevent a
    potential segmentation violation.
  * Updates for the 32-bit PPC "vtop" command output: (1) Translate kernel
    virtual addresses for FSL BOOKE by using the TLBCAM setting (2) Remove the
    PMD line from the display (3) Fix the displayed PHYSICAL values of FSL
    BOOKE PTE format
  * Fix for crash invocation failure on 3.3-era kernels in which the the
    former standalone "xtime" timespec structure has been moved into the
    "timekeeper" structure.  Without the patch, the crash session would fail
    early on with the message "crash: cannot resolve: xtime".  The patch also
    prevents the crash session failure in the unlikely event that the timespec
    access fails.

 -- Troy Heber <troyh@debian.org>  Thu, 29 Mar 2012 09:41:13 -0600

crash (6.0.4-1) unstable; urgency=low

  * New upstream version 6.0.4
  * Fix to allow the recently-added "mod -g" and "mod -r" options to be used
    together.  Without the patch, if both options were used, the command would
    fail with a "mod: invalid option" error complaining about one or the other
    option letter.
  * Additional update for 3.1.x and later kernels configured with CONFIG_SLAB,
    which have replaced the kmem_cache.nodelists[] array with a pointer to an
    outside array.  Without the patch, depending upon a system's cpu
    configuration and actual cpu count, the crash session may display "crash:
    unable to initialize kmem slab cache subsystem" during invocation, or if
    it does succeed, "kmem -s" may generate a segmentation violation.
  * Document the "crash [-h|--help] all" option in the crash.8 man page and in
    the "crash [-h|--help]" output.
  * Fix the S390/S390X-specific "s390dbf" command's "hex_ascii" debug data
    printing routine to prevent the display of non-ASCII characters.
  * Fix for ARM stack unwinding on 3.2 and later kernels due to commit:
    http://git.kernel.org/linus/de66a979012dbc66b1ec0125795a3f79ee667b8a
  * Implemented a new "search -x <count>" option that displays the memory
    contents before and after any found search target.  The before and after
    memory context will consist of "count" memory items of the same size as
    the searched-for value.  This option is not applicable with the -c option.
  * Fix for the x86_64 Xen hypervisor "bt" command.  Without the patch, the
    contents of the RDX register in exception frames incorrectly shows the
    contents of the RCX register.
  * Implementation of a platform-based vmalloc address translation scheme for
    the 32-bit PPC architecture, introducing support for the PPC44X platform
    while maintaining the current default platform.  Related to that, the PTE
    translation function used by "vtop" properly handles platforms that use
    64-bit PTEs, and the "mach" command displays the kernel's
    "powerpc_base_platform" name string.
  * Fix for the usage of native gdb commands where the command output is
    redirected to a pipe and then redirected to a file.
  * Fix to prevent a crash session that is run over a network connection that
    is killed/removed from going into 100% cpu-time loop.  The fix that went
    into crash-5.0.2 to handle the change in behavior of the built-in
    readline() library call does not suffice in cases where readline() never
    gets a chance to be called.  Accordingly, the crash session is now
    initialized with a PR_SET_PDEATHSIG prctl setting, which will cleanly kill
    itself upon its parent's death.
  * Fix for the support of PPC64 compressed kdumps, a regression that was
    introduced in crash-6.0.3 when support for 32-bit PPC compressed kdumps
    was implemented.  Without the patch, the crash session fails to
    initialize.
  * Fix for the x86_64 "bt" command to prevent the possible skipping of the
    stack frame just above an exception frame that indicates "[exception RIP:
    unknown or invalid address]".  This highly-unlikely event could occur if
    the kernel jumps to a bogus text location and attempts to execute it, or
    if the exception occurs in vmalloc space that was allocated with
    module_alloc() by a systemtap kprobe-handler, and therefore has no
    symbolic reference.

 -- Troy Heber <troyh@debian.org>  Mon, 05 Mar 2012 13:11:27 -0700

crash (6.0.3-1) unstable; urgency=low

  * New upstream version 6.0.4
  * Fix to gdb-7.3.1/bfd/bfdio.c to properly zero out a complete struct stat
    with a corrected memset argument; caught when compiling with the Clang
    Static Analyzer.
  * Fix for the SIAL extension module to remove a call to sial_free() for an
    uninitialised variable that can result in a segmentation violation when
    unloading a sial script.
  * Fix for the "runq" command for kernels that are configured with
    CONFIG_FAIR_GROUP_SCHED.  Without the patch, tasks contained within the
    task-group of a cpu's currently-running task may not be displayed.
  * Implemented support for the analysis of 32-bit PPC ELF kdump vmcores.
  * Implemented the capability of building a PPC crash binary on a PPC64 host,
    which can be done by entering "make target=PPC".  After the initial build
    is complete, subsequent builds can be done by entering "make" alone.
  * Determine the PPC page size from the kdump PAGESIZE vmcoreinfo data.
  * Fix for the "kmem -[sS]", "kmem -[fF]" and "kmem <address>" options in 3.2
    kernels.  Without the patch, the commands fail with the error "kmem:
    invalid structure member offset: page_lru".
  * Addition of a set of dumpfile read diagnostic debug statements.  They are
    primarily of use when dealing with kdump invocation or runtime read
    failures (ELF kdumps or compressed kdumps), and can serve to help pinpoint
    the problem as a faulty/corrupted dumpfile vs. a crash utility bug.  Some
    statements are seen when invoking crash with "-d1", more with "-d4", and
    all of them with "-d8".  During runtime, debug statements may be seen by
    entering "set debug <level>".
  * Fix for X86 kernels that have CONFIG_X86_32, CONFIG_DISCONTIGMEM,
    CONFIG_DISCONTIGMEM_MANUAL and CONFIG_NUMA all configured.  Without the
    patch, the VM subsystem fails to initialize properly because the pgdat
    structures are allocated by the remap allocator.
  * Fix for the "vtop" command on large NUMA X86 kernels where a node's
    starting physical address is larger than 32-bits.  Without the patch, the
    page struct contents of a virtual address  may not be displayed.
    Associated with that fix, the "kmem -n" line that displays a node's
    MEM_MAP, START_PADDR and START_MAPNR values has been adjusted to more
    properly handle large physical addresses.
  * Update for the ARM architecture to recognize a recent change of its
    vmlinux section name from ".init" to ".init.text".  Without the patch, a
    warning message indicating "crash: cannot determine text init space" is
    displayed during initialization.
  * Significant speed increase of the "kmem -p" command, especially on
    large-memory systems.
  * Implemented new "irq -a" and "irq -s" options.  The "irq -a" option
    displays the cpu affinity for in-use IRQs.  The "irq -s" option displays
    per-cpu IRQ stats in a similar manner to /proc/interrupts for all cpus.
    To show a limited set of per-cpu IRQ stats, there is an associated "-c"
    option that limits the cpus shown, which can be expressed as "-c 1,3,5",
    "-c 1-3", or "-c 1,3,5-7,10".  The options are currently restricted to
    X86, X86_64, ARM, PPC64 and IA64.
  * Removal of a redundant read of the kernel's __per_cpu_offset pointers in
    the ARM architecture's arm_get_crash_notes() function.
  * Fix for an ARM architecture segmentation violation because of a stack
    overflow due to recursion in the page table translation code.  This was
    seen when analyzing a dumpfile where the page tables had been corrupted.
  * Fix for the the "FREE HIGH" tally in the X86 "kmem -i" display.  Without
    the patch, the PAGES, TOTAL and PERCENTAGE values would always show zero
    values.
  * Fix for the "kmem -n" output display for 32-bit architectures that are
    configured with CONFIG_SPARSEMEM.  Without the patch, the values under the
    CODED_MEM_MAP, MEM_MAP and PFN columns are all shifted to the left.
  * Cleanup of several SIAL extension module files to address bison 2.5 and
    gcc 4.4.3 compile-time warnings.
  * Fix for "net -[sS]" command options on the ARM architecture.  Without the
    patch, invalid data would be displayed because the calculation of the
    socket address was off by 4 bytes.
  * Fix for the ARM "bt" command to allow the core kernel unwind tables to be
    used in cases where the module unwind tables are inaccessible.
  * Implementation of a new "dev -d" option that displays disk device I/O
    statistics.  For each disk device, its major number, gendisk and
    request_queue addresses are displayed along with the total number of
    allocated I/O requests that are in-progress.  The total I/O requests are
    then split out into synchronous vs. asynchronous counts (or reads vs.
    writes in older kernels), and the number that are in-flight in the device
    driver.
  * Update for 3.1.x and later kernels configured with CONFIG_SLAB, which have
    replaced the kmem_cache.nodelists[] array with a pointer to an outside
    array.  Without the patch, the crash session fails during invocation with
    the error "crash: zero-size memory allocation!".
  * Implemented support for the analysis of 32-bit PPC compressed kdump
    vmcores.
  * Prevent the "runq" command from dumping an unending loop of tasks if the
    CFS runqueue has been corrupted.  If the output of a cpu's runqueue would
    display a duplicate task, the output will stop with the message "WARNING:
    duplicate CFS runqueue node: task <address>".
  * Repurposed/renamed the rarely-used and rarely-needed "mod -r" option to
    "mod -R".  The option is used to reinitialize the module data; all
    currently-loaded symbolic and debugging data is deleted, and the installed
    module list will be updated (live systems only).
  * Implemented a new "mod -r" option, which will pass the "-readnow" flag to
    the embedded gdb module, which will override the two-stage strategy that
    it uses for reading symbol tables from module object files.  If the crash
    session was invoked with the "--readnow" flag, then the same override will
    occur automatically.  It should be noted that doing will increase the
    virtual and resident memory set size.
  * Performance increase for the "kmem -s <address>" option on kernels
    configured with CONFIG_SLAB, most notably on kernels whose
    kmem_cache.array[NR_CPUS] array is several pages in size.
  * Require that the "<slabname>" argument to "kmem -s <slabname>" be escaped
    with a '\' character in two situations: 1, in the highly-unlikely case of
    a kmem_cache slab named "list", to prevent the ambiguity with the "kmem -s
    list" command option. 2, if the first character of the <slabname>
    actually is a '\' character.

 -- Troy Heber <troyh@debian.org>  Mon, 05 Mar 2012 10:49:10 -0700

crash (6.0.2-1) unstable; urgency=low

  * New upstream version 6.0.2
  * Implemention of a new "arguments-input-file" feature, where an input file
    containing crash command arguments may be iteratively fed to a crash
    command.  For each line of arguments in an input file, the selected crash
    command will be executed.
  * Many thanks to Josef Bacik for proposing this feature.
  * Fix for the "runq" command for kernels configured with
    CONFIG_FAIR_GROUP_SCHED.  Without the patch, it is possible that a task
    may be listed twice in a cpu's CFS runqueue.
  * Fix for the internal parse_line() function to properly handle the case
    where the first argument in a line is a string argument that is
    encapulated with quotation marks.
  * Fix for the usage of gzip'd vmlinux file that was compressed with "gzip
    -n" or "gzip --no-name" without using "-f" on the command line.  Without
    the patch, the crash session fails with an error message that indicates
    "crash: <string-containing-garbage>: compressed file name does not start
    with vmlinux".  With the patch, if such a file is used without "-f", it
    will be accepted with a message that indicates that the original filename
    is unknown, and a suggestion that "-f" be used to prevent the message.
  * Added a new "mod -g" option that enhances the symbol display for kernel
    modules.  After loading a module's debuginfo data, the module object's
    section addresses will be shown as pseudo-symbols.
  * Fix for the "gdb" command to prevent the option handling of command lines.
    Without the patch, a gdb command string that contained a "-<character>"
    pair preceded by whitespace, would fail with the error message "gdb: gdb:
    invalid option -- <character>".
  * Fix for the panic-task determination if a dumpfile is taken on a system
    that actually has a cpu count that is equal to its per-arch NR_CPUS value.
    Without the patch, the task running on the cpu whose number is equal to
    NR_CPUS-1 would be selected.
  * Fix for the x86_64 "bt" command to handle a recursive entry into the NMI
    exception stack.  While this should normally never happen, it is possible
    if, for example, a kprope is entered into a function that gets executed
    during NMI handling, and a second NMI is received after the initial one,
    corrupting the original exception frame at the top of the NMI stack.
    Without the patch, the NMI stack backtrace and exception frame would be
    displayed repeatedly; with the patch, the backtrace and exception frame
    are followed by the warning message "NMI exception stack recursion: prior
    stack location overwritten".
  * Support dumpfiles that are created by the PPC64 Firmware Assisted Dump
    facility, also known as "fadump" or "FAD".  Without the patch, the panic
    task cannot be determined from a fadump vmcore which was subsequently
    compressed with makedumpfile, and therefore a proper backtrace of the
    panic task cannot be generated.
  * Preparation for new s390x kernels that will increase MAX_PHYSMEM_BITS from
    42 to 46.

 -- Troy Heber <troyh@debian.org>  Wed, 11 Jan 2012 08:30:06 -0700

crash (6.0.1-1) unstable; urgency=low

  * New upstream version 6.0.1
  * Several fixes/updates for the 32-bit PPC architecture: (1) Delete
    "__func__.<number>" symbols from the symbol list.  (2) Update manner of
    determining the processor speed displayed by the initial system banner and
    the "sys" command.  (3) Use the kernel's online cpus mask for determining
    the cpu count.  (4) Enable the "bt" command to follow traces that start in
    a per-cpu IRQ stack.  (5) Fix for the "bt" command to better prevent
    runaway stack traces.  (6) Fix for the "bt" command to recognize/display
    2.6 kernel exception frames.  (7) Update "bt" command's exception frame
    register display.  (8) Implement "bt -f" option.
  * Fix for the X86 kernel module line-number capability on some kernels.  It
    is unclear why only some kernel versions exhibit this problem, but the
    newly-embedded gdb version 7.3.1 has changed behaviour such that the
    addrmap arrays of module text address blocks may contain the module text
    offset values instead of their loaded vmalloc addresses, and so without
    the patch, there is no "match" for the vmalloc address when searching for
    its line number information.  It is fixed by doing a preliminary symbol
    search before accessing the line-number access routine.
  * Fix for the X86_64 kernel module line-number capability on kernels that
    have functions preceded by the __vsyscall_fn macro, which puts the kernel
    text function in the vsyscall page that starts at virtual address
    0xffffffffff600000.  This results in a text address block that starts at a
    normal kernel text address but ends with a vsyscall address, which
    inadvertently contains the whole vmalloc address range.  Without the
    patch, line number requests for module vmalloc text addresses would be
    mistakenly issued the first text section that ended with a vsyscall
    address, but then cannot find line number information in that section.
  * Fix for the inadvertent patching of the symbols of the 32-bit Xen
    hypervisor binary.  Without the patch, during initialization the
    minimal_symbols are "patched" with their original values, so they remain
    unchanged, and the message "WARNING: kernel relocated [0MB]: patching 3434
    gdb minimal_symbol values" is displayed.
  * If the "--mod <directory-tree>" command line option, or the setting of the
    CRASH_MODULE_PATH environment variable, or the "mod -S <directory-tree>"
    point to a tree that contains only the separate debuginfo
    "<module>.ko.debug" files, then those debuginfo files will be used as the
    internal "add-symbol-file" arguments to the embedded gdb module.  Without
    the patch, it was only acceptable to point to a directory tree that
    contained the base "<module>.ko" files, and the separate debuginfo files
    were found automatically based upon the directory path to the base module
    file.  This will allow an alternate module-debuginfo directory tree to be
    set up like so: # cd <directory> # rpm2cpio kernel-debuginfo-<release>.rpm
    | cpio -idv Having done that, the <directory> may be used with the
    "--mod", command line argument, or as the CRASH_MODULE_PATH environment
    variable, or as the "mod -S <directory> argument.
  * Make the suspension of the verbose/time-consuming "sym -l" output
    immediate upon the killing of the output pipe, or the entry of the first
    CTRL-c.  Without the patch, it would typically take several seconds, or
    multiple CTRL-c entries, for the "crash>" prompt to be re-displayed.
  * Fix for the handling of piped commands if the command receiving the crash
    output is non-existent or invalid.  Without the patch, the crash command
    would wait indefinitely unless multiple CTRL-c entries were entered.
  * Fix for the s390x "bt" command's floating point register display header.
    Without the patch, the header indicates that only registers 0, 2, 4 and 6
    are printed, a relic of the s390 architecture, whereas on the s390x all
    floating point registers are displayed.
  * Fix for the error message displayed when an untrusted .gdbinit file exists
    in the current directory.  Without the patch, the error message "WARNING:
    not using untrusted file: " would be followed by garbage ASCII data
    instead of the full pathname of the .gdbinit file.
  * Fix for the "kmem -p" and "kmem -i" commands in 3.1 and later kernels
    where the page structure's "_count" member was moved into an embedded
    anonymous structure.  Without the patch, the commands fail with the error
    message "kmem: invalid structure member offset: page_count FILE: memory.c
    LINE: 4610  FUNCTION: dump_mem_map_SPARSEMEM()".
  * Allow the user to append data to the CFLAGS and LDFLAGS variables in the
    top-level Makefile.  The extra data should be put in files named
    "CFLAGS.extra" and "LDFLAGS.extra" in the top-level directory; if either
    or both files exist, the extra data within them will be appended to the
    relevant variable.  Typically the LDFLAGS.extra file will contain
    "-l<library>" strings, and the CFLAGS.extra file will contain "-D<value>"
    strings.  This will allow the crash utility to be built with optional
    libraries, and the code that references them to be encapsulated with
    associated "#ifdef <value>" sections.  The extra CFLAGS data will also be
    passed to extension modules that are built within the local
    "crash-<version>/extensions" subdirectory.
  * The LDFLAGS setting in the Makefile can no longer be modified by hand.  It
    will be automatically configured by the "configure -b" option, based upon
    the contents of the optional "LDFLAGS.extra" file.
  * Fix for the "runq" command to display the runnable tasks that are
    contained within a cgroup's task-group scheduling entity.  Without the
    patch, only scheduling entities that are individual tasks get displayed,
    and runnable tasks in task-group scheduling entities get skipped.
  * Fix for the SIAL extension module when repeatedly loading and unloading a
    sial script when a full pathname is specified for the script.  Without the
    patch, the 4th unload attempt generates a segmentation violation.
  * Fix for the SIAL extension module to register the help and usage functions
    for a command only when loading a script.

 -- Troy Heber <troyh@debian.org>  Fri, 16 Dec 2011 09:49:04 -0700

crash (6.0.0-1) unstable; urgency=low

  * New upstream version 6.0.0
  * Depend on binutils  (close: #645124)
  * Updated the embedded gdb version to FSF gdb-7.3.1.  This change is
    required for kernels built with gcc-4.6.1, which now defaults to using
    -gdwarf-4.  When using prior versions of crash on such a vmlinux file, it
    fails immediately with the message "Dwarf Error: wrong version in
    compilation unit header (is 4, should be 2) [in module vmlinux]" followed
    by "crash: vmlinux: no debugging data available".  (anderson@redhat.com)
  * Incremental patch for the SADUMP dumpfile support that was introduced in
    crash-5.1.8.  The patchset fixes minor bugs, cleans up the sadump module,
    addresses the issue of gathering the first 640KB backup from a
    kdump-enabled kernel, prepares for makedumpfile's support of the SADUMP
    format, and has "bt" display the stored register set when the compressed
    kdump was generated from an SADUMP dumpfile.  (d.hatayama@jp.fujitsu.com)
  * Fix for the "gdb" command, or any command that resolves to a gdb command,
    to allow redirection to a pipe or file.  This addresses a regression that
    was introduced by an unrelated "gdb" command fix in crash-5.1.4 that
    prevented the stripping of quotation marks from the input line.  Without
    the patch, redirection of a "gdb" command to a pipe or file fails with the
    error message "gdb: gdb request failed:
    <original-command-line-including-redirection>".  (anderson@redhat.com)
  * Fix for live system analysis of 32-bit PPC kernels.  Without the patch,
    the session would fail after displaying the error message: WARNING:
    machine type mismatch: crash utility: PPC vmlinux: (unknown)
    (nakayama.ts@ncos.nec.co.jp)
  * Fix to allow vmalloc memory access on 32-bit PPC kernels.  Without the
    patch, the warning message "WARNING: cannot access vmalloc'd module
    memory" would be displayed during invocation, and kernel virtual memory
    that was vmalloc'd could not be accessed.  (nakayama.ts@ncos.nec.co.jp)
  * Fix to correctly gather task addresses from 32-bit PPC kernels.  Without
    the patch, during invocation a stream of error messages indicating "crash:
    invalid task address in pid_hash: <address>" would be displayed.
    (nakayama.ts@ncos.nec.co.jp)
  * Fix for the "bt" command in 32-bit PPC kernels.  Without the patch, the
    "bt" command would generate a segmentation violation.
    (nakayama.ts@ncos.nec.co.jp)

 -- Troy Heber <troyh@debian.org>  Wed, 09 Nov 2011 08:51:24 -0700

crash (5.1.9-1) unstable; urgency=low

  * New upstream version 5.1.9
  * Fixed the compressed kdump panic task determination function to use the
    kernel's "crashing_cpu" symbol if it exists.  Without the patch, the
    function returned 0 because it was using diskdump-specific header
    variables that are always set to zero in compressed kdump dumpfiles; the
    panic task was then found by searching the kernel stacks of all of the
    active tasks.  (anderson@redhat.com)
  * Fix for the potential of false-positive warning messages during the
    initialization of s390x zdump dumpfiles that would indicate either
    "WARNING: multiple active tasks have called die and/or panic" and/or
    "WARNING: multiple active tasks have called die".
    (holzheu@linux.vnet.ibm.com)
  * Removal of superfluous code for gathering registers from the ELF header in
    the ARM get_netdump_regs_arm() function.  (per.fransson.ml@gmail.com)
  * Additional fixes for the ARM architecture gdb-7.0/bfd/elf32-arm.c and
    gdb-7.0/bfd/cpu-arm.c files to handle gcc-4.6 compiler failures.  Without
    the patch, gcc-4.6 generates "error: variable ‘<variable>’ set but not
    used [-Werror=unused-but-set-variable]" fatal errors when the (default)
    -Werror flag is used.  Previous gcc versions considered local variables
    were simply set to some value to be "used", but that is no longer the
    case.  (anderson@redhat.com)
  * Added new "dis -[xd]" options, which override the current default output
    format with hexadecimal or decimal format for just the command instance.
    Without the patch, it would require changing the default output format
    with "hex" or "dec" prior to executing "dis".  (anderson@redhat.com)
  * Added new "task -[xd]" options, which override the current default output
    format with hexadecimal or decimal format for just the command instance.
    Without the patch, it would require changing the default output format
    with "hex" or "dec" prior to executing "task".  The new flags may be used
    with "foreach task" as well.  (anderson@redhat.com)
  * Prevent the "struct -[xd]", "union -[xd]", and "p -[xd]" commands from
    allowing both options being entered on the command line.
    (anderson@redhat.com)
  * Fixes to top-level crash source files filesys.c, memory.c, netdump.c,
    sadump.c, symbols.c, x86.c and lkcd_x86_trace.c to allow them to be
    compiled cleanly with gcc-4.6.  Without the patch, gcc-4.6 generates fatal
    errors indicating "error: variable ‘<variable>’ set but not used
    [-Werror=unused-but-set-variable]" when building crash with "make Warn",
    or generates similar warning messages when building with "make warn".
    This has been tested only on x86, x86_64 and ARM; the other architectures
    may still generate errors/warnings when compiling their machine-specific
    files with gcc-4.6.  (anderson@redhat.com)
  * Fix for the "irq" command on 2.6.39 and later kernels.  Without the patch,
    the command fails with the message "irq: invalid structure member offset:
    irq_desc_t_status".  (anderson@redhat.com)
  * Fix for the SIAL extension module that solves the problem of getting
    access to integer variables.  (makc@gmx.co.uk)
  * Fix for compiler warnings when building the extensions/sial.so extension
    module with recent versions of /usr/bin/ld.  Without the patch, two
    warning messages are displayed:  "/usr/bin/ld: Warning: alignment 4 of
    symbol 'sialppdebug' in /tmp/ccYSzE2s.o is smaller than 16 in
    libsial/libsial.a(sialpp.tab.o)" and "/usr/bin/ld: Warning: alignment 4 of
    symbol 'sialdebug' in /tmp/ccYSzE2s.o is smaller than 16 in
    libsial/libsial.a(sial.tab.o)".  (maxc@gmx.co.uk)
  * If the stack pointer found in the register set stored in the ELF header of
    a compressed kdump dumpfile, a KVM dumpfile, or an SADUMP dumpfile is
    either NULL or cannot be accessed, the register set will be dumped after
    the error message.  Without the patch, only the error message was
    displayed.  (anderson@redhat.com)
  * Preparation of the top-level crash sources for more efficient updates of
    the embedded gdb version.  The changes should be invisible other than the
    fact that all top-level source files will now be compiled with the
    -DGDB_xxx flag, because the gdb-defined TYPE_CODE_xxx values that are
    exported in defs.h changed in more recent gdb versions.
    (anderson@redhat.com)
  * Fixes for potential segmentation violations during the panic task search
    phase of session initialization from a version 4 or later x86_64
    compressed kdump, in which the number of ELF NT_PRSTATUS notes in the
    dumpfile does not match the number of cpus running when the system
    crashed.  (Joe.Lawrence@stratus.com, anderson@redhat.com)
  * Created an exported set_tmpfile2() function that allows the caller to pass
    in their own FILE pointer of an open file that only exists during the
    execution of a command.  It will afford the recursive-use protection of
    open_tmpfile2() plus the automatic closure of the file if the command
    fails prior to completion or if the user forgets to close it with
    close_tmpfile2().  (anderson@redhat.com)
  * Created a new "rd -r <outputfile>" option that copies raw data from memory
    to an output file.  It can be invoked either of two possible manners:
     crash> rd -r <outputfile> <address> <count>
     crash> rd -r <outputfile> <address> -e <ending-address
    The <count> value is always a byte count with this option.
    (adrian.wenl@gmail.com, anderson@redhat.com)
  * Fix for the ARM "bt" command to store the correct value of the fp register
    of active tasks.  Without the patch, in rare circumstances, the output may
    show an empty backtrace.  (per.xx.fransson@stericsson.com)
  * Fix to prevent a harmless warning message when /proc/kallsyms is used as a
    mapfile argument.  Without the patch, during initialization, the message
    "crash: /proc/kallsyms: lseek: Invalid argument" is       displayed.  If a
    regular file copy of /proc/kallsyms is used, the message is not displayed.
    (anderson@redhat.com)
  * Fix for running against live x86 kernels that have been relocated by the
    Intel Trusted Boot or "tboot" facility.  Without the patch, a live crash
    session fails during invocation with the error message "crash: vmlinux and
    /dev/mem do not match!" (or "/dev/crash" if applicable).  As a
    work-around, "/proc/kallsyms" can be entered on the command line, or the
    "--reloc=<size>" option can be used, but this fix obviates that
    requirement for live systems.  (anderson@redhat.com)
  * Fix for the unlikely event where makedumpfile-generated s390/s390x
    compressed kdumps do not have a CPU count in the dumpfile header.  This
    can happen when older s390 dump tools are used to create a dump that do
    not write the CPU information into the s390 dump header.  Without the
    patch, the warning message "crash: compressed kdump: invalid nr_cpus: 0"
    is displayed, the dumpfile is not recognized as a compressed kdump, and
    the session fails.  Since s390/s390x have a fallback function that gets
    the CPU register information out of memory, the same warning message will
    be displayed, but the dumpfile will still be recognized as a compressed
    kdump.  (holzheu@linux.vnet.ibm.com)
  * Fix for the "net -s" command on 2.6.38 and later kernels.  Without the
    patch, the command fails with the error message "net: invalid structure
    member offset: inet_opt_daddr".  (bob.montgomery@hp.com,
    anderson@redhat.com)

 -- Troy Heber <troyh@debian.org>  Wed, 09 Nov 2011 08:46:06 -0700

crash (5.1.8-1) unstable; urgency=low

  * Added explicit build-dep for dpkg-dev (>= 1.16.1) to resolve the "set but
    unused" errors.
  * New upstream version 5.1.8
  * Fixes for gdb-7.0 ppc64/ppc-specific files to handle gcc-4.6 compiler
    failures.  Without the patch, gcc-4.6 generates "error: variable
    ‘<variable>’ set but not used [-Werror=unused-but-set-variable]" fatal
    errors when the (default) -Werror flag is used.  Previous gcc versions
    considered local variables were simply set to some value to
  * Add support for the "bt" command to recognize the new s390x
    "restart_stack" used by the PSW restart interrupt in 3.0.1 and later
    kernels.
  * Enhancement to the s390x "bt" command to display the register contents of
    the pt_regs strucutre for interrupts, instead of just printing the string
    "- Interrupt -".  The pt_regs structure contains all of the current
    registers and PSW of the interrupted CPU.
  * Removed the "files -l" option, which does not support 2.6 or later
    kernels, and because it requires structure offset data that can only be
    determined if the "lockd" and "nfsd" modules have been built into the
    kernel.  Given the kernel module dependencies, the command is more
    suitable as an extension module, if anyone cares to carry on its legacy.
  * Fix for the "ps" command to disallow the mutually-exclusive "-u" and "-k"
    options from being entered together.  Without the patch, whichever of the
    two options was entered last was acted upon.  Also, the help page was
    clarified by separating the three process identifier formats from the
    "-u", "-k" and "-G" qualifiers.
  * Fix for the "ps" command to disallow the mutually-exclusive "-a", "-t",
    "-c", "-p", "-g", "-l" and "-r" options from being entered together.
    Without the patch, whichever of the seven options that was entered last
    was acted upon.
  * Added new "struct -[xd]" and "union -[xd]" options, which override the
    current default output format with hexadecimal or decimal format for just
    the command instance.  The "-o" member offset values and the structure
    size value are also controlled by the new options.  Without the patch, it
    would require changing the default output format with "hex" or "dec" prior
    to executing the "struct" or "union" command.
  * Fix for the "fuser" command, which may occasionally precede its output
    with the message "WARNING: FILE_NRHASH has changed from 32" on 2.6.19 and
    later kernels.  The message is harmless.
  * Exported new set_temporary_radix() and restore_current_radix() functions,
    which are used to temporarily override the current output radix setting.
  * Fixes for ARM gdb-7.0/bfd/elf32-arm.c file to handle gcc-4.6 compiler
    failures.  Without the patch, gcc-4.6 generates "error: variable
    ‘<variable>’ set but not used [-Werror=unused-but-set-variable]" fatal
    errors when the (default) -Werror flag is used.  Previous gcc versions
    considered local variables were simply set to some value to be "used", but
    that is no longer the case.
  * Cosmetic fix for command-failure "Usage" messages to prevent the output
    from exceeding 80 columns.
  * Implemented a new "struct -p" option which can be used to dereference
    pointer members and display the target data.  The option can be used with
    the struct_name.member[,member] format, or if not, all pointers in the
    structure will be dereferenced.  If the member is a pointer, the member's
    data type will be prepended to the member name when displaying the target
    address; on the subsequent line(s) the target's symbol name will be
    displayed in brackets if appropriate, and if possible, the target data
    will be displayed.
  * Implemented support for "SADUMP" dumpfiles, which are created by the
    Fujitsu Stand Alone Dump facility.  The dump-creation mechanism is based
    in hardware-specific firmware, generating a dumpfile in three different
    formats: sadump dump device (single partition), sadump dump device (disk
    set), and archive file formats.  The crash utility recognizes all three
    formats.
  * Fix for the "bt" command to display Control registers 8-15 (s390x and
    s390) and floating point registers 8-15 (s390x only) correctly.  Without
    the patch, the register content was copied from the wrong location of the
    save area, and the wrong register values were displayed for the active
    tasks.
  * Fix for 2.6.34 ppc64 kernels, which were changed to dynamically allocate
    the paca structure, and changed the data type of "paca" symbol from array
    to a paca_struct pointer.
  * Fix for 2.6.36 and later ppc64 kernels, which overwrite the paca pointer
    variable to point to a static paca during a crash sequence just prior to
    the kexec of the secondary kernel, which contains a
    paca_struct.data_offset value that is valid only for crashing cpu.
    However, the kernel change also re-introduced the  __per_cpu_offset array,
    which had been removed in 2.6.15, which will be used as an alternative to
    the per-cpu paca_struct.
  * The new version of makedumpfile, 1.4.0, contains a facility that allows a
    user to filter out kernel data (e.g., security keys, confidential/secret
    information, etc.) from a vmcore.  The data that is filtered out is
    poisoned with character 'X' (0x58).  A filtered ELF kdump vmcore now
    contains a new "ERASEINFO" ELF note section that contains the filter data
    strings used by makedumpfile.  A filtered compressed kdump has a header
    version number 5, and contains new offset_eraseinfo and size_eraseinfo
    members in its sub-header that point to a copy of the filter data strings.
    In most cases, the erased kernel data will be inconsequential to the crash
    session, but it is certainly possible that the removal of crucial kernel
    data that the crash utility needs may cause the crash session to fail,
    cause individual commands to fail, or result in other unpredictable
    runtime behaviour.  This patch detects whether kernel data has been erased
    from the dumpfile, and if so, displays an early warning message alerting
    the user.  The "help -n" command displays the filter data strings that
    were used by makedumpfile.

 -- Troy Heber <troyh@debian.org>  Mon, 03 Oct 2011 09:56:05 -0600

crash (5.1.7-4) unstable; urgency=low

  * Stop erroring on the set-but-unused messages (close: #643719)

 -- Troy Heber <troyh@debian.org>  Fri, 30 Sep 2011 12:11:55 -0600

crash (5.1.7-3) unstable; urgency=low

  * Fix the fix for the "set but unused" patch for ppc (closes: #639067)

 -- Troy Heber <troyh@debian.org>  Wed, 24 Aug 2011 12:09:56 -0600

crash (5.1.7-2) unstable; urgency=low

  * Fixed "set but unused" errors on PPC causing a FTBS.

 -- Troy Heber <troyh@debian.org>  Sun, 21 Aug 2011 15:26:45 -0600

crash (5.1.7-1) unstable; urgency=low

  * New upstream version 5.1.7
  * Fix for the x86_64 "bt" command in the highly-unlikely event that a
    non-crashing CPU receives a NMI immediately after receiving an interrupt
    from another source in a 2.6.29 and later kernel.  In those kernels, the
    IRQ entry-point symbols "IRQ0x00_interrupt" through "IRQ0x##_interrupt" no
    longer exist, but the entry points exist as memory locations starting at
    the symbol "irq_entries_start".  Without the patch, if a shutdown NMI
    interrupt gets received while in one of the entry point stubs, "bt" will
    fail with the error message "bt: cannot transition from exception stack to
    current process stack".
  * The x86 and x86_64 "bt -e" and "bt -E" commands will display symbolic
    translations of kernel-mode exception RIP values.
  * Clarified two initialization-time CRASHDEBUG(1) messages to make it
    obvious that the two linux_banner strings being compared originate from
    the memory source or the kernel namelist file.
  * Fix for the x86 "bt" command to handle cases where the shutdown NMI was
    received when a task had just completed an exception, interrupt, or signal
    handler, and was about to return to user-space.  Without the patch, the
    backtrace would be proceeded with the error message "bt: cannot resolve
    stack trace", display the trace without the kernel-entry exception frame,
    and then dump the text symbols found on the stack and all possible
    exception frames.
  * Fix for 2.6.33 and later kernels that are not configured CONFIG_SMP.
    Without the patch, they fail during initialization with the error message
    "crash: invalid structure member offset: module_percpu".
  * Prepare for the imminent change in size of the vm_flags member of the
    vm_area_struct to be 64-bits in size for all architectures now that 32
    bits have been consumed.  The crash utility code had been handling the
    older change of the vm_flags member from a short to a long, but that would
    not account for the future change to a 64-bit member on 32-bit
    architectures.
  * Update of the "vm -f <flags>" option to the current upstream state.
    Without the patch, only 23 of the currently-existing 32 bit flags were
    being translated.  (anderson@redhat.com)
  * Fix for the "kmem -s", "kmem -S", "kmem -s <address>" and "kmem <address>"
    command options if none of the NUMA nodes in in a multi-node CONFIG_SLAB
    system have a node ID of 0.  Without the patch, "kmem -s" and "kmem -S"
    show all slab caches as if they contain no slabs; if an <address> is
    specified, the correct slab cache is found, but the command indicates
    "kmem: <slab-cache-name>: address not found in cache: <address>".
  * Cosmetic fix for the "kmem -[sS]" options if a CONFIG_SLAB kernel slab
    cache contains 100000 or more slabs, or uses a slab size of 1 or more
    megabytes.  Without the patch, the output utilizes more than 80 columns.
  * If a task was in user-space when a crash occurred, the user-space
    registers are saved in per-cpu NT_PRSTATUS ELF notes in either version 4
    compressed kdump headers, or in dumpfile headers created by the Fujitsu
    "sadump" facility.  In that case, the "bt" command will dump the x86 or
    x86_64 user-space register set.
  * Fix for the x86 "bt" command to handle cases where the shutdown NMI was
    received when a task had just received an interrupt, but before it had
    created a full exception frame on the kernel stack and called the
    interrupt handler.  Without the patch, the backtrace would be proceeded
    with the error message "bt: cannot resolve stack trace", display the trace
    without the kernel-entry exception frame, and then dump the text symbols
    found on the stack and all possible exception frames.
  * Fix for the x86 "bt" command to handle cases where the shutdown NMI was
    received when a task was in the act of being switched to.  Without the
    patch, the backtrace would be proceeded with the error message "bt: cannot
    resolve stack trace", display the trace without the kernel-entry exception
    frame, and then dump the text symbols found on the stack and all possible
    exception frames.

 -- Troy Heber <troyh@debian.org>  Thu, 14 Jul 2011 15:15:13 -0600

crash (5.1.6-1) unstable; urgency=low

  * New upstream version 5.1.5 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fixed several typos in the updated crash.8 man page.
  * Created a new "rd -a" option that displays printable ASCII data only,
    starting from the specified location.  If a "count" argument is not
    entered, the display stops upon encountering the first non-printable
    character.
  * Fix for the "search -k" option on X86 kernels whose first memmap page
    structure does not map to physical address 0.  Without the patch, the
    identity-mapped region of the first memory node would not be searched.
  * Fix for the "search -k" option in the highly unlikely case of kernels that
    have multiple NUMA nodes that are not sequential with respect to their
    node IDs and the physical memory they reference, have physical memory
    holes between any of the nodes, and do not have memmap page structures
    referencing the non-existent inter-node physical memory.  In that event,
    it is conceivable that a NUMA node would be skipped.
  * If the "kmem <address>" argument is a virtual address inside a kernel
    module, the first item displayed is the address, followed by its symbol
    type, and its symbol-name-plus-offset string.  This patch appends the
    module name in brackets, similar to what is displayed if "sym <address>"
    is entered.
  * Fix for "kmem -s <address>" in kernels configured with CONFIG_SLUB and
    CONFIG_PAGEFLAGS_EXTENDED if the address is contained in a page other than
    the first page in a compound, multi-page, slab.  Without the patch, the
    command would fail with the message "kmem: address is not allocated in
    slab subsystem: <address>".
  * Created a new "rd -N" option that displays 16- and 32-bit data in network
    byte order, performing byte-swapping if appropriate.
  * Fix for a compiler warning when building with "make warn".  Without the
    patch, memory.c generates a message indicating "kernel.c: In function
    ‘back_trace’:" followed by 17 messages indicating "kernel.c: 2187:
    warning: ‘btsave.<member>’ may be used uninitialized in this function",
    where there is one message for each <member> of the bt_info structure.
  * Updated the #define of NR_SECTION_ROOTS to match its change upstream that
    prevents its value from being calculated to be zero.
  * Fix for a double-free() in the unlikely event of a readmem() failure in
    the ARM architecture's read_module_unwind_table() function.
  * Updates to support CONFIG_SPARSEMEM for the ARM architecture.
  * Extended the "mach" command to display the size and address of each
    per-cpu IRQ stack and per-cpu exception stack, if they exist.  This
    extension is applicable to the x86_64 and ppc64 architectures, and the x86
    architecture if applicable.  Prior to this patch, the values were only
    accessible via "help -t" or "help -m".
  * Created a new "kmem -o" option that dumps each cpu's offset value that is
    added to per-cpu symbol values to translate them into kernel virtual
    addresses.  Prior to this patch, the values were only accessible via "help
    -k".
  * Removed the "kmem [-[l|L][a|i]]" options from being advertised by the
    "kmem" help page; the options have been obsolete since the Linux version
    2.2 timeframe.
  * Fix to support Linux 3.x version number change.  Without the patch, the
    crash session fails with kernel version 3.0 and later, displaying the
    message "WARNING: kernel version inconsistency between vmlinux and [live
    memory or dumpfile]", followed by the fatal error message "crash:
    incompatible arguments: vmlinux is not SMP -- [live system or dumpfile] is
    SMP".
  * Updates to the sial.c extension module to support the Linux 3.x version
    number change.
  * Created a new "kmem -g [flags]" option that displays the enumerator value
    of bits in the page structure's "flags" field.  With no "flags" argument,
    the enumerator value of all bits are displayed; when a hexadecimal "flags"
    option is added, just the bits in the value are translated.  This option
    only works with 2.6.26 and later kernels, which contain the "enum
    pageflags".

 -- Troy Heber <troyh@debian.org>  Tue, 14 Jun 2011 14:16:18 -0600

crash (5.1.5-1) unstable; urgency=low

  * New upstream version 5.1.5 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix to allow a vmlinux.bz2 file to be accepted when it is part of a
    relative or absolute pathname.  Without the patch, the file is rejected
    with the message "crash: <path-to>/vmlinux.bz2: not a supported file
    format", although it is still possible to use it with the "-f" flag.
  * Fix for the usage of a vmlinux.gz or vmlinux.bz2 file if the relevant
    gunzip or bunzip2 file is not located in /usr/bin.  Without the patch on
    an Ubunutu system, the uncompression fails because those binaries are only
    located in the /bin directory.  Also fixed the uncompression error message
    to differentiate between gunzip and bunzip2.
  * Created a new exist_regs_in_elf_notes() function for extension modules to
    pre-determine whether an ELF note containing registers exists for a
    specified task.  The function is also used by the currently-existing
    get_regs_from_elf_notes() function to clean up redundant code in the
    various get_<arch>_regs_from_elf_notes() functions that it calls.
  * Exported the formerly static x86_64_exception_frame() function to
    extension modules, and created a new EFRAME_INIT flags argument that
    directs the function to fill in the x86_64 pt_regs offset table and return
    any errors encountered in doing so.
  * Created and exported a new get_kvm_register_set() interface for extension
    modules to get a copy of the per-cpu registers stored in the kvmdump
    header.
  * Fix for the handling of x86_64 compressed kdump dumpfiles where the
    crashing system contained more than 454 cpus.  Without the patch, the
    crash session fails during initialization with the error message "crash:
    compressed kdump: invalid nr_cpus value: <cpus>" followed by "crash:
    vmcore: not a supported file format".
  * Fix for the "uvtop" and "vm -p" commands when run on tasks that have
    performed an mprotect(PROT_NONE) on a user-space page.  Because the
    PAGE_PRESENT bit is not set in that case, the page was presumed to be
    swapped out.  Without the patch the "vtop <address>" command fails with
    the error message "vtop: cannot determine swap location", and "vm -p"
    indicates "SWAP: (unknown swap location)" when iterating over the page.
  * Fix for the use of the "-g vmlinux" command line option by non-root users
    if the /dev/crash module has been preloaded.  Without the patch, after the
    vmlinux file's debugging information has been shown, the error messages
    "ERROR: Removing 'crash': Operation not permitted" and "NOTE:
    cleanup_memory_driver failed" are displayed.
  * Fix for the s390x "bt" command to handle a program check interrupt while
    operating on the process stack.  Without the patch, the backtrace stops
    prematurely upon reaching the pgm_check_handler() interrupt handler.
  * Long overdue rewrite of the crash.8 man page and the associated "crash -h"
    built-in usage display.  The crash.8 man page clarifies the required
    invocation options, adds all of the rarely-used command line options that
    have proliferated over the years, and updates the ENVIRONMENT variables
    section.  The "crash -h" output closely mimics the relevant parts of the
    crash.8 man page.
  * Fix for the embedded gdb module to determine member offsets of the
    pglist_data structure when the kernel was compiled with gcc 4.6.0.
    Without the patch, the system MEMORY size shown by the initial system data
    and by the "sys" command is nonsensical, the "kmem -n" command shows
    faulty memory node data, and if the kernel is configure with CONFIG_SLUB,
    "kmem -[sS]" will fail with numerous "kmem: page_to_nid: cannot determine
    node for pages: <page-address>" errors.  There may be other ramifications
    given that the pglist_data structure is crucial to the functionality of
    the crash utility.
  * Implemented the capability of using the NT_PRSTATUS ELF note data that is
    saved in version 4 compressed kdump headers to determine the starting
    stack and instruction pointer hooks for x86 and x86_64 backtraces when
    they cannot be determined in the traditional manners.
  * Added a new "--osrelease <dumpfile>" command line option that displays the
    OSRELEASE vmcoreinfo string from a kdump dumpfile.
  * Fix to recognize the per-cpu symbol name change from "cpu_info" to
    "ia64_cpu_info" in 2.6.33 and later ia64 kernels.  Without the patch, the
    message "WARNING: cannot find cpuinfo_ia64 location" would appear during
    invocation, and the "mach -c" command would fail in a similar manner,
    indicating "mach: cannot find cpuinfo_ia64 location".
  * Fix for "kmem -[sS]" command on 2.6.39 kernels where the original slab
    structure members have been moved into an anonymous union.  Without the
    patch, either command fails immediately with the error message "kmem:
    invalid structure member offset: slab_list".

 -- Troy Heber <troyh@debian.org>  Mon, 16 May 2011 12:56:58 -0600

crash (5.1.4-1) unstable; urgency=low

  * New upstream version 5.1.4 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for RT kernels in which the schedule() function has become a wrapper
    function that calls the  __schedule() function, and where other functions
    may call __schedule() directly.  Without the patch, a warning message
    indicating "crash: cannot determing thread return address" is displayed
    during invocation on x86_64 machines, and backtraces of blocked tasks may
    have missing or invalid frames.
  * Fix for running against live x86 kernels that were configured with
    CONFIG_PHYSICAL_START containing a value that is greater than its
    CONFIG_PHYSICAL_ALIGN value, and where the first symbol listed by
    /proc/kallsyms is not "_text".  Without the patch, the crash session fails
    during invocation with the error message "crash: vmlinux and /dev/mem do
    not match!" (or "/dev/crash" if applicable).  As a work- around,
    "/proc/kallsyms" can be entered on the command line, or the
    "--reloc=<size>" option could be used, but the fix obviates that
    requirement for live systems.  It should be noted that dumpfiles of
    kernels configured that way still do require that "/proc/kallsyms", or a
    copy of it, or alternatively the "--reloc=<size>" option, to be entered on
    the command line, as detailed in this changelog entry:
    http://people.redhat.com/anderson/crash.changelog.html#4_0_4_5
  * Unlike other extension modules, the "sial.so" module must be built within
    a pre-built crash source tree because it uses header files from the
    embedded gdb module.  Therefore if a crash source tree is laid down,
    entered, and "make extensions" is entered without first building the crash
    utility, the build of sial.so build spews numerous error messages.  To
    avoid that, the sial.mk file has been modified to check whether the
    embedded gdb build has been completed, and if it has not, just displays
    "sial.so: build failed: requires the crash gdb-7.0 module".
  * If an extension module does not have its own <module>.mk file, and is
    built using the extensions/Makefile, then it will be compiled with the
    -Wall flag.
  * The "trace.so" extension module has been improved to use "trace.cmd" to
    implement the "trace show" option, instead of maintaining a redundant code
    base within the module itself.  The trace-cmd command is better, mature,
    and continually maintained.  The new "trace show" option works like so:
    (1) builds trace.dat from the core file and dumps it to /tmp.  (2) execs
    "trace-cmd report" upon the trace.dat file.  (3) splices the output of
    trace-cmd to the user and unlinks the temporary file.
  * Updates to the "trace.so" extension module to extract trace_bprintk()
    formats from a kernel core dump.  It handles both the current format and a
    new format that will be pushed out after the merge window has closed for
    Linux 2.6.40.  The new format is required for the kernel debugfs to export
    the same bprintk data as well.  This means that the trace.so extension
    module will be able to extract more information than trace-cmd itself can
    on a running kernel.
  * Fix for the "gdb" command, or any command that resolves to a gdb command,
    to not strip quotation marks from the input line.  Without the patch, any
    gdb command whose arguments contain quotation marks, (e.g. "printf") would
    fail because they get incorrectly stripped from the input line.
  * Fix for the "p" command if its symbolic argument is a "char *" that points
    to a static data string containing an "%" character.  Without the patch,
    the command results in a segmentation violation.
  * Fix for the "sys -c" option to display an error message if a known
    sys_call_table entry is not a valid system call address.  Without the
    patch, the compromised system call entry is not displayed unless the crash
    debug mode is set to 1 or greater.  With the patch, the system call number
    will be followed by an error message indicating "invalid sys_call_table
    entry: <address> (<symbol-name>)".  This change is only applicable on
    architectures/kernels where the index of the sys_call_table array can be
    confirmed by debuginfo data, i.e., is not a loose calculation based upon
    the next kernel symbol.
  * Print a warning message if there is any inconsistency between the kernel
    version strings found in the vmlinux file vs. the dumpfile or live memory.
    If a System.map file is used to correct the virtual addresses found in the
    vmlinux file, the message is not displayed.
  * Fix for "kmem -v", and all other commands that search through the kernel's
    mapped virtual address list, in x86_64 kernel versions from 2.6.0 to
    2.6.11.  Those kernels contained a "vmlist" and a separate "mod_vmlist"
    list header, both of which point to list of vm_structs that described each
    contiguous block of mapped kernel memory.  2.6.12 and later x86_64 kernels
    consolidated both lists onto the "vmlist".  Without the patch, the list
    headed by "mod_vmlist" was not searched.
  * Clarify the "struct -l offset" option so that it does not imply that the
    address argument is necessarily an embedded list_head pointer.  The "-l
    offset" option essentially provides the capability of the kernel's
    container_of() macro, such that the address of an embedded data structure
    can be used to display its containing data structure.
  * Clarify the help page documentation for the "struct -l offset" option so
    that it does not imply that the address argument is necessarily an
    embedded list_head pointer.  The "-l offset" option essentially provides
    the capability of the kernel's container_of() macro, such that the address
    of an embedded data structure can be used to display its containing data
    structure.

 -- Troy Heber <troyh@debian.org>  Fri, 01 Apr 2011 09:58:11 -0600

crash (5.1.3-1) unstable; urgency=low

  * Implemented support for using vmlinux files that have been compressed with
    either gzip or bzip2.  For examples:
              # crash vmlinux.gz vmcore
              # crash vmlinuz.bz2
    The uncompressed file will be temporarily stored either in /var/tmp or in
    the directory specified in a TMPDIR shell environment variable.  The
    compressed filename must at least begin with "vmlinux" so as to avoid any
    attempt to uncompress a vmcore file.  Gzip'd vmlinux files are preferable
    since the uncompress operation is less time-consuming.
  * Prevent an unnecessary warning message that was introduced in version
    5.1.0 that indicates "WARNING: cannot read .debug_frame data from
    <namelist>" when running against vmlinux executables that have a separate
    ".debug" debuginfo file, such as RHEL3 vmlinux kernels.  With the patch,
    the message is only printed if CRASHDEBUG(1).
  * Fix for the x86_64 "bt" command if the shutdown NMI is issued to a 32-bit
    task that has executed a "sysenter" instruction and the RSP still contains
    the zero value loaded from the MSR_IA32_SYSENTER_ESP register.  Without
    the patch, the backtrace issues a warning message indicating "WARNING:
    possibly bogus exception frame", and is unable to make a transition from
    the NMI exception stack.
  * Fixes for the gdb-7.0 sources to address gcc-4.6 compile failures.
    Without the patch, gcc-4.6 generates "error: variable ‘<variable>’ set but
    not used [-Werror=unused-but-set-variable]" fatal errors when the
    (default) -Werror flag is used.  Previous gcc versions considered local
    variables were simply set to some value to be "used", but that is no
    longer the case.
  * Fixes for the top-level crash sources to address gcc-4.6 compiler warnings
    or errors.  Without the patch, building with gcc-4.6 would generate
    numerous "error: variable ‘<variable>’ set but not used
    [-Werror=unused-but-set-variable]" errors or warnings, depending upon
    whether "make warn" or "make Warn" was used.
  * Removed -Wp,-D_FORTIFY_SOURCE=2 from the WARNING_OPTIONS string due to a
    memmove() oddity seen when using it in conjunction with -O2 with gcc-4.6.
  * Implemented three new options for the "search" command.  This patch adds
    the -c option to search for character strings, the -w option to search for
    unsigned hexadecimal integer values, and -h to search for unsigned
    hexadecimal short values.   The integer and short values are searched on
    integer and short alignments respectively.  The -w option is only
    meaningful on 64-bit systems, to be used in order to search both the upper
    and lower 32-bits of each 64-bit long for the 32-bit value.  Strings are
    searched across contiguous page boundaries, where the page boundaries
    being crossed are relevant to the memory type being searched, i.e., kernel
    virtual, user virtual, or physical memory.
  * Restrict the new "search -p" option to physical memory pages that have an
    mem_map page structure assigned to them.
  * Hardwire the declaration of the user_regs_struct in x86_64.c for kernels
    whose debuginfo data does not contain it.
  * Fix for compiler warnings when building makedumpfile.c and memory.c with
    "make warn" on 32-bit systems.
  * Fix to more correctly determine the KVM I/O hole size and location.  The
    I/O hole size to this point in time is either 1GB or 512MB, but its
    setting is hardwired into the Qemu code that was used to create the
    dumpfile.  The dumpfile is a "savevm" file that is designed to be used for
    guest migration, and since inter-version save/load is not supported, the
    I/O hole information does not have to encoded into the dumpfile.  Without
    the patch, the I/O hole for dumpfiles created by older Qemu version was
    not being set to 1GB, so if the KVM guest was configured with more than
    3GB of memory, the crash session would typically display numerous "read
    error" messages during session initialization.
  * Fix for the x86 "bt" command on RHEL6 kernels that contain a backport of
    upstream commit a00e817f42663941ea0aa5f85a9d1c4f8b212839, which moved x86
    irq-exit functions to a special .kprobes.text section.  Without this
    patch, "bt" would show nonsensical backtraces that begin and end with the
    "ia32_sysenter_target" function, and would dump an invalid kernel-entry
    exception frame.
  * Fix for the x86 "bt" command to fix a possible failure to backtrace a
    non-active "swapper" task.  Without the patch, the backtrace would fail
    with the error message "bt: cannot resolve stack trace".
  * Fix for the x86 "bt" command to prevent the display of a stale interrupt
    exception frame left on the stack of a non-active task.

 -- Troy Heber <troyh@debian.org>  Thu, 10 Mar 2011 11:13:07 -0700

crash (5.1.1-1) unstable; urgency=low

  * New upstream version 5.1.1 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for the potential to miss tasks when walking the pid_hash table in
    2.6.24 and later kernels.
  * Enhancement for the ARM architecture's "bt" command  to print out the user
    space register set for tasks entering the kernel via the syscall entry
    point.
  * Rework of the handling of "set" commands that are put in .crashrc files so
    that only the following options are resolved prior to session
    initialization: silent, console, core, edit, namelist, and zero_excluded.
    All others are resolved immediately after session initialization is
    complete.  Accordingly, the use of "set -c <cpu>", "set -p", "set -a
    [task|pid]" and set [pid|task]" are now acceptable .crashrc commands.
  * The entering of "set -v" in a .crashrc file would cause an immediate
    segmentation violation.  The "set" command rework above defers the command
    until session initialization is complete.
  * The entering of "set dumpfile <filename>" in a .crashrc file would cause a
    fatal "seek" error during session initalization with most most dumpfile
    types, so the "dumpfile" option has been removed from the "set" command.
  * The execution of "alias" commands from a .crashrc file used to be
    performed immediately; that behavior has been changed so that they are
    executed immediately after session initialization is complete.
  * Enhancement of the "repeat" command to allow command aliases.
  * Fix for running "kmem -s" on a live system if an offline cpu is brought
    back online while the command is executing.  Without the patch, the online
    operation may cause a segmentation violation.
  * Change the behavior of "bt -[tT]" to allow the command options to be run
    on active tasks on live systems.  Without the patch, both command options
    would display the task data banner followed by "(active)".
  * Fix for the ARM architecuture's "irq" command when run on 2.6.36 and later
    kernels.  Without the patch, the command fails with the error message
    "irq: invalid kernel virtual address: 23  type: irq_chip typename".   The
    fix replaces the custom ARM IRQ dumping function with the
    architecture-neutral version.
  * Introduced support for using /proc/kcore as an alternative source of live
    memory to /dev/mem.  Doing so allows vmalloc memory access on 32-bit
    architectures when the underlying mapped physical memory is in highmem,
    which is not allowed by the /dev/mem driver.  It would also be usable on
    systems that are configured with CONFIG_STRICT_DEVMEM but still configured
    with CONFIG_PROC_KCORE.  To enforce the use of /proc/kcore, it may be
    entered on the command line.
  * If a live crash session attempts to use /dev/mem as a live memory source,
    and it is determined that the system is configured with
    CONFIG_STRICT_DEVMEM, /proc/kcore will automatically be tried as an
    alternative.
  * Fix to allow "/dev/crash" to be entered on the command line for live
    sessions.  Because it is used automatically if it exists, it is never
    necessary to enter it on the command line.  However, if it is used,
    without the patch, the session fails during initializaion with the error
    message "crash: /dev/crash: No such file or directory" if the crash.ko
    driver is a module (RHEL4/RHEL5), or "crash: /dev/crash: not a supported
    file format" if the driver is built into the kernel (RHEL6).
  * Fix for the ARM "bt" command to address the issue behind faulty warning
    messages that indicate "WARNING: UNWIND: unsupported personality routine".
  * Fix for the ARM "bt" command to address the issue behind faulty warning
    messages that indicate "bt: WARNING: UNWIND: cannot find index for
    <address>".

 -- Troy Heber <troyh@debian.org>  Tue, 08 Feb 2011 10:00:47 -0700

crash (5.0.7-1) unstable; urgency=low

  * New upstream version 5.0.7 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Introduction of ARM processor support for the crash utility.
  * Fix to support KVM dumpfiles that have "ram" device header sections with a
    version_id of 4.
  * Fix for KVM dumpfiles from guests that were provisioned with more than
    3.5GB of RAM.
  * Minor fix to memory.c to address a compiler warning when building with
    "make warn", or a compiler failure when using "make Warn".
  * Fix for a segmentation violation caused by the "mount" command in the rare
    circumstance where the "init" task (pid 1) does not exist.
  * CONFIG_PREEMPT_RT x86_64 realtime kernels allocate only 3 exception stacks
    to handle the 5 possible exception types, and therefore the same per-cpu
    stack may be used for different exception types.  This could cause "bt"
    output that contained exception stack name strings to be incorrect.  The
    patch displays all exception stack name strings in RT kernels to all show
    "RT", as in "--- <RT exception stack> ---".
  * Fix for the potential to miss one or more tasks in 2.6.23 and earlier
    kernels, presumably due to catching an entry the kernel's pid_hash[] chain
    in transition.  Without the patch, the task will simply not be seen in the
    gathered task list.
  * Fix to correct a presumption that the kernel's task_state_array[] is NULL
    terminated.

 -- Troy Heber <troyh@debian.org>  Tue, 31 Aug 2010 11:16:58 -0600

crash (5.0.6-1) unstable; urgency=low

  * New upstream version 5.0.6 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for support of xendump and Xen kdump dumpfiles from 2.6.27 and and
    later x86_64 kernels.
  * Fix for the "s390dbf" command to allow the command's output to be
    redirected to a pipe.
  * Fix for the x86 "bt" command to generically recognize the end of trace
    condition for tasks entering the kernel from user-space without having to
    hardwire any more kernel entry point function names.  Without the patch, a
    task that took a clock interrupt from user-space and crashed while
    operating on the soft IRQ stack failed with the error message "bt: cannot
    resolve stack trace". (anderson@redhat.com)
  * Display the "machine type mismatch" warning when attempting to use a ppc64
    vmlinux file on a non-ppc64 64-bit host.  Without the patch, the fact that
    ppc64 vmlinux ELF files are type ET_DYN, and not type ET_EXEC like all of
    the other architectures, was allowing the vmlinux to be accepted without
    the mismatch warning, and would subsequently fail without a meaningful
    explanation being displayed.  (anderson@redhat.com)
  * Fix for the x86_64 "bt" command if the kdump-generated NMI interrupts a
    multi-threaded task that has just entered kernel space but has not changed
    the RSP stack pointer register from its user-space per-thread stack
    location to the kernel stack.  Without the patch, the command follows the
    display of the exception frame on the NMI exception stack with the message
    "WARNING: possibly bogus exception frame", displays the error message "bt:
    cannot transition from exception stack to current process stack", and does
    not display the user-space exception frame.  (anderson@redhat.com)
  * Added the "set" command to the list of commands acceptable when running
    in --minimal mode.  The command is limited to the setting of internal
    variables since there is no task context in that mode.
    (anderson@redhat.com)
  * Fix for the "vtop" command when run against x86 Xen PAE kernels.  Without
    the patch, the "PAGE:" displays (machine and pseudo-physical) contained
    non-zero values in the lower 12 bits, and the translation of the PTE entry
    was incorrect as a result of receiving the incorrect contents in the lower
    12-bits of the PTE entry.  (anderson@redhat.com)
  * Implemented support for running against live x86_64 pv_ops/Xen guest
    kernels.  (anderson@redhat.com)
  * Implemented support for xendump ELF dumpfiles generated from x86_64
    pvops/Xen guest kernels.  (anderson@redhat.com)
  * Implemented support for running against live x86 pv_ops/Xen guest kernels.
    (anderson@redhat.com)
  * Implemented support for xendump ELF dumpfiles generated from x86 pvops/Xen
    guest kernels.  (anderson@redhat.com)
  * Determine the bit positions of PG_reserved and PG_slab using the newer
    pageflags enumerator values if available.  (anderson@redhat.com)
  * Fix to prevent the "repeat" command from keeping a crash session alive if
    the controlling terminal session is killed.  (anderson@redhat.com)

 -- Troy Heber <troyh@debian.org>  Mon, 02 Aug 2010 09:06:32 -0600

crash (5.0.5-1) unstable; urgency=low

  * New upstream version 5.0.5 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Implemented a new "bt -F" flag as an extension of the "bt -f" flag.
  * Fix for the %install stanza in the crash.spec file to check for the
    existence of the sial.so extension module.
  *  Minor correction to the error message displayed by the "crash -x" command
     line option when the pre-loading of an extension module fails.
  * Fix for the x86_64 "bt" and "bt -E" commands if the kdump-generated NMI
    interrupts a task that has just entered kernel space but has not changed
    the RSP stack pointer register from its user-space location to the kernel
    stack.
  * Fix for compiler warnings when building "net.c" with -O2.
  * Fix for a compiler warning when building "gdb_interface.c" with -O2
  * Fix for the x86 "bt" command if the crash occurs during the execution of a
    kernel module's init_module() function.
  * Fix to support newer KVM dumpfile format generated by "virsh dump" that
    may contain "block" and "kvmclock" devices in the dumpfile header.
  * Fix for "kmem -[sS]" command on 2.6.34 and later CONFIG_SLUB kernels,
    which changed the kmem_cache.cpu_slab[NR_CPUS] array to be a per-cpu
    offset value.
  * Modified the "kmem -p" output to show the "INDEX" column values with a
    hexadecimal value because the "page.index" member is typically a
    shared-use field that may also contain a pointer value.
  * Addressed compiler warnings generated by net.c when built with -O2.
  * Fix for the "kmem <address>" command if the kernel's free page lists are
    corrupt, or in a state of flux, and cannot be followed.
  * Fix to read KVM dumpfiles generated by the "virsh dump" of a RHEL5 guest
    from a RHEL6 host, and to support dumpfile format changes that contain
    "apic" and "__rhel5" devices.

 -- Troy Heber <troyh@debian.org>  Mon, 21 Jun 2010 15:02:16 -0600

crash (5.0.4-1) unstable; urgency=low

  * New upstream version 5.0.4 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for the x86 "bt" command when a newly-forked task's resumption EIP
    address value is set to the "ret_from_fork" entry point by copy_thread().
  * Fix for the x86 "bt" command if the kdump-generated NMI interrupts a task
    running in kernel space at a point in the system_call entry point code
    prior to the call to a system call function.
  * Fix for the "bt" command on 2.6.29 and later x86_64 kernels to recognize
    and display exception frames generated by exceptions that do not result in
    a stack switch, such as general protection faults.
  * The kernel patch for ppc64 CONFIG_SPARSEMEM_VMEMMAP kernels that stores
    vmemmap page mapping information so that the crash utility is able to
    translate vmemmap'd kernel virtual addresses has been updated.
  * Fix the error message for the "dev -p" comand when run on 2.6.26 or later
    kernels, which no longer have the global "pci_devices" list head.
  * If a cpu in an s390 or s390x dumpfile is offline, and the "bt" command
    receives a backtrace request for the "swapper" task on that cpu, the
    command will display "CPU offline".
  * Fix for 2.6.34 and later x86_64 kernels which generate per-cpu symbols of
    type 'd' or type 'D' instead of type 'V'.
  * Fix to prevent a segmentation violation during initialization in the
    x86_64_get_active_set() function by verifying that the array of current
    tasks in machdep->machspec->current[] has actually been allocated.
  * Fix to support KVM dumpfiles created with "virsh dump" that create "cpu"
    header sections using a QEMU CPU_SAVE_VERSION version greater than the
    supported version of 9.
  * Fix for x86_64 KVM dumpfiles created with "virsh dump" whose kernels have
    a "_text" virtual address higher than __START_KERNEL_map.
  * Implemented a new "map" command that is seen only when running with KVM
    guest dumpfiles created with "virsh dump".
  * Fix for an incorrect calculation of the physical base address of a
    fully-virtualized x86_64 RHEL6 guest kernel running on a RHEL5 Xen host.
  * Fix for the "bt" command on inactive (blocked) tasks on 2.6.33 and later
    x86_64 kernels, which have the "thread_return" symbol removed from the
    embedded "switch_to" macro.
  * Fix for the "bt" command on 2.6.33 and later x86 kernels, which moved the
    "system_call" assembly function to the .kprobes.text section.
  * Fix for a segmentation violation caused by the "extensions/trace.c"
    extension module, as seen when running the "trace show -c <cpu>" command
    from that module.
  * Implemented a "trace dump -t" command for the "extensions/trace.c"
    extension module.

 -- Troy Heber <troyh@debian.org>  Wed, 26 May 2010 12:54:11 -0600

crash (5.0.3-1) unstable; urgency=low

  * New upstream version 5.0.3 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for running against 2.6.34 and later kernels to recognize and handle
    changes in the kernel's per-cpu data symbol naming, which no longer
    prefixes "per_cpu__" to declared per-cpu symbol names.
  * Fix for "swap" and "kmem -i" commands on 2.6.29 or later, big-endian,
    ppc64 kernels, where the swap_info_struct.flags member was changed from an
    int to a long.
  * Fix for the "vm" and "ps" command's task RSS value on 2.6.34 or later
    kernels.
  * Fixed "possible aternatives" spelling typo used in informational messages
    when an incorrect/unknown symbol name is used in "rd", "dis", "sym" and
    "struct" commands.
  * Fix for CONFIG_SPARSEMEM kernels that are not configured with
    CONFIG_SPARSEMEM_EXTREME.
  * Change the output of the "kmem -[cC]" options to indicate that they are
    not supported when that is relevant.


 -- Troy Heber <troyh@debian.org>  Fri, 23 Apr 2010 10:12:03 -0600

crash (5.0.2-1) unstable; urgency=low

  * New upstream version 5.0.2 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for the "mod -[sS]" command if the attempt to load a kernel module
    fails due to an internal gdb error.
  * Fix for the "mod -[sS]" command options, which may display the error
    message "mod: <module>: last symbol is not _MODULE_END_<module>?".
  * Fix for the reading of dumpfiles created with the "snap" extension module
    when used on an x86 machine with a single PT_LOAD segment that starts at a
    non-zero address.
  * Fixes for several bugs in the s390 and s390x stack backtrace code
  * Fix for the "mach -m" command option on x86 or x86_64 systems whose
    BIOS-provided e820 map contains EFI-related memory type value that has not
    been mapped to an E820 type (pre-2.6.27), or if the type is E820_UNUSABLE
    (2.6.28 and later).
  * Fix for SIAL extension module if a script uses structures that contain
    members of type "bool".
  * Fix to prevent a stream of harmless but annoying error messages when
    running "crash -d4" (or any larger -d debug value) on x86 machines.
  * Fix for the "kmem -s list" command option on non-CONFIG_SLUB kernels that
    contain a "cache_chain" list_head symbol instead of having a "#define
    cache_chain (cache_cache.next)" construct.
  * Fix for the x86_64 "bt" command to recognize, and take advantage of,
    kernels that were built with CONFIG_FRAME_POINTER.
  * Fix to prevent a crash session that is run over a network connection that
    is killed/removed from going into 100% cpu-time loop.
  * Change the output of "ps -t" to display the task_struct's utime and stime
    values unmodified on kernels using a cputime_t (unsigned long) to store
    those values.
  *  Fix for the x86 "bt" command if the kdump-generated NMI interrupts a
     process in kernel space at a pointer before the full user-mode exception
     frame (pt_regs) gets written on the kernel stack.
  *  Fix for the "bt -e" command on 2.6.30 or later x86 kernels if the x86.c
     file was built with D_FORTIFY_SOURCE.
  *  Fix for initialization-time failure on 2.6.34 and later kernels that were
     configured with CONFIG_NO_BOOTMEM.
  * Fix for the processor speed value displayed on ppc and ppc64 machines at
    session invocation, and by the "sys" and "mach" commands.
  * Implemented support to recognize an IBM-proposed kernel patch for ppc64
    CONFIG_SPARSEMEM_VMEMMAP kernels that will store vmemmap page mapping
    information.
  * Fix for "kmem -[sS]" command options on live CONFIG_SLAB systems to
    prevent the redundant reading of the shared array_cache object list from
    the per-node kmem_list3 data structures.

 -- Troy Heber <troyh@debian.org>  Mon, 29 Mar 2010 10:21:20 -0600

crash (5.0.1-1) unstable; urgency=low

  * Fix FTBFS with gcc-4.5 bug (Closes: #564973).
  * Use POSIX compliant "uname -m" instead of arch. (Closes: #568325).
  * New upstream version 5.0.1 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Use archive version of mkstemps() function
  - Fix irq command on 2.6.33+ kernels.
  - Defend against corrupted cach_cache kmem_cache structs
  - Fix swap, kmem -i and vm -p commands on 2.6.33+ kernels
  - Fix for 2.6.30+ kernels configured without CONFIG_SMP
  - Fix for x86, s390, s390x and ia64 architectures to set the system cpu
  count equal to the highest cpu online plus one
  - Fix to recognize the symbol type change of per-cpu variables from
  'd' or 'D' to 'V'.
  - Fix for the "struct" and "union" commands when passed an address that is
  in a valid kernel virtual address region but is either unmapped or
  non-existent.
  - Update for 2.6.33 and later s390 and s390x kernels to account for the
  "_lowcore" structure member name change from "st_status_fixed_logout"  to
  "psw_save_area".
  - Fix for very large Xen domU dumpfiles that locate the base offset of
  relevant ELF sections beyond the 4GB mark.
  - If a kernel crash occurs during a kernel module loading operation, it is
  possible that a subsequent crash session on the vmcore may result in a
  segmentation violation during the "please wait...  (gathering module symbol
  data)" phase.
  -  Fix for a gdb-7.0 regression that causes the line number capability to
  fail with certain ranges of x86 base kernel text addresses.
  - Preparation for future s390x ELF dumpfile format.

 -- Troy Heber <troyh@debian.org>  Fri, 19 Feb 2010 13:55:53 -0700

crash (5.0.0-1) unstable; urgency=low

  * New upstream version 5.0.0 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix for the ppc64 "irq" command where the "irq_desc_t" is no longer
  recognized as a typedef for "struct irq_desc".
  - Fix for 2.6.26 and later ppc64 CONFIG_SPARSEMEM_VMEMMAP kernels to
  recognize VMEMMAP_REGION virtual addresses
  - Fix for segmentation violation when running the "ps -r" command option on
  2.6.25 or later kernels.
  - Fix for the "mount" command on 2.6.32 and later kernels.
  - Fix for the "bt" command on 2.6.29 and later x86_64 kernels to always
  recognize and display BUG()-induced exception frames.
  - Fix for the "rd" and "kmem" commands to prevent the unnecessary "WARNING:
  sparsemem: invalid section number: <number>" message when testing whether an
  address is represented by a page structure in CONFIG_SPARSEMEM_EXTREME
  kernels.
  - Fix for a 4.0-8.11 regression that introduced a bug in determining the
  number of cpus in ppc64 kernels when the cpu_possible_[map/mask] has more
  cpus than the cpu_online_[map/mask].  In that case, the kernel contains
  per-cpu runqueue data and "swapper" tasks for the extra cpus.

 -- Troy Heber <troyh@debian.org>  Wed, 06 Jan 2010 15:31:08 -0700

crash (4.1.2-1) unstable; urgency=low

  * New upstream version 4.1.1 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix for amd64 with CONFIG_NEED_MULTIPLE_NODES on kernels >= 2.6.31
  - Fix for snap.c extension module to handle NUMA systems with multiple
  nodes.
  - Handle corrupt Elf32_Phdr/Elf64_Phdr structures in ELF vmcore.
  - Prepare for integration of gdb 7.0
  - Fix x86 bt with the stak is >= 3 level deep and handeling an IRQ.
  - Fix handcrafted backsrace starting point command bt -S

 -- Troy Heber <troyh@debian.org>  Fri, 11 Dec 2009 10:55:06 -0700

crash (4.1.1-1) unstable; urgency=low

  * New upstream version 4.1.1 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix session init failure with 2.6.30 amd64, with filterd makedumpfile
  dump.
  - Add "lsmod" as a built-in alias for the "mod" command
  - Handler corrupt elf headers structs in vmcore.
  - Fix "mach -c" for on 2.6.30 and later amd64 kernels.
  - Fix to set DEBUG exception stack size and base on >= 2.6.18 amd64 kernels.
  - Fix session init for >= 2.6.30 amd64 kernels when number of CPUS is equal
  to the NR_CPU value.
  - Prepare source for move to internal gdb-7.0.

 -- Troy Heber <troyh@debian.org>  Tue, 01 Dec 2009 12:52:40 -0700

crash (4.1.0-1) unstable; urgency=low

  * New upstream version 4.1.0 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix s390x & x86 "extend" command regression created by the "crash -x"
  option introduced in crash version 4.0.9.
  - Clean up source to remove compiler warnings in Fedora
  - Fix for "pte" command on s390 and s390x machines if the pte value argument
  evaluates as not present
  - Allow command redirection to pipes or files when using gdb commands alone
  on the command line without preceding the command string with "gdb".
  -  Fix for the processing of bit fields on big endian systems in the SIAL
  extension module.
  - Fix for "dis -l" to properly display line-number information for 2.6.21
  and later x86_64 kernel module text addresses.
  - Fix to prevent querying the embedded gdb module for line numbers of kernel
  module text addresses if the module's debuginfo data has not been loaded.
  - Implemented a new "ps -G" option, which restricts the process status
  output to show only the data of the thread group leader of a thread group.
  - Several fixes for the "repeat" command when used in conjunction with an
  input file.
  - Added "trace" to the extension
  - Fix for a potential failure to initialize the kmem slab cache subsystem on
  2.6.22 and later CONFIG_SLAB kernels if the dumpfile has pages excluded by
  the makedumpfile facility.
  - Fix for a potential session initialization failure on x86_64 kernels if
  the dumpfile has pages excluded by the makedumpfile facility.
  - Fix for "kmem -z" option on 2.6.29 and later kernels.
  - Fix for "irq" command on 2.6.29 and later CONFIG_SPARSE_IRQ kernels.
  - Fix for the "kmem -i" option on 2.6.31 kernels.
  - Fix for the "kmem -i" option on 2.6.26 through 2.6.30 x86_64 kernels.
  - Fix for "kmem -p" option on older 64-bit kernels that have a 32-bit
  page.flags field.
  -  Fix for "kmem -i" option on older kernels whose unreferenced page.count
  value was -1 (instead of 0).
  - Change the cursor location when cycling through the command history when
  in "vi" editing mode (the default).

 -- Troy Heber <troyh@debian.org>  Wed, 07 Oct 2009 14:51:57 -0600

crash (4.0.9-1) unstable; urgency=low

  * New upstream version 4.0.9 (see
    http://people.redhat.com/anderson/crash.changelog)
  - New versioning format such that the upstream version no longe rcontains
  the "-" in the version number.
  - backport of the x86/x86_64 disassembly code from gdb-6.8 to the embedded
  gdb-6.1.
  - Fix compressed diskdump/kdump vmcores to work with page descriptor
  structure that are beyond 4GB offsets in the vmcore file.
  - Fix for multipal x86_64 bt command issues
  - Fix for usage of System.map argument with kernels >= 2.6.30.
  - Fix for usage of System.map that does not contaon an "_end" symbol.
  - Fix for "kmem -p <addr>" or "kmem <addr>" options when <addr> is not a
  page struct address.
  - Fix for the snap.so extension to work on < 2.6.12 kernels with more than
  4GB physical memory.
  - Fix how extensions are built, for example give a proper error message is
  the host does not have the build deps for the extension module, but still
  allow crash to build.
  - RHEL_4 fix for "rd" and "vtop" command on x86_64 Xen kernels.


 -- Troy Heber <troyh@debian.org>  Thu, 10 Sep 2009 11:38:39 -0600

crash (4.0-8.11-1) unstable; urgency=low

  * New upstream version 4.0-8.11 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix backtrace when offline CPUs doe not have NT_PRSTATUS notes
  - Fix "dev" command for 2.6.26 later kernels.
  - Fix segfaul when running "foreach bt" on active live system.
  - Fix to read LKCD V8 x86 dumpfile headers
  - Fix bt when NMI was issued ot non-crashing amd64 CPU.
  - Fix bt on amd64 when transitioning from the IRQ stack back to the process
  stack on >= 2.6.29 kernels.
  - Enhance "runq" to show current task in each cpu's runqueue.
  - Fix mem leak when running on live systems.
  - Support dwarf 3 vmlinux debuginfo format
  - Allow any order for system map and compressed vmlinux file on the cmd
  line.
  - Fix seg fault when vmcore and system map do not match
  - Adjust virt and phys memory definitions for >= 2.6.31
  - Fix for "kmem -[sS]" when using CONFIG_SLUB and there is an invalid link.

 -- Troy Heber <troyh@debian.org>  Tue, 30 Jun 2009 12:00:10 -0600

crash (4.0-8.9-1) unstable; urgency=low

  * New upstream version 4.0-8.9 (see
    http://people.redhat.com/anderson/crash.changelog)
  - New "bt -g" option, which will display the backtraces of all threads in
  the targeted task's thread group.
  - support for the kdump "split-dumpfile" format
  - Fix for "kmem -i", "kmem -n" and "kmem -p" on x86_64 CONFIG_SPARSEMEM and
  CONFIG_SPARSEMEM_EXTREME kernels that have MAX_PHYSMEM_BITS increased from
  40 to 44.
  - Display warning when trying to bt active, non-crashing, xen dom0 tasks
  which are not available in kump dumpfile.

 -- Troy Heber <troyh@debian.org>  Wed, 22 Apr 2009 09:07:43 -0600

crash (4.0-8.8-1) unstable; urgency=low

  * New upstream version 4.0-8.8 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Print warning with CONFIG_STRICT_DEVMEM
    - Fix "bt" to prevent segfault with amd64, LKCD dump and corrupt active
    tasks.
    - Fix chronological order kernel ring buffer when it has been cleard via
    syslog() or klogctl().
    - Search /usr/lib[64]/crash/extensions for crash extenstions
    - Change how "bt" determines which idle task was interrupted by ia64
    INIT or MCA.

 -- Troy Heber <troyh@debian.org>  Thu, 09 Apr 2009 09:09:31 -0600

crash (4.0-7.7-1) experimental; urgency=low

  * New upstream version 4.0-7.7 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Support dumps with different page size that the host system, ppc and
    ia64 support configurable page sizes.
    - Fix mod -s to support modules that have both - and _ in their names.
    - Reject s390 and s390x "L2^B" local label symbols from the kernel symbol
    list
    - Fix potential buffer overflow with "ps -l".
    - Fix "bt -a" to continue backtrace after hitting a fatal error
    - Only suource trusted versions of .crashrc and .gdbinit
    - Fix potential, but highly unlikely, buffer overflow in gdb dwarfread.c
    and dwarf2read.c.
    - Fix potential, but highly unlikely, integer overflow in the BDF library.
    - Enable stack undind on ia64 when using kerntypes file.
    - Fix failure of "files -R" command when an inode is unknown.
    - Allow LKCD kerntypes debuginfo file created form a module to be loaded
    with: "mod -s <module> <kerntypes-file>"
    - Increase NR_CPUS from 256 to 512 for x86-64 and 128 to 1024 for ppc64.

 -- Troy Heber <troyh@debian.org>  Mon, 09 Feb 2009 07:14:33 -0700

crash (4.0-7.6-1) experimental; urgency=low

  * New upstream version 4.0-7.6 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix failure if the kernel was built without CONFIG_SWAP
  - Fix "bt" command on x86_64 kernels that contain the x86/x86_64 merger
  patch.
  - Fix infinite loop when using an input file, where more than one command in
  the input file results in a fatal error.
  - Clean up causes for warning messages when compiling with gcc 4.3.2.
  - Fix to prevent a segmentation violation during initialization when parsing
  (corrupted) module symbols.
  - Accept tasks with corrupted CPU fields.
  - Modification of "files" command to display open file descriports that have
  an NULL in the f_dentry field.
  -  Fix the "bt" command on x86 Xen architectures when the backtrace starts
  on the hard IRQ stack.

 -- Troy Heber <troyh@debian.org>  Mon, 12 Jan 2009 10:18:11 -0700

crash (4.0-7.4-1) unstable; urgency=low

  * New upstream version 4.0-7.4 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix build regression for non-xen arches ppc64, s390 and s390x.
  - Fix for nonsensical user of the "set" command when running with the xen
  hypervisor.
  - Fix for "bt" command on x86 arch when the backtrace starts on the hard IRQ
  stack.
  - Fix for "search -k" on some ia64 hardware, depending on the underlying
  physical memory layout.
  - Fixes for the "bt" command when running with the xen hypervisor.
  - Remove "foreach" from the commands that won't work with the xen hypervisor
  - Fir "irq -d" on x86_64 xen kernels.
  - Avoid symbolicy translation of ia64 unity-mapped regin 7 kernel virtual
  addresses as they are displayed with "bt -r" and "rd -[sS]".
  - Remove redundatnt storage of "swapper_pg_dir" symbol value durnign x86
  initalization
  - Do not use "ifffies" when running with xen hypevisor
  - Fix to read correct PERCPU_SHIFT value with x86 and amd64 xen hypervisors.

 -- Troy Heber <troyh@debian.org>  Tue, 14 Oct 2008 08:24:54 -0600

crash (4.0-7.2-1) unstable; urgency=low

  * New upstream version 4.0-7.2 (see
    http://people.redhat.com/anderson/crash.changelog)
  - Fix for init time failure when running 2.6.27 amd64.
  - Allow symbol lookup in striped binary with improper struct member offset
  or struct size.
  - Fix LKCD kerntype debuginfo to use "note_states" when "node_online_map" is
  not in use.
  - Support for s390[x] SPARSEMEM.
  - Fix for "kmem -[sS]" with 2.6.27 SLUB kernels.
  - Increase SAIL command limit from 100 to 200

 -- Troy Heber <troyh@debian.org>  Wed, 17 Sep 2008 13:37:21 -0600

crash (4.0-7.1-1) unstable; urgency=low

  * New upstream version 4.0-7.1 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Fix for RT kernel address_space.nrpages renaming
    - Fix for backtraces displayed in error conditions
    - Fix for ia64 hypervisor backtraces with non contiguous cpu map
    - Fix to make shell-escaped crash commands output correctly
    - Fix to allow "-i inputfile" cmd line option when operating from an  init
    script.
    - Fix for "kmem -P <addr> option where <addr> is invalid.
    - Fix for SIGFPE cascade during session init with mismatch vmcore and
    vmlinux.
    - Improved "search -u" command error messages when no user context exists
    in the core.
    - Improved "search" with the Xen hypervisor, allow symbolic address with
    the -s option, remove the -u and -k option.
    - Fix for init-time segfault due to module allocation and creating an
    exported symbol list ouside the virtual address space.
    - New --minimal command line option to bring up crash on a corrupted or
    truncated dump file.
  * removed dpatch

 -- Troy Heber <troyh@debian.org>  Wed, 20 Aug 2008 04:43:52 -0600

crash (4.0-6.3-1) unstable; urgency=low

  * New upstream version 4.0-6.3 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Support FC9 kernels with the utrace patch.
    - Improve "search -k" scalability
    - Change how ppc64 examines the cpu map.
    - Fix for ppc64 "bt" command on panic/active task when cpus were offline
    - vtop support of 1MB large pages on z10 (s390)
    - Layout fix to crash man page
    - Support for xen 3.1.2 hypervisor on x86 and amd64

 -- Troy Heber <troyh@debian.org>  Thu, 01 May 2008 09:20:21 -0600

crash (4.0-6.2-1) unstable; urgency=low

  * New upstream version 4.0-6.2 (see
    http://people.redhat.com/anderson/crash.changelog)
    - new "rd -S" optoin recognizes the VA of slab objects
    - "keme -[sS]" directly show containing object and add SLUB support
    - Fix init time failure with Ubuntu kernels becasue of /proc/version and
    linux_banner mismatch
    - Fix "net" command >= 2.6.22 kernels.
    - "search -k" workaround for ia64 SPARSMEM kernels

 -- Troy Heber <troyh@debian.org>  Mon, 31 Mar 2008 12:24:01 -0600

crash (4.0-6.1-1) unstable; urgency=low

  * New upstream version 4.0-6.1 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Support for the x86/x86_64 merger >= 2.6.25
    - Fix bt on live 2.6.25 kernels
    - New typedef for 2.6.25

 -- Troy Heber <troyh@debian.org>  Tue, 04 Mar 2008 13:29:13 -0700

crash (4.0-5.1-1) unstable; urgency=low

  * New upstream version 4.0-5.1 (see
    http://people.redhat.com/anderson/crash.changelog)
    - 4.0-5.1 was released ontop of 4.0-5.0 thus I'm including its changes
    here as well.
    - Update ps -l to support kernels > 2.6.23
    - Fix init time failure when running with 2.4 x86 netdump files.
    - Fix to utalize do_raidx_tree() function
    - Fix potential seg fault during init if the tasks kernel stack was
    overrun, thus corrupting the thread_info structure.
    - Fix for "bt" command when run on xen x86 dom0.

 -- Troy Heber <troyh@debian.org>  Thu, 21 Feb 2008 08:22:18 -0700

crash (4.0-4.13-1) unstable; urgency=low

  * New upstream version 4.0-4.13 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Fix generic error message because of endianness mismatch
    - update for "kmem -V" to display vm_event_states.
    - Implement new "kmem -z" option for per-zone memory stats.
    - Fix RSS ammounts displayed by "ps" and "vm" commands, pre 2.6.13 kernels
    - x86 "bt" fix when analyzing a post 2.6.20 dump on a pre 2.6.20 machine
    - Fix for FC8 xen x86 kernel that failed initializatoin
    - Set default "phys_base" for fully virt relocatable kernels.
    - New crash "--active" command line option to only gather active tasks
    from each runqueue, skipping traversal of kernel's pid_hash.
    - "help -n" formats and display ASCII VMCOREINOF data

 -- Troy Heber <troyh@debian.org>  Tue, 15 Jan 2008 08:40:25 -0700

crash (4.0-4.12-1) unstable; urgency=low

  * New upstream version 4.0-4.12 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Enable kmem and runq command to correctly function on 2.6.24 kernels.

 -- Troy Heber <troyh@debian.org>  Wed, 12 Dec 2007 12:26:14 -0700

crash (4.0-4.11-1) unstable; urgency=low

  * New upstream version 4.0-4.11 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Fix for 2.6.24 pid_namespace (allows crash to come up on 2.6.24 kernels,
    but most of the kmem commands do not work correctly)
    - Fix incorrect free page list with "kmem [-f] <addr>" on x86 kernels.
    - Fix x86 bt command for active tasks in Egenera dumpfiles.
    - Fix for potential seg fault if a task's kernel stack is overrun.
    - Fix for "kmem -S" error message

 -- Troy Heber <troyh@debian.org>  Thu, 06 Dec 2007 09:44:40 -0700

crash (4.0-4.10-1) unstable; urgency=low

  * New upstream version 4.0-4.10 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Fix a regression introduced in 4.0-4.9 that causes the "kmem -p" command
    to fail in SPARSEMEM kernels using anonymous structures.

 -- Troy Heber <troyh@debian.org>  Wed, 21 Nov 2007 09:10:29 -0700

crash (4.0-4.9-1) unstable; urgency=low

  * New upstream version 4.0-4.9 (see
    http://people.redhat.com/anderson/crash.changelog)
    - kmem -p fix for kernels using anonymous structure
    - kmem -p fir for SPARSEMEM kernels
    - mod command now looks in /lib/module/<release>/updates first
    - SAIL fix for "operation on 'v1' may be undefined"
    - Fix for 'crash -h [command] > outfile' failures
    - LKCD compiler warning fixups
    - kmem -s fix to display a non-fatal warning message
    - LKCD ia64 get physical start from dump header
    - s390[x] 4 level page table support
    - LKCD do not abort() on phys mem zone error, use non-fatal warning
    instead.

 -- Troy Heber <troyh@debian.org>  Tue, 20 Nov 2007 09:33:25 -0700

crash (4.0-4.8-1) unstable; urgency=low

  * New upstream version 4.0-4.8 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Add support for kernel with the SLUB allocator
    - Pull backtrace registers on LKCD v8 and later LKCD dumps
    - SAIL support for ia64, ppc, s390 and s390x
    - Output the kernel ring buffer in the proper order

 -- Troy Heber <troyh@debian.org>  Tue, 30 Oct 2007 12:49:08 -0600

crash (4.0-4.7-1) unstable; urgency=low

  * New upstream version 4.0-4.7 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Add SAIL (Simple Image Access Language) interpreter
    - Removed hardwired-dependencies in the top-level and extensions
    directories
    - Enhance the "kmem <address" option to search for task_struct and kernel
    stack addresses.
    - Fix for determining rip/rsp backtrace hooks for panic task in x86_64 xen
    dom0 kdumps.
    - Fix for ia64 LKCD dumps to find the next task when the task is in the
    "fixup list"
    - Fix for potential "mod -[sS]" failures  for mods with a large number of
    sections.
    - Fix to prevent dumpfile reads beyond EOF when reading new xen ELF core
    xendumps.
  * Fix FTBFS twice in a row bug (Closes: #442528).

 -- Troy Heber <troyh@debian.org>  Tue, 09 Oct 2007 13:30:44 -0600

crash (4.0-4.6-1) unstable; urgency=low

  * New upstream version 4.0-4.6 (see
    http://people.redhat.com/anderson/crash.changelog)
    - support "runq" on 2.6.20 and > kernles
    - inital support for LKCD kerntypes created by dwarfextract
    - "xencrash" update to handle dom0 kdumps.

 -- Troy Heber <troyh@debian.org>  Mon, 27 Aug 2007 13:25:57 -0600

crash (4.0-4.5-1) unstable; urgency=low

  * New upstream version 4.0-4.5 (see
    http://people.redhat.com/anderson/crash.changelog)
    - support for PHYSICAL_START / relocation mismatch
    - 2.6.22 slub support
    - lkcd kerntypes support
    - CFS scheduler support

 -- Troy Heber <troyh@debian.org>  Tue, 21 Aug 2007 08:27:22 -0600

crash (4.0-4.3-1) unstable; urgency=low

  * New upstream version 4.0-4.3 (see
    http://people.redhat.com/anderson/crash.changelog)
    - fixed "keme -f" command on DISCONTIGMEM kernels
    - Fixed segmentation violation when using the wrong vmlinux

  * New upstream version 4.0-4.2 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Added support for 2.6.22 kernels
    - account for case when number of pgdata nodes < nr_cpus
    - implement support for ia64 dom0/HV kdump dumpfile support
    - add --no_panic command line option to skip panic-task search
    - new "ps -r" command
    - implement CLEANUP extenson commands for "help -e"
    - implement new symbol_value_module() lookup for extensions

 -- Troy Heber <troyh@debian.org>  Tue, 17 Jul 2007 12:40:37 -0600

crash (4.0-4.1-2) unstable; urgency=low

  * Added patch to support 2.6.22 kernels where task_struct.thread_info was
    renamed to stack

 -- Troy Heber <troyh@debian.org>  Thu, 24 May 2007 13:06:14 -0600

crash (4.0-4.1-1) unstable; urgency=low

  * Dependable backtraces for x86_64
  * s390 and s390x backtrace commands match rq instead of runqueue
  * xencrash to use xen-syms instead of vmlinux kernel.

 -- Troy Heber <troyh@debian.org>  Fri, 27 Apr 2007 13:23:36 -0600

crash (4.0-3.22-1) unstable; urgency=low

  * New upstream version 4.0-3.21 (see
    http://people.redhat.com/anderson/crash.changelog)
    - get filename and line number info from BUG calls > 2.6.20 x86 and x86_64
    - help -n debug output function for compressed kdump files.
    - support for recent makedumpfile updates to handle 0 pages
    - support fo rfully-virtualized x86_64 xendumps of relocatable kernels.

 -- Troy Heber <troyh@debian.org>  Thu, 26 Apr 2007 12:48:00 -0600

crash (4.0-3.21-1) experimental; urgency=low

  * New upstream version 4.0-3.21 (see
    http://people.redhat.com/anderson/crash.changelog)
    - support for xensource ELF format dumps
    - numerous xencrash fixes
    - vtop fix for x86 PAE kernels
    - recognize ppc BOOKE processors
    - Ubuntu uname mismatch fix
    - 2.6.21 kernel initialization fix
    - ia64 xen support
    - mount, net, vm, swap command fixs for 2.6.20 kernels

 -- Troy Heber <troyh@debian.org>  Wed, 28 Mar 2007 15:39:08 -0600

crash (4.0-3.19-1) experimental; urgency=low

  * New upstream version 4.0-3.19 (see
    http://people.redhat.com/anderson/crash.changelog)
    -  Fix for support of paravirtual x86 xendumps created on > 4G machines,
    and active guest task had been assigned a page dir (cr3) with addr > 4GB.
    - Fix for the "kmem -p [page-struct-address]" command construct
    - Added a new "struct -u" option
    - Added new "rd -f" and "struct -f" options
    - Cosmetic fix to prevent double-printing of "kmem -p" and "kmem -v"
    headers

 -- Troy Heber <troyh@debian.org>  Wed,  7 Feb 2007 14:08:12 -0700

crash (4.0-3.18-1) experimental; urgency=low

  * New upstream version 4.0-3.18 (see
    http://people.redhat.com/anderson/crash.changelog)
    - Enhancement to the "mod" command to expand the number of section
    arguments to the internal "add-symbol-file" command issued to gdb
    - Seed up the initialization of crash sessions when running against
    multi-gigabyte xen kernels
    - Fix for a segmentation violation during "gathering task table data"
    phase on with xendumps.
    - Addressed several compiler warnings when using -D_FORTIFY_SOURCE=2
    - Fix for the s390x "bt -f" command option

 -- Troy Heber <troyh@debian.org>  Thu,  1 Feb 2007 10:15:30 -0700

crash (4.0-3.17-1) unstable; urgency=low

  * New upstream version 4.0-3.17 (see
    http://people.redhat.com/anderson/crash.changelog)
    - fixes the "dev -p" command
    - fix to recognize "linux_banner"
    - fix to recognize "__per_cpu_start" and "__per_cpu_end"
    - fix for the xencrash "dumpinfo -t" command
    - fix for x86_64 backtraces
    - add support for xendumps for fully-virtualized x86/x86_64 kernels when
    running on x86/x86_64 hosts.
    - introduced support for "xm save" dumpfiles of para-virtualized ia64
    kernels
    - Turn off the LKCD dumpfile-access "spinner" when "crash -s" is used
    - Support LKCD "map" files in lieu of standard System.map files


 -- Troy Heber <troyh@debian.org>  Wed, 17 Jan 2007 09:16:36 -0700

crash (4.0-3.14-1) unstable; urgency=low

  * New upstream version 4.0-3.14 (see
    http://people.redhat.com/anderson/crash.changelog)
    - adds support for Xencrash
    - new command to display per-cpu variables
    - Use dwarf CFI data for unwind on x86_64
    - x86 fix for backtrace comand
    - fix for DISCONFIGMEM on ia64 >= 2.6.18
    - fixed irq command for >= 2.6.17

 -- Troy Heber <troyh@debian.org>  Thu,  7 Dec 2006 10:36:07 -0700

crash (4.0-3.7-1) unstable; urgency=medium

  * New upstream version 4.0-3.7 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Fix for 3-level page tables on IA-64
  * new sig -g option


 -- Troy Heber <troyh@debian.org>  Fri, 13 Oct 2006 09:38:31 -0600

crash (4.0-3.6-1) unstable; urgency=low

  * New upstream version 4.0-3.6 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Fri, 06 Oct 2006 08:22:16 -0600

crash (4.0-3.5-1) unstable; urgency=low

  * New upstream version 4.0-3.5 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Mon,  2 Oct 2006 15:58:04 -0600

crash (4.0-3.4-1) unstable; urgency=low

  * New upstream version 4.0-3.4 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Tue, 19 Sep 2006 14:10:59 -0600

crash (4.0-3.3-1) unstable; urgency=low

  * New upstream version 4.0-3.3 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Fri,  8 Sep 2006 11:05:29 -0600

crash (4.0-3.2-1) unstable; urgency=low

  * New upstream version 4.0-3.2 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Mon, 28 Aug 2006 08:20:18 -0600

crash (4.0-3.1-1) unstable; urgency=low

  * New upstream version 4.0-3.1 (see
    http://people.redhat.com/anderson/crash.changelog)
  * removing NR_CPUS patch

 -- Troy Heber <troyh@debian.org>  Fri, 04 Aug 2006 13:39:43 -0600

crash (4.0-2.31-1) unstable; urgency=low

  * New upstream version 4.0-2.31 (see
    http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troyh@debian.org>  Fri,  4 Aug 2006 13:39:15 -0600

crash (4.0-2.21-1) unstable; urgency=low

  * New upstream version 4.0-2.21 (see
    http://people.redhat.com/anderson/crash.changelog)
  * fix bt on ia64 with 64k page size.

 -- Troy Heber <troyh@debian.org>  Wed, 15 Mar 2006 13:48:48 -0700

crash (4.0-2.18-2) unstable; urgency=low

  * Changing my email address

 -- Troy Heber <troyh@debian.org>  Wed, 11 Jan 2006 13:24:39 -0700

crash (4.0-2.18-1) unstable; urgency=low

  * New upstream version 4.0-2.18 (see
    http://people.redhat.com/anderson/crash.changelog)
  * removing patch to fix v8/v9 dump_header size mismatch, it's in this
    release.
  * alpha lval cast fix from Ben Hutchings (closes: #337871)

 -- Troy Heber <troy.heber@hp.com>  Thu, 05 Jan 2006 09:38:00 -0700

crash (4.0-2.16-1) unstable; urgency=low

  * New upstream version 4.0-2.16 (see
    http://people.redhat.com/anderson/crash.changelog)
  * Adding patch to fix v8/v9 dump_header size mismatch

 -- Troy Heber <troy.heber@hp.com>  Wed, 14 Dec 2005 15:38:38 -0700

crash (4.0-2.2-1) unstable; urgency=low

  * New upstream version 4.0-2.2 (see
      http://people.redhat.com/anderson/crash.changelog)

 -- Troy Heber <troy.heber@hp.com>  Fri, 12 Aug 2005 13:56:41 -0600

crash (3.10-13.10-2) unstable; urgency=low

  * Rebuilind crash in an environment that properly picks up
    libncurses in ${shlibs:Depends} (Closes: #318367)
  * Added debian/compat

 -- Micah Anderson <micah@debian.org>  Thu, 21 Jul 2005 21:46:46 +0000

crash (3.10-13.10-1) unstable; urgency=medium

  * New upstream version 3.10-13.10
  * Updates standards to 3.6.2.1
  * fixes declares-possibly-conflicting-debhelper-compat-versions

 -- Troy Heber <troy.heber@hp.com>  Wed, 29 Jun 2005 13:06:37 -0600

crash (3.10-13.9-1) unstable; urgency=medium

  * New upstream version 3.10-13.9 (closes: #293657)
  * Removing 01_Alpha_FTBS_fix.dpatch because it's now upstream

 -- Troy Heber <troy.heber@hp.com>  Fri, 10 Jun 2005 10:59:49 -0600

crash (3.10-11-3) unstable; urgency=medium

  * Updated debian/control description to integrate with LKCD suite
  * Updated debian/control to Suggest kernel-patch-lkcd and dumputils

 -- Micah Anderson <micah@debian.org>  Mon, 14 Mar 2005 15:23:19 -0600

crash (3.10-11-2) unstable; urgency=medium

  * Moving Architecture to any
  * Adding patch to move ia64 NR_CPUS to 64 to match kernel-patch-LKCD

 -- Troy Heber <troy.heber@hp.com>  Mon, 14 Mar 2005 13:42:43 -0700

crash (3.10-11-1) unstable; urgency=medium

  * New upstream version 3.10-11
  * New maintainer Troy Heber <troy.heber@hp.com>
  * New co-maintainer Micah Anderson <micah@debian.org>
  * Patch to fix FTBS on Alpha, sent patch upstream as well.

 -- Troy Heber <troy.heber@hp.com>  Wed, 02 Mar 2005 12:04:03 -0700

crash (3.8-2.1-3) unstable; urgency=low

  * Add missing Build-Depend on dbs. (closes: #258046)

 -- Josh Huber <huber@debian.org>  Wed,  7 Jul 2004 13:18:05 +0000

crash (3.8-2.1-2) unstable; urgency=low

  * Update to debhelper compat version 4

 -- Josh Huber <huber@debian.org>  Fri, 25 Jun 2004 13:16:45 +0000

crash (3.8-2.1-1) unstable; urgency=low

  * New upstream release! (closes: #249954)
  * Misc packaging fixes:
    + Repackaged with DBS, due to difficult source distribution.
    + Brought man page in-line with actual command line options.
    + Include changelog from distribution site.

 -- Josh Huber <huber@debian.org>  Wed, 23 Jun 2004 18:25:59 +0000

crash (3.3-1.2) unstable; urgency=low

  * Non-maintainer upload
  * Fixed build problems with gcc-3.3 (multiline strings). (Closes: #196710)
  * debian/copyright: Fixed upstream URI. (Closes: #197985)

 -- Marc Brockschmidt <marc@dch-faq.de>  Sun, 26 Oct 2003 13:31:57 +0100

crash (3.3-1.1) unstable; urgency=low

  * NMU (RC bug almost 4 months old).
  * debian/control:
    + Package description is no longer a full sentence.
    + Set policy to 3.5.10.
  * debian/copyright:
    + Added the GPL location blurb.
  * debian/rules:
    + Set the debhelper build dependency to >=2.0.
  * Removed "case NULL:" constructs with "case '\0':" in various places to
    fix compilation (Closes: #180190).
  * Replaced "cc" with "gcc" in the Makefile.

 -- Sam Hocevar (Debian packages) <sam+deb@zoy.org>  Fri,  6 Jun 2003 00:51:57 +0200

crash (3.3-1) unstable; urgency=low

  * New upstream release (Closes: #134967)

 -- Josh Huber <huber@debian.org>  Fri,  1 Mar 2002 10:51:00 -0500

crash (3.2-1) unstable; urgency=low

  * New upstream release. Adds IA64 support.

 -- Josh Huber <huber@debian.org>  Thu, 17 Jan 2002 12:25:49 -0500

crash (3.1-4) unstable; urgency=medium

  * Fixed missing build-depends on libncurses.  Should build on the
    autobuilders now

 -- Josh Huber <huber@debian.org>  Fri, 30 Nov 2001 16:57:44 -0500

crash (3.1-3) unstable; urgency=low

  * Fixed false-positive builds (hopefully no packages with missing
    binaries now)

 -- Josh Huber <huber@debian.org>  Tue, 20 Nov 2001 13:35:40 -0500

crash (3.1-2) unstable; urgency=low

  * Added binutils-dev and zlib1g-dev to the build-depends
    (closes #114061)

 -- Josh Huber <huber@debian.org>  Mon,  1 Oct 2001 11:22:08 -0400

crash (3.1-1) unstable; urgency=low

  * New upstream version (3.1)
    (note, I never uploaded the 3.0 package)

 -- Josh Huber <huber@debian.org>  Tue, 25 Sep 2001 11:31:50 -0400

crash (3.0-1) unstable; urgency=low

  * New upstream version (3.0)

 -- Josh Huber <huber@debian.org>  Wed, 15 Aug 2001 19:41:25 -0400

crash (2.6-1) unstable; urgency=low

  * new release (closes: #90895)

 -- Josh Huber <huber@debian.org>  Mon, 26 Mar 2001 15:54:55 -0500

crash (2.5-2) unstable; urgency=low

  * fixed maintainer address

 -- Josh Huber <huber@debian.org>  Tue, 12 Dec 2000 23:33:41 -0500

crash (2.5-1) unstable; urgency=low

  * new upstream version

 -- Josh Huber <huber@debian.org>  Sat,  9 Dec 2000 10:52:06 -0500

crash (2.4-1) unstable; urgency=low

  * Initial Release.

 -- Josh Huber <huber@mclx.com>  Tue, 10 Oct 2000 18:00:20 -0400

